*** Settings ***
Library           SeleniumLibrary
Library           Collections
Library           String
Library           OperatingSystem
Resource          ../Variables/OCAIP_Variables.txt
Resource          ./Common_Keywords.txt    #Library    RequestsLibrary
Library           DateTime
Library           Dialogs

*** Keywords ***
Suite Setup
    [Documentation]    Setup for OCAIP test suite.
    ...    - Set Selenium operation delay between each keyword.
    ...    - Update chrome web driver if needed.
    ...    - Set time stamp as prefix of various names for this test to prevent the same name from different tests.
    Set Library Search Order    OperatingSystem    SSHLibrary
    ${uuid}    Run    python3 -c "import uuid; print(uuid.uuid4().hex)"
    Set Suite Variable    ${gTemp folder path}    ${gTemp parent folder path}${/}Temp_${uuid}
    Create Directory    ${gTemp folder path}
    Update chromedriver
    # Set up time stamp for this test run.
    ${Year}    ${Month}    ${Day}    ${Hour}    ${Min}    ${Second}=    Get Time
    ...    year,month,day,hour,min,sec
    Set Suite Variable    ${Time prefix}    ${Hour}${Min}${Second}
    ${SUITE NAME}=    Replace String    ${SUITE NAME}    ${SPACE}    _
    Set Suite Variable    ${SUITE NAME}    ${SUITE NAME}_${uuid}
    Run Keyword And Ignore Error    Log Website Version

Suite Teardown
    [Documentation]    Teardown for OCAIP test suite.
    ...
    ...    - Close all browsers in case there's still browser exists.
    ...    - Force killing chromedriver.exe process since it might still be there.
    Close All Browsers
    ${System}=    Evaluate    platform.system()    platform
    Run Keyword If    "${System}" != "Windows"    Run    sh ${CURDIR}${/}..${/}Scripts${/}close.sh
    Remove Directory    ${gTemp folder path}    recursive=True
    Remove Files    ${CURDIR}${/}..${/}Temp${/}${SUITE NAME}*.txt
    ${Output}=    Run    TASKKILL /IM chromedriver.exe /F
    Log    ${Output}

Compatibility Teardown
    [Documentation]    Teardown for docker and windows
    ...    -Close all browsers
    ...    -Kill the zombie process on docker (when use docker)
    [Arguments]    ${Topic ID}=${EMPTY}
    Run Keyword If Test Failed    Capture Page Screenshot
    Run Keyword If    "${Topic ID}" != "${EMPTY}"    Run Keywords    Change Topic Date    ${Topic ID}    Operation=END_JOIN
    ...    AND    Change Topic Date    ${Topic ID}    Operation=END_TOPIC
    Close All Browsers
    ${System}=    Evaluate    platform.system()    platform
    Run Keyword If    "${System}" != "Windows"    Run    sh ${CURDIR}${/}..${/}Scripts${/}close.sh

Get Current Browser
    [Arguments]    ${Which Browser}=${EMPTY}
    [Documentation]    Return current browser.
    ${System}=    Evaluate    platform.system()    platform
    ${Which Browser}=    Run Keyword If    "${Which Browser}"=="${EMPTY}" and "${System}" == "Windows"    Set Variable    chrome
    ...    ELSE IF    "${Which Browser}"=="${EMPTY}"    Get Environment Variable    BROWSER
    ...    ELSE    Set Variable    ${Which Browser}
    [Return]    ${Which Browser}

Open Browser to Page
    [Arguments]    ${URL}    ${Block Image}=True  ${Window width}=1920   ${Window height}=1080    ${Mobile}=False    ${Lang}=zh-TW    ${Which Browser}=${EMPTY}
    [Documentation]    Opens Specific Browser to a given web page.
    ${Which Browser}=    Get Current Browser    Which Browser=${Which Browser}
    Run Keyword If    "${Which Browser}" == "chrome"    Open Chrome Browser to Page    ${URL}    ${Block Image}  Window width=${Window width}   Window height=${Window height}    Mobile=${Mobile}    Lang=${Lang}
    ...    ELSE IF    "${Which Browser}" == "firefox"    Open Firefox Browser to Page    ${URL}    ${Block Image}  Window width=${Window width}   Window height=${Window height}    Lang=${Lang}

Open Chrome Browser to Page
    [Arguments]    ${URL}    ${Block Image}=True  ${Window width}=1920   ${Window height}=1080    ${Mobile}=False    ${Lang}=zh-TW
    [Documentation]    Opens Chrome to a given web page.
    ...    For more information on what capabilities that _Google Chrome_
    ...    supports, see [https://sites.google.com/a/chromium.org/chromedriver/capabilities%7Cthis Capabilities & ChromeOptions page].
    ...    - ${URL}: the url want to open
    ${System}=    Evaluate    platform.system()    platform
    Run Keyword If    "${System}" != "Windows"    Set Environment Variable    LANGUAGE    ${Lang}
    ${chrome_options}=    Evaluate    sys.modules['selenium.webdriver'].ChromeOptions()    sys
    Comment    ${chrome_method}=    Evaluate    sys.modules['selenium.webdriver'].Chrome()    sys
    Call Method    ${chrome_options}    add_argument    --lang\=${Lang}
    #Call Method    ${chrome_options}    add_argument    --start-maximized
    Comment    Run Keyword If    "${System}" != "Windows"    Call Method    ${chrome_options}    add_argument    headless
    Comment    Call Method    ${chrome_options}    add_argument    --proxy-server\='direct://'
    Comment    Call Method    ${chrome_options}    add_argument    --proxy-bypass-list\=*
    Comment    Call Method    ${chrome_options}    add_argument    headless
    Comment    Call Method    ${chrome_options}    add_argument    disable-gpu
    Run Keyword If    "${System}" != "Windows"    Call Method    ${chrome_options}    add_argument    --no-sandbox
    Run Keyword If    "${System}" != "Windows"    Call Method    ${chrome_options}    add_argument    --disable-dev-shm-usage
    Run Keyword If    "${System}" != "Windows"    Call Method    ${chrome_options}    add_argument    --disable-extensions
    &{chrome_options.prefs}=    Create Dictionary    intl.accept_languages=${Lang}    download.default_directory=${gDefault download dir}    download.prompt_for_download=False
    &{chrome_options.prefs}=    Run Keyword If    "${Block Image}" == "True"    Create Dictionary    intl.accept_languages=${Lang}    download.default_directory=${gDefault download dir}    download.prompt_for_download=False
    #profile.managed_default_content_settings.images=${2}
    Call Method    ${chrome_options}    add_experimental_option    prefs    ${chrome_options.prefs}
    &{chrome_options.mobile}=    Create Dictionary    width=${${Window width}}    height=${${Window height}}    pixelRatio=${1.0}
    &{chrome_options.mobile}=    Create Dictionary    deviceMetrics=&{chrome_options.mobile}    userAgent=Mozilla/5.0 (Linux; Android 4.2.1; en-us; Nexus 5 Build/JOP40D) AppleWebKit/535.19 (KHTML, like Gecko) Chrome/18.0.1025.166 Mobile Safari/535.19
    ${service args}=    Create List    --log-path=${OUTPUT DIR}${/}chromedriver.log
    Run Keyword If    "${Mobile}" == "True"    Call Method    ${chrome_options}    add_experimental_option    mobileEmulation    ${chrome_options.mobile}
    ${Chromedriver path}=    Run Keyword If    "${System}" == "Windows"    Run    where chromedriver
    ...    ELSE    Run    which chromedriver
    Run Keyword If    os.sep == '/'    Create Webdriver    Chrome    chrome_options=${chrome_options}    executable_path=${Chromedriver path}    service_args=${service args}
    ...    ELSE    Create Webdriver    Chrome    chrome_options=${chrome_options}    service_args=${service args}
    # Set speed not working before Create Webdriver. Defalut 0s
    Set Selenium Speed    0.2 seconds
    Set Window Size    ${Window width}    ${Window height}    # Max Browser Size not work
    Go To    ${URL}

Open Firefox Browser to Page
    [Arguments]    ${URL}    ${Block Image}=True  ${Window width}=1920   ${Window height}=1080    ${Mobile}=False    ${Lang}=zh-TW
    [Documentation]    Opens Firefox to a given web page. (Developing en-US unavailable on Windows in this way)
    ${System}=    Evaluate    platform.system()    platform
    Run Keyword If    "${System}" != "Windows"    Set Environment Variable    LANGUAGE    ${Lang}
    ${Firefox_options}=    Evaluate    sys.modules['selenium.webdriver'].FirefoxProfile()    sys
    Call Method    ${Firefox_options}    set_preference    intl.accept_languages    ${Lang}
    Call Method    ${Firefox_options}    set_preference    browser.download.folderList    ${2}
    Call Method    ${Firefox_options}    set_preference    browser.download.dir    ${gDefault download dir}
    Call Method    ${Firefox_options}    set_preference    browser.helperApps.neverAsk.saveToDisk    application/zip,text/csv
    ${Gecko path}=    Run Keyword If    "${System}" == "Windows"    Run    where geckodriver
    ...    ELSE    Run    which geckodriver
    Run Keyword If    os.sep == '/'    Create Webdriver    Firefox    firefox_profile=${Firefox_options}    executable_path=${Gecko path}    firefox_binary=/usr/local/bin/firefox-${Lang}    log_path=${OUTPUT DIR}${/}geckodriver.log
    ...    ELSE    Create Webdriver    Firefox    firefox_profile=${Firefox_options}    firefox_binary=C:\\Program Files\\Firefox Developer Edition ${Lang}\\firefox.exe    log_path=${OUTPUT DIR}${/}geckodriver.log
    # Set speed not working before Create Webdriver. Defalut 0s
    Set Selenium Speed    0.2 seconds
    Set Window Size    ${Window width}    ${Window height}    # Max Browser Size not work
    Go To    ${URL}

Customized Mouse Over
    [Arguments]    ${Locator}    ${JS}=False
    [Documentation]    Due to it's need time to finish mouse over visual effect, so we customized a mouse over keyword to delay next action.
    ...    - ${Locator}: the element location (xpath)
    ...    - ${JS}: If Scroll Element Into View fail in Firefox, try execute javascript
    ${HP}=    Get Horizontal Position    ${Locator}
    ${VP}=    Get Vertical Position    ${Locator}
    Run Keyword If    "${JS}" == "True"    Execute Javascript    window.scrollTo(${HP},${VP})
    ...    ELSE    Scroll Element Into View    ${Locator}
    Wait Until Keyword Succeeds    10 secs    1 secs    Mouse Over    ${Locator}
    Sleep    0.5 s

Customized Select From List By Label
    [Arguments]    ${Locator}    ${Label}
    [Documentation]    Select From List By Label with contained text
    Click Element    ${Locator}
    Wait Until Element Is Visible    ${Locator}/option[contains(text(),'${Label}')]
    Click Element    ${Locator}/option[contains(text(),'${Label}')]

Wait Until Dom Ready
    [Documentation]    Wait until the dom is ready
    Wait Until Keyword Succeeds    10 secs    1secs    Test Dom Is Ready

Test Dom Is Ready
    [Documentation]    Execute javascript to check the dom readystate
    ${Ready State}=    Execute Javascript    return document.readyState
    Log    ${Ready State}
    #Verify the dom is ready or not
    Should Be Equal    complete    ${Ready State}

Login To Mailbox
    [Arguments]    ${Mail Account}=${gTest mail account}    ${Mail Password}=${gTest mail password}    ${Which Browser}=${EMPTY}
    [Documentation]    Login to specific mailbox
    ${Mail Service}    Run Keyword And Return Status    Should Contain    ${Mail Account}    protonmail
    Run Keyword If    "${Mail Service}" == "True"    Run Keywords
    ...    Login To ProtonMail    Mail Account=${Mail Account}    Mail Password=${Mail Password}    Which Browser=${Which Browser}
    ...    AND    Return From Keyword    protonmail
    ${Mail Service}    Run Keyword And Return Status    Should Contain    ${Mail Account}    gmail
    Run Keyword If    "${Mail Service}" == "True"    Run Keywords
    ...    Login To Gmail    Mail Account=${Mail Account}    Mail Password=${Mail Password}    Which Browser=${Which Browser}
    ...    AND    Return From Keyword    gmail

Login To Gmail
    [Arguments]    ${Mail Account}=${gTest gmail account}    ${Mail Password}=${gTest mail password}    ${Which Browser}=${EMPTY}
    [Documentation]    Login to gmail
    ...    - ${Mail Account}: the mail account
    ...    - ${Mail Password}: the mail password
    ...    - ${Which Browser}: which browser to be used, default is chrome.
    # Since 2020/10 often Link with locator 'id=gb_70' not found.So link to Gmail directly.
    Open Browser to Page    https://mail.google.com    Which Browser=${Which Browser}
    # enter account info
    ${flag}    Run Keyword And Return Status    Page Should Contain Element    id=identifierId
    Run Keyword If    "${flag}" == "True"    Wait Until Element Is Enabled    identifierId
    Run Keyword If    "${flag}" != "True"    Wait Until Element Is Enabled    id=Email
    Run Keyword If    "${flag}" == "True"    Input Text    identifierId    ${Mail Account}
    ...    ELSE    Input Text    id=Email    ${Mail Account}
    Run Keyword If    "${flag}" == "True"    Click Element    id=identifierNext
    ...    ELSE    Click Element    id=next
    Wait Until Element Is Visible    //div[@id="password" and contains(@class,"u3bW4e")]
    # enter password info
    Run Keyword If    "${flag}" == "True"    Wait Until Element Is Enabled    name=password
    Run Keyword If    "${flag}" != "True"    Wait Until Element Is Enabled    id=Passwd
    Run Keyword If    "${flag}" == "True"    Input Password    name=password    ${Mail Password}
    ...    ELSE    Input Password    id=Passwd    ${Mail Password}
    Run Keyword If    "${flag}" == "True"    Click Element    id=passwordNext
    ...    ELSE    Click Element    id=signIn

Login To ProtonMail
    [Arguments]    ${Mail Account}=${gTest protonmail account}    ${Mail Password}=${gTest mail password}    ${Which Browser}=${EMPTY}
    [Documentation]    Login to protonmail
    ...    - ${Mail Account}: the protonmail account
    ...    - ${Mail Password}: the protonmail password
    ...    - ${Which Browser}: which browser to be used, default is chrome.
    Open Browser to Page    https://old.protonmail.com/login    Which Browser=${Which Browser}
    Wait Until Element Is Visible    //button[@id="login_btn"]
    # enter account info
    Input Password    //input[@id="username"]    ${Mail Account}
    # enter password info
    Input Password    //input[@id="password"]    ${Mail Password}
    Click Element    //button[@id="login_btn"]
    Wait Until Element Is Visible    //li[@data-key="allmail"]    60
    Click Element    //li[@data-key="allmail"]

Open Registration Page
    [Arguments]    ${Mail Account}=${gTest mail account}    ${Mail Password}=${gTest mail password}    ${Which Browser}=${EMPTY}    ${Delete}=True
    [Documentation]    Open the registration email to enter the register page
    ...    - ${Mail Account}: the mail account
    ...    - ${Mail Password}: the mail password
    ...    - ${Which Browser}: which browser to be used, default is chrome.
    # go to mail
    ${Mail Service}=    Login To Mailbox    Mail Account=${Mail Account}    Mail Password=${Mail Password}    Which Browser=${Which Browser}
    # enter email content
    ${sender}=    Set Variable    AIdea 人工智慧共創平台
    ${title}=    Set Variable    註冊確認電子郵件
    # Gmail
    Run Keyword If    "${Mail Service}"=="gmail"    Run Keywords    Wait Until Page Contains    收件匣
    ...    AND    Wait Until Element Contains    //div[@class="UI"]//tbody//tr[not(contains(@class,"yO"))]    ${sender}    60
    ...    AND    Wait Until Element Contains    //div[@class="UI"]//tbody//tr[not(contains(@class,"yO"))]    ${title}    60
    ...    AND    Click Element At Coordinates    //div[@class="UI"]//tbody//tr[not(contains(@class,"yO"))]//td[5]//span[text()="${title}"]    20    0
    # ProtonMail
    ...    ELSE IF    "${Mail Service}"=="protonmail"    Run Keywords    Wait Until Page Contains    收件匣
    ...    AND    Wait Until Element Is Visible    //section[@class="conversation-wrapper"]/div[not(contains(@class,"read"))]//span[text()="${sender}"]    60
    ...    AND    Click Element At Coordinates    //section[@class="conversation-wrapper"]/div[not(contains(@class,"read"))]//span[contains(text(),"${title}")]    20    0
    # get the registration url
    ${reg_url}=    Wait Until Keyword Succeeds    30s    0.5s    Get Element Attribute    //a[contains(@href,"${gOCAIP sURL}/registration")]    href
    Log    ${reg_url}
    Run Keyword If    "${Delete}"=="True" and "${Mail Service}"=="gmail"    Run Keywords    Customized Mouse Over    //div[@gh="mtb"]
    ...    AND    Click Element    //div[@gh="mtb"]//div[@aria-label="刪除"]
    ...    ELSE IF    "${Delete}"=="True" and "${Mail Service}"=="protonmail"    Run Keywords    Click Element    //button[@data-action="delete"]
    ...    AND    Click Element    //button[@id="confirmModalBtn"]
    ...    AND    Wait Until Element Is Visible    //div[@role="alert"]
    ...    ELSE IF    "${Delete}"=="False" and "${Mail Service}"=="gmail"    Run Keywords    Customized Mouse Over    //div[@gh="mtb"]
    ...    AND    Click Element    //div[@gh="mtb"]//div[@aria-label="標示為未讀取"]
    ...    ELSE IF    "${Delete}"=="False" and "${Mail Service}"=="protonmail"    Click Element    //a[@data-action="unread"]
    Open Chrome Browser to Page    ${reg_url}
    Accept Cookie Consent

Open Resetpassword Page
    [Arguments]    ${Mail Account}=${gTest mail account}    ${Mail Password}=${gTest mail password}    ${Which Browser}=${EMPTY}    ${Delete}=True
    [Documentation]    Open the password reset email to enter the reset page
    ...    - ${Mail Account}: the mail account
    ...    - ${Mail Password}: the mail password
    ...    - ${Which Browser}: which browser to be used, default is chrome.
    # go to gmail
    ${Mail Service}=    Login To Mailbox    Mail Account=${Mail Account}    Mail Password=${Mail Password}    Which Browser=${Which Browser}
    # enter email content
    ${sender}=    Set Variable    AIdea 人工智慧共創平台
    ${title}=    Set Variable    重設密碼
    # Gmail
    Run Keyword If    "${Mail Service}"=="gmail"    Run Keywords    Wait Until Page Contains    收件匣
    ...    AND    Wait Until Element Contains    //div[@class="UI"]//tbody//tr[not(contains(@class,"yO"))]    ${sender}    60
    ...    AND    Wait Until Element Contains    //div[@class="UI"]//tbody//tr[not(contains(@class,"yO"))]    ${title}    60
    ...    AND    Click Element At Coordinates    //div[@class="UI"]//tbody//tr[not(contains(@class,"yO"))]//td[5]//span[text()="${title}"]    20    0
    # ProtonMail
    ...    ELSE IF    "${Mail Service}"=="protonmail"    Run Keywords    Wait Until Page Contains    收件匣
    ...    AND    Wait Until Element Is Visible    //section[@class="conversation-wrapper"]/div[not(contains(@class,"read"))]//span[text()="${sender}"]    60
    ...    AND    Click Element At Coordinates    //section[@class="conversation-wrapper"]/div[not(contains(@class,"read"))]//span[contains(text(),"${title}")]    20    0
    # get the registration url
    ${reg_url}=    Wait Until Keyword Succeeds    30s    0.5s    Get Element Attribute    //a[contains(@href,"${gOCAIP URL}/reset_password") and text()="重新設定密碼"]    href
    Log    ${reg_url}
    Run Keyword If    "${Delete}"=="True" and "${Mail Service}"=="gmail"    Run Keywords    Customized Mouse Over    //div[@gh="mtb"]
    ...    AND    Click Element    //div[@gh="mtb"]//div[@aria-label="刪除"]
    ...    ELSE IF    "${Delete}"=="True" and "${Mail Service}"=="protonmail"    Run Keywords    Click Element    //button[@data-action="delete"]
    ...    AND    Click Element    //button[@id="confirmModalBtn"]
    ...    AND    Wait Until Element Is Visible    //div[@role="alert"]
    ...    ELSE IF    "${Delete}"=="False" and "${Mail Service}"=="gmail"    Run Keywords    Customized Mouse Over    //div[@gh="mtb"]
    ...    AND    Click Element    //div[@gh="mtb"]//div[@aria-label="標示為未讀取"]
    ...    ELSE IF    "${Delete}"=="False" and "${Mail Service}"=="protonmail"    Click Element    //a[@data-action="unread"]
    Open Chrome Browser to Page    ${reg_url}

Open Discussion Notification Page
    [Arguments]    ${Mail Account}=${gTest mail account}    ${Mail Password}=${gTest mail password}    ${Which Browser}=${EMPTY}    ${Delete}=True    ${Post account}=${gTest account}     ${Post Message}=${EMPTY}
    [Documentation]    Open the discussion notification email to enter the page to check message content
    ...    - ${Mail Account}: the mail account
    ...    - ${Mail Password}: the mail password
    ...    - ${Which Browser}: which browser to be used, default is chrome.
    # go to gmail
    ${Mail Service}=    Login To Mailbox    Mail Account=${Mail Account}    Mail Password=${Mail Password}    Which Browser=${Which Browser}
    # enter email content
    ${sender}=    Set Variable    AIdea 人工智慧共創平台
    ${title}=    Set Variable    您管理的議題
    # Gmail
    Run Keyword If    "${Mail Service}"=="gmail"    Run Keywords    Wait Until Page Contains    收件匣
    ...    AND    Wait Until Element Contains    //div[@class="UI"]//tbody//tr[not(contains(@class,"yO"))]    ${sender}    60
    ...    AND    Wait Until Element Contains    //div[@class="UI"]//tbody//tr[not(contains(@class,"yO"))]    ${title}    60
    ...    AND    Click Element At Coordinates    //div[@class="UI"]//tbody//tr[not(contains(@class,"yO"))]//td[5]//span[text()="${title}"]    20    0
    # ProtonMail
    ...    ELSE IF    "${Mail Service}"=="protonmail"    Run Keywords    Wait Until Page Contains    收件匣
    ...    AND    Wait Until Element Is Visible    //section[@class="conversation-wrapper"]/div[not(contains(@class,"read"))]//span[text()="${sender}"]    60
    ...    AND    Click Element At Coordinates    //section[@class="conversation-wrapper"]/div[not(contains(@class,"read"))]//span[contains(text(),"${title}")]    20    0
    # get the discussion notification url
    ${reg_url}=    Wait Until Keyword Succeeds    30s    0.5s    Get Element Attribute    //a[contains(@href,"${gOCAIP sURL}/topic")]    href
    Log    ${reg_url}
    Run Keyword If    "${Delete}"=="True" and "${Mail Service}"=="gmail"    Run Keywords    Customized Mouse Over    //div[@gh="mtb"]
    ...    AND    Click Element    //div[@gh="mtb"]//div[@aria-label="刪除"]
    ...    ELSE IF    "${Delete}"=="True" and "${Mail Service}"=="protonmail"    Run Keywords    Click Element    //button[@data-action="delete"]
    ...    AND    Click Element    //button[@id="confirmModalBtn"]
    ...    AND    Wait Until Element Is Visible    //div[@role="alert"]
    ...    ELSE IF    "${Delete}"=="False" and "${Mail Service}"=="gmail"    Run Keywords    Customized Mouse Over    //div[@gh="mtb"]
    ...    AND    Click Element    //div[@gh="mtb"]//div[@aria-label="標示為未讀取"]
    ...    ELSE IF    "${Delete}"=="False" and "${Mail Service}"=="protonmail"    Click Element    //a[@data-action="unread"]
    Switch Browser    1
    Go To    ${reg_url}
    ${Latest msg location}=    Set Variable    //div[@id="topic-discuss"]//div[@class="message_list"][last()]
    Element Should Contain    ${Latest msg location}//div[contains(@class,"message_personal")]    ${Post account}
    Element Should Contain    ${Latest msg location}//div[contains(@class,"message_content")]//div[contains(@class,"m_content")]    ${Post Message}

Fill In Registration Info And Expect Error
    [Arguments]    ${User account}=${gTest register account}    ${User password}=${gTest mail password}    ${User confirm password}=${gTest mail password}
    ...    ${User last name}=天使    ${User first name}=大    ${User company name}=工研院    ${User department}=新聞系    ${Tax number}=00000000
    ...    ${Which Browser}=${EMPTY}    ${Msg from where}=common    ${Expected msg}=${EMPTY}    ${User phone}=090000000    ${type}=academy
    [Documentation]    Fill in the registration info on the registtration page and verify the error is triggered correctly
    ...    - ${User account}: the user account information for filling in
    ...    - ${User password}: the user password information for filling in
    ...    - ${User confirm password}: the confirm password information for filling in
    ...    - ${User last name}: the last name information for filling in
    ...    - ${User first name}: the first name information for filling in
    ...    - ${Tax number}: the tax information for filling in
    ...    - ${User department}: the department information for filling in
    ...    - ${Which Browser}: which browser to be used, default is chrome.
    ...    - ${Msg from where}: specify location the error message comes from. (``common`` | ``username`` | \ ``last_name`` | ``first_name`` | ``area`` | ``department`` | ``password`` | ``confirm_password`` )
    ...    - ${Expected msg}: expect the error message contains this string. (Default is expecting no error.)
    #fill in basic information
    Run Keyword If    "${Msg From where}"!="username"    Input Text    id=account_field    ${User account}
    Run Keyword If    "${Msg From where}"!="last_name"    Input Text    id=last_name    ${User last name}
    Run Keyword If    "${Msg From where}"!="first_name"    Input Text    id=first_name    ${User first name}
    Run Keyword If    "${Msg From where}"!="tax" and "${type}"=="business"    Input Text    id=tax_id_number    ${Tax number}
    Run Keyword If    "${Msg From where}"!="area" and "${type}"=="academy"     Click Element    //select[@id="area"]//option[3]    #臺北市
    Run Keyword If    "${Msg From where}"!="area" and "${type}"=="academy"    Click Element    //select[@id="school-name"]//option[2]    #國立政治大學
    Run Keyword If    "${Msg From where}"!="company" and "${type}"=="business"    Input Text    id=school-name    ${User company name}
    Run Keyword If    "${Msg From where}"!="department"    Input Text    id=affiliation_department    ${User department}
    Run Keyword If    "${Msg From where}"!="phone"    Input Text    id=mobile_phone    ${User phone}
    Run Keyword If    "${Msg From where}"!="password"    Input Password    id=new_password    ${User password}
    Run Keyword If    "${Msg From where}"!="password"    Input Password    id=confirm_password    ${User confirm password}
    Run Keyword If    "${Msg From where}"=="alert" and "${Expected msg}" != "${EMPTY}"    Run Keywords
    ...    Wait Until Page Contains    ${Expected msg}
    ...    AND    Return From Keyword    0
    Run Keyword If    "${Msg From where}"!="agreement"    Click Element    //label[@for="register_agreement"]
    Click Element    id=registration_submit
    # Verify the error message is match expect message or not
    ${Validation msg}=    Run Keyword If    "${Expected msg}" != "${EMPTY}" and "${Msg from where}" != "common"    Execute Javascript    return $(".ui-tooltip").prevObject[0].activeElement.validationMessage    # Get error message.
    Run Keyword If    "${Expected msg}" != "${EMPTY}" and "${Msg from where}" != "common"    Run Keywords    Should Contain    ${Validation msg}    ${Expected msg}
    ...    AND    Return From Keyword    0    # If match expected error, finish this keyword.
    # For common
    Run Keyword If    "${Expected msg}" != "${EMPTY}"    Run Keywords    Page Should Contain    ${Expected msg}
    ...    AND    Return From Keyword    0
    #Verify registration is success or not
    Page Should Not Contain Element    //div[@id="account_error"]
    Wait Until Page Contains    完成註冊
    Wait Until Page Contains    返回首頁
    Click Button    //button[@class="btn btn_mge" and text()="返回首頁"]
    #Login To Check Is Success or not
    Login To OCAIP    ${User account}    ${User password}    Open browser=false

Fill In Reset Password Info
    [Arguments]    ${User password}    ${User confirm password}
    [Documentation]    Fill in the reset password information include password and confirm password
    ...    - ${User password}: the new user password
    ...    - ${User confirm password}: the confirm new user password
    #input information
    Fill In Reset Password Info And Expected Error    ${User password}    ${User confirm password}

Fill In Reset Password Info And Expected Error
    [Arguments]    ${User password}    ${User confirm password}    ${Msg from where}=common    ${Expected msg}=${EMPTY}
    [Documentation]    Fill in the reset password information include password and confirm password and verify the error is triggered correctly
    ...    - ${User password}: the new user password
    ...    - ${User confirm password}: the confirm new user password
    ...    - ${Msg from where}: specify location the error message comes from (``common`` | ``password`` | ``confirm_password`` )
    ...    - ${Expected msg}: expect the error message contains this string. (Default is expecting no error.)
    # Specify location and attribute according to input argument.
    &{Msg location}=    Create Dictionary    common=nothing    password=new_password    confirm_password=confirm_new_password    # Locator (For Get Element Attribute)
    &{Msg attribute}=    Create Dictionary    common=innerHTML    password=validationMessage    confirm_password=validationMessage    # Attribute (For Get Element Attribute)
    &{Location validity}=    Create Dictionary    common=nothing    password=var user_e = document.getElementById("new_password"); return user_e.checkValidity();    confirm_password=var user_e = document.getElementById("confirm_new_password"); return user_e.checkValidity();    # Javascripts to check the validity, only username and password needs to be checked.
    #input information
    Input Password    id=new_password    ${User password}
    Input Password    id=confirm_new_password    ${User confirm password}
    Click Element    id=submit
    # Verify the error message is match expect message or not
    ${Element validity}=    Run Keyword If    "${Expected msg}" != "${EMPTY}" and "${Msg from where}" != "common"    Execute Javascript    ${Location validity.${Msg from where}}    # Get element validity: only username and password field have required attribute, so their validity should be checked.
    ${Validation msg}=    Run Keyword If    "${Expected msg}" != "${EMPTY}" and "${Msg from where}" != "common"    Get Element Attribute    ${Msg location.${Msg from where}}    ${Msg attribute.${Msg from where}}    # Get error message.
    Run Keyword If    "${Expected msg}" != "${EMPTY}" and "${Msg from where}" != "common"    Should Be Equal As Strings    ${Element validity}    False
    Run Keyword If    "${Expected msg}" != "${EMPTY}" and "${Msg from where}" != "common"    Run Keywords    Should Be Equal    ${Validation msg}    ${Expected msg}
    ...    AND    Return From Keyword    0    # If match expected error, finish this keyword.
    Run Keyword If    "${Expected msg}" != "${EMPTY}"    Run Keywords    Page Should Contain    ${Expected msg}
    ...    AND    Return From Keyword    0
    #Verify the page is show correctly or not
    Sleep    2s
    Page Should Contain    重設密碼已完成

Get Admin Token
    [Arguments]    ${User account}=${gTest admin account}    ${User password}=${gTest admin password}
    [Documentation]    Return User Token
    ${Exist}=    Run Keyword And Return Status    File Should Exist    ${CURDIR}${/}..${/}Scripts${/}${User account}_token.txt
    ${Token}=    Run Keyword If    "${Exist}"=="True"    Get File    ${CURDIR}${/}..${/}Scripts${/}${User account}_token.txt
    ${Unblock result}=    Run Keyword If    "${Exist}"=="True"    Run    python3 ${CURDIR}${/}..${/}Scripts${/}ip_unblock.py -s ${gTest server argument} -c
    Run Keyword If    "${Exist}"=="False" or "${Unblock result}"=="403"    Login To OCAIP And Expect Error    ${User account}    ${User password}
    ${Cookie}=    Run Keyword If    "${Exist}"=="False" or "${Unblock result}"=="403"    Get Cookie    JWT
    ...    ELSE IF    "${Exist}"=="True"   Create Dictionary    value=${Token}
    Run Keyword If    "${Exist}"=="False" or "${Unblock result}"=="403"    Run Keywords    Create File    ${CURDIR}${/}..${/}Scripts${/}${User account}_token.txt    ${Cookie.value}
    ...    AND    Logout OCAIP
    [Return]    ${Cookie.value}

Check IP Block
    [Documentation]    Reset Blocking IP addresses
    ${Block}=    Run Keyword And Return Status    Wait Until Page Contains Element    //div[@id="resend_email"]    timeout=3
    ${Unblock result}=    Run Keyword If    "${Block}"=="True"    Run    python3 ${CURDIR}${/}..${/}Scripts${/}ip_unblock.py -s ${gTest server argument}
    Run Keyword If    "${Block}"=="True"    Run Keywords    Should Contain    ${Unblock result}    解鎖成功    msg=Unblock IP Failed!
    ...    AND    Go To    ${gOCAIP URL}
    [Return]    ${Block}

Clear Mail Box
    [Arguments]    ${Mail Account}=${gTest mail account}    ${Mail Password}=${gTest mail password}    ${Which Browser}=${EMPTY}    ${Sequence}=1    ${Title}=
    [Documentation]    Open gmail and delete first email
    ...    - ${Mail Account}: the mail account
    ...    - ${Mail Password}: the mail password
    ...    - ${Which Browser}: which browser to be used, default is chrome.
    # go to gmail
    ${Mail Service}=    Login To Mailbox    Mail Account=${Mail Account}    Mail Password=${Mail Password}    Which Browser=${Which Browser}
    # enter email content
    # Gmail
    Run Keyword If    "${Mail Service}"=="gmail"    Wait Until Page Contains    收件匣
    Run Keyword If    "${Sequence}"=="all" and "${Mail Service}"=="gmail"    Run Keywords    Input Text    //input[@placeholder="搜尋郵件"]    ${Title}
    # delete all
    ...    AND    Press Keys    //input[@placeholder="搜尋郵件"]    ENTER
    ...    AND    Customized Mouse Over    //div[@gh="mtb"]
    ...    AND    Click Element    //div[@gh="mtb"]//span[@role="checkbox"]
    # delete specific first
    ...    ELSE IF    "${Mail Service}"=="gmail"    Run Keywords
    ...    Wait Until Page Contains Element    //div[@class="UI"]//tbody//span[contains(text(),"${Title}")]    60    error=Mail "${Title}" did not appear
    ...    AND    Click Element    //div[@class="UI"]//tbody//span[contains(text(),"${Title}")]/ancestor::tr//div[@role="checkbox"]
    ...    AND    Customized Mouse Over    //div[@gh="mtb"]
    Run Keyword If    "${Mail Service}"=="gmail"    Run Keywords    Sleep    10s    AND    Click Element    //div[@gh="mtb"]//div[@aria-label="刪除"]
    # ProtonMail
    Run Keyword If    "${Mail Service}"=="protonmail"    Wait Until Page Contains    收件匣
    Run Keyword If    "${Sequence}"=="all" and "${Mail Service}"=="protonmail"    Run Keywords    Input Text    //input[@placeholder="搜尋訊息"]    ${Title}
    # delete all
    ...    AND    Press Keys    //input[@placeholder="搜尋訊息"]    ENTER
    ...    AND    Click Element    //input[@id="selectAll"]
    # delete specific first
    ...    ELSE IF    "${Mail Service}"=="protonmail"    Run Keywords
    ...    Wait Until Page Contains Element    //section[@class="conversation-wrapper"]/div[not(contains(@class,"read"))]//input[contains(@aria-label,"${Title}") and @type="checkbox"]    60    error=Mail "${Title}" did not appear
    ...    AND    Click Element    //section[@class="conversation-wrapper"]/div[not(contains(@class,"read"))]//input[contains(@aria-label,"${Title}") and @type="checkbox"]
    Run Keyword If    "${Mail Service}"=="protonmail"    Run Keywords    Click Element    //button[@data-action="delete"]
    ...    AND    Click Element    //button[@id="confirmModalBtn"]
    ...    AND    Wait Until Element Is Visible    //div[@role="alert"]

Input Username And Password
    [Arguments]    ${User account}=${gTest account}    ${User Password}=${gTest password}    ${Window width}=1920
    [Documentation]    Input username, password and submit (for IP unblock)
    Run Keyword If    ${Window width} < 768    Run Keywords    Wait Until Page Contains Element    //img[@id="index_menu_burger"]
    ...    AND    Click Element At Coordinates    //img[@id="index_menu_burger"]    0    0
    ...    ELSE    Wait Until Page Contains Element    //div[@id="navbar"]
    Click Element    //button[text()='登入']
    Wait Until Element Is Visible    id=username    10s
    Input Text    id=username    ${User account}
    Input Password    id=password    ${User Password}
    Click Button    id=submit
    
Login To OCAIP
    [Arguments]    ${User account}=${gTest account}    ${User Password}=${gTest password}    ${Which Browser}=${EMPTY}    ${Login status}=common    ${Open browser}=true    ${Block Image}=True
    [Documentation]    Login to OCAIP platform with given account/password and which kind of browser.
    ...
    ...    - Note that this keyword will open a new browser
    Get Admin Token
    Login To OCAIP And Expect Error    ${User account}    ${User Password}    Which Browser=${Which Browser}    Open browser=${Open browser}    Block Image=${Block Image}

Login To OCAIP And Expect Error
    [Arguments]    ${User account}=${gTest normal account}    ${User Password}=${gTest normal password}    ${Which Browser}=${EMPTY}    ${Msg from where}=common    ${Expected msg}=${EMPTY}    ${Open browser}=true    ${Window width}=1920    ${Window height}=1080    ${Mobile}=False
    ...    ${Block Image}=True
    [Documentation]    Open a browser, login to OCAIP platform and expect error message if needed.
    ...
    ...    - ${User account}: account to login.
    ...
    ...    - ${User password}: password to login.
    ...
    ...    - ${Which Browser}: which browser to be used, default is chrome.
    ...
    ...    - ${Msg from where}: specify location the error message comes from. (``common`` | ``username`` | ``password``)
    ...
    ...    - ${Expected msg}: expect the error message contains this string. (Default is expecting no error.)
    ...
    ...    - ${Login status}: specify the user is first login or not.( ``common`` | ``firstuse`` | ``no sign``)
    ...
    ...    - ${Open browser}: if the keyword will generate a new instance( ``true`` | ``false`` )
    ...
    ...    Example:
    ...    | Login To OCAIP And Expect Error | ${gTest account} | ${EMPTY} | Msg from where=password | \ Expected msg=請填寫這個欄位 |
    # Specify location and attribute according to input argument.
    &{Msg location}=    Create Dictionary    common=//p[@class="help-block"]    username=username    password=password    # Locator (For Get Element Attribute)
    &{Msg attribute}=    Create Dictionary    common=innerHTML    username=validationMessage    password=validationMessage    # Attribute (For Get Element Attribute)
    &{Location validity}=    Create Dictionary    common=nothing    username=var user_e = document.getElementById("username"); return user_e.checkValidity();    password=var user_e = document.getElementById("password"); return user_e.checkValidity();    # Javascripts to check the validity, only username and password needs to be checked.
    #${gOriginal browser ID}=    Open Browser    ${gOCAIP URL}    ${Which Browser}
    #Maximize Browser Window
    Run Keyword If    "${Open browser}"=="true"    Open Browser to Page    ${gOCAIP URL}    ${Block Image}    Window width=${Window width}    Window height=${Window height}    Mobile=${Mobile}    Which Browser=${Which Browser}
    # Login with username and password.
    #Wait Until Page Contains Element    id=login
    #Click Button    id=login
    Accept Cookie Consent
    Input Username And Password    User account=${User account}    User Password=${User Password}    Window width=${Window width}
    ${Block}=     Check IP Block
    Run Keyword If    "${Block}"=="True"    Input Username And Password    User account=${User account}    User Password=${User Password}    Window width=${Window width}
    # Verify if expect error
    ${Element validity}=    Run Keyword If    "${Expected msg}" != "${EMPTY}" and "${Msg from where}" != "common"    Execute Javascript    ${Location validity.${Msg from where}}    # Get element validity: only username and password field have required attribute, so their validity should be checked.
    ${Validation msg}=    Run Keyword If    "${Expected msg}" != "${EMPTY}"    Get Element Attribute    ${Msg location.${Msg from where}}    ${Msg attribute.${Msg from where}}    # Get error message.
    Run Keyword If    "${Expected msg}" != "${EMPTY}" and "${Msg from where}" != "common"    Should Be Equal As Strings    ${Element validity}    False
    Run Keyword If    "${Expected msg}" != "${EMPTY}"    Run Keywords    Should Contain    ${Validation msg}    ${Expected msg}
    ...    AND    Return From Keyword    0    # If match expected error, finish this keyword.
    # Verify if expect success
    Wait Until Page Does Not Contain Element    //button[text()="登入"]
    Element Should Not Be Visible    //a[@href="/logout" and text()="登出"]
    # Verify if first login account and need to sign eula
    ${eulacheck}    Run Keyword And Return Status    Check EULA
    # Sign EULA
    Run Keyword If    "${eulacheck}" == "False"    Click Element    //label[@class="check-box" and @for="eula_agreement"]
    Run Keyword If    "${eulacheck}" == "False"    Click Element    id=submit

Logout OCAIP
    [Arguments]    ${Window width}=1920
    [Documentation]    Log out from OCAIP platform, this keyword will *NOT* close browser.
    Run Keyword If    ${Window width} < 768    Run Keywords    Wait Until Page Contains Element    //img[@id="index_menu_burger"]
    ...    AND    Click Element At Coordinates    //img[@id="index_menu_burger"]    0    0
    ...    ELSE    Run Keywords    Customized Mouse Over    //div[@id="navbar"]//div[@id="is_login_li"]
    ...    AND    Click Element    //div[@id="navbar"]//div[@id="is_login_li"]
    Click Element At Coordinates    //div[@id="navbar"]//a[@href="/logout"]    20    0
    #Click Element    //div[@id="navbar"]//a[@href="/logout"]
    Comment    Wait Until Page Contains Element    id=login
    Wait Until Page Contains Element    //button[text()='登入']

Not Login
    [Arguments]    ${Which Browser}=${EMPTY}    ${Block Image}=False    ${Window width}=1920    ${Window height}=1080    ${Mobile}=False
    [Documentation]    No Login
    ...    - ${Which Browser}: the browser want to use
    Open Browser to Page    ${gOCAIP URL}    ${Block Image}    Window width=${Window width}    Window height=${Window height}    Mobile=${Mobile}    Which Browser=${Which Browser}
    Accept Cookie Consent

Check User Profile
    [Arguments]    ${User account}
    #Verify: Go to user profile to check username.
    Go To User Profile
    ${Lowercase account}=    Convert To Lowercase    ${User account}
    # All account will be stored as lowercase format.
    ${target name}=    Get Text    //div[@class="col-lg-10 col-md-9 col-sm-8 col-xs-6"]/h3
    ${Lowercase target name}=    Convert To Lowercase    ${target name}
    Should Be Equal    "${Lowercase target name}"    "${Lowercase account}"

Check If Utest Account Exists
    [Documentation]    Check if utest account exists before running forget password testcases.
    ${Utest exists}=    Run Keyword And Return Status    Login To OCAIP    ${gTest register account}    ${gTest mail password}
    Run Keyword Unless    ${Utest exists}    Run Keywords    Click Element    //div[@id='myModal']/div/div[4]
    ...    AND    Register A User Account And Expect Error    ${gTest mail account}    common    Recaptcha flag=True    Expected msg=${EMPTY}
    Run Keyword Unless    ${Utest exists}    Run Keywords    Open Registration Page    ${gTest mail account}    ${gTest mail password}    chrome
    ...    AND    Wait Until Page Contains    會員註冊
    Run Keyword Unless    ${Utest exists}    Fill In Registration Info And Expect Error    ${gTest register account}    ${gTest mail password}    ${gTest mail password}    天使
    ...    大    User department=新聞系    Msg from where=common
    Logout OCAIP

Change Password And Expect Error
    [Arguments]    ${User Password}    ${New Password}    ${Confirm Password}    ${Msg from where}    ${Expected msg}
    [Documentation]    Change password and expected error
    ...    - ${User Password}: the old password for current user
    ...    - ${New Password}: the new password for current user want to modify
    ...    - ${Confirm Password}: confirm the new password again
    ...    - ${Msg form Where}: specify location the error message comes from. (``common`` | ``oldpwd`` | ``newpwd`` | ``confirmpwd`` )
    ...    - ${Expected msg}: expect the error message contains this string. (Default is expecting no error.)
    # Go to User progile
    Go To User Profile
    # input information to modify password
    Click Element    //a[@href="user_password"]
    Input Password    //*[@id="current_passsword"]    ${User Password}
    Input Password    id=new_password    ${New Password}
    Input Password    id=confirm_new_password    ${Confirm Password}
    Click Button    id=submit
    # verify the expected is correct or not
    &{Msg location}=    Create Dictionary    oldpwd=current_password    newpwd=new_password    # Locator (For Get Element Attribute)
    &{Msg attribute}=    Create Dictionary    oldpwd=validationMessage    newpwd=validationMessage    # Attribute (For Get Element Attribute)
    &{Location validity}=    Create Dictionary    oldpwd=var oldpwd_e = document.getElementsByName("current_password")[0]; return oldpwd_e.checkValidity();    newpwd=var newpwd_e = document.getElementById("new_password"); return newpwd_e.checkValidity();    # Javascripts to check the validity, only username and password needs to be checked.
    ${Element validity}=    Run Keyword If    "${Expected msg}" != "${EMPTY}" and "${Msg from where}" != "common"    Execute Javascript    ${Location validity.${Msg from where}}    # Get element validity: only username and password field have required attribute, so their validity should be checked.
    ${Validation msg}=    Run Keyword If    "${Expected msg}" != "${EMPTY}" and "${Msg from where}" != "common"    Get Element Attribute    ${Msg location.${Msg from where}}    ${Msg attribute.${Msg from where}}    # Get error message.
    Run Keyword If    "${Expected msg}" != "${EMPTY}" and "${Msg from where}" != "common"    Should Be Equal As Strings    ${Element validity}    False
    Run Keyword If    "${Expected msg}" != "${EMPTY}" and "${Msg from where}" != "common"    Run Keywords    Should Contain    ${Validation msg}    ${Expected msg}
    ...    AND    Return From Keyword    0    # If match expected error, finish this keyword.
    Run Keyword If    "${Expected msg}"!="${Empty}"    Page Should Contain    ${Expected msg}
    Log    developing

Forget Password Request And Expect Result
    [Arguments]    ${User email}    ${Msg from where}    ${Page status}=success    ${Expected msg}=${EMPTY}
    [Documentation]    Forget password and request to modify it
    ...    - ${User email}: the user email
    ...    - ${Msg form Where}: specify location the error message comes from. (``common`` | ``username`` | ``email``)
    ...    - ${Page status}: show which page for user. ( ``success`` | ``fail`` )
    ...    - ${Expected msg}: expect the error message contains this string. (Default is expecting no error.)
    # go to login page and click forget password function
    Click Button    //button[text()='登入']
    #Click Element    //div[@id='login_form']/a/h6
    Click Element    //a[@class="forgetPwd"]
    Wait Until Page Contains    忘記密碼
    # input information
    input Text    //div[@class="forgot_password_form"]//input[@id="email"]    ${User email}
    Click Button    id=submit_fp
    # verify the expected result is correct or not
    # Specify location and attribute according to input argument.
    &{Msg location}=    Create Dictionary    username=username    email=email    # Locator (For Get Element Attribute)
    &{Msg attribute}=    Create Dictionary    username=validationMessage    email=validationMessage    # Attribute (For Get Element Attribute)
    &{Location validity}=    Create Dictionary    username=var user_e = document.getElementById("username"); return user_e.checkValidity();    email=var user_e = document.getElementById("email"); return user_e.checkValidity();    # Javascripts to check the validity, only username and password needs to be checked.
    ${Element validity}=    Run Keyword If    "${Expected msg}" != "${EMPTY}" and "${Msg from where}" != "common"    Execute Javascript    ${Location validity.${Msg from where}}    # Get element validity: only username and password field have required attribute, so their validity should be checked.
    ${Validation msg}=    Run Keyword If    "${Expected msg}" != "${EMPTY}" and "${Msg from where}" != "common"    Get Element Attribute    ${Msg location.${Msg from where}}    ${Msg attribute.${Msg from where}}    # Get error message.
    Run Keyword If    "${Expected msg}" != "${EMPTY}" and "${Msg from where}" != "common"    Should Be Equal As Strings    ${Element validity}    False
    Run Keyword If    "${Expected msg}" != "${EMPTY}" and "${Msg from where}" != "common"    Run Keywords    Should Contain    ${Validation msg}    ${Expected msg}
    ...    AND    Return From Keyword    0    # If match expected error, finish this keyword.
    Run Keyword If    "${Expected msg}"!="${EMPTY}"    Page Should Contain    ${Expected msg}
    Run Keyword If    "${Page status}"=="success"    Element Should Contain    //div[@class="success-circle"]//h7    重新設定密碼連結已傳送至電子郵件
    Run Keyword If    "${Page status}"=="success"    Element Should Contain    //div[@class="success-circle"]//div[@class="btn btn_mge"]    返回首頁
    Run Keyword If    "${Expected msg}"=="${EMPTY}" and "${Page status}"=="fail"    Element Should Contain    //div[@class="error-triangular"]//h7    電子郵件不存在
    Run Keyword If    "${Expected msg}"=="${EMPTY}" and "${Page status}"=="fail"    Element Should Contain    //div[@class="error-triangular"]//div[@class="btn btn_mye"]    重試

Register A User Account And Expect Error
    [Arguments]    ${User email}    ${Msg from where}    ${Recaptcha flag}=False    ${Expected msg}=${EMPTY}    ${Sign Up type}=academy
    [Documentation]    register a user with email and show error correctly
    ...    - ${User email}: the user email
    ...    - ${Msg form Where}: specify location the error message comes from. (``common`` | ``email`` )
    ...    - ${Expected msg}: expect the error message contains this string. (Default is expecting no error.)
    ...    - ${Sign Up type}: the kind of identity to sign up. (``academy``|``business``)
    # go to login page and click register button
    Click Element    //button[text()='登入']
    Wait Until Element Is Visible    //a[text()='註冊']
    Click Element    //a[text()='註冊']
    Wait Until Page Contains    立即註冊！
    Sleep    1.5s
    # choose identity
    Log    ${Sign Up type}
    Run Keyword If    "${Sign Up type}" == "academy"    Click Element    //input[@id="radio-0"]
    Run Keyword If    "${Sign Up type}" == "business"    Click Element    //input[@id="radio-1"]
    # input information
    Input Text    id=new_email    ${User email}
    Run Keyword If    "${Recaptcha flag}"=="True"    Sleep    2s
    #Run Keyword If    "${Recaptcha flag}"=="True"    Click Element    //iframe[contains(@src,"anchor")]
    Comment    Run Keyword If    "${Recaptcha flag}"=="True"    Execute Manual Step    Click recaptcha button!
    Comment    Run Keyword If    "${Recaptcha flag}"=="True"    Sleep    3s
    Click Button    id=signup_submit
    Comment    Run Keyword If    "${Recaptcha flag}"=="True"    Sleep    2s
    # verify the error message is correct or not
    &{Msg location}=    Create Dictionary    email=new_email    # Locator (For Get Element Attribute)
    &{Msg attribute}=    Create Dictionary    email=validationMessage    # Attribute (For Get Element Attribute)
    &{Location validity}=    Create Dictionary    email=var user_e = document.getElementById("new_email"); return user_e.checkValidity();    # Javascripts to check the validity, only username and password needs to be checked.
    ${Element validity}=    Run Keyword If    "${Expected msg}" != "${EMPTY}" and "${Msg from where}" != "common"    Execute Javascript    ${Location validity.${Msg from where}}    # Get element validity: only username and password field have required attribute, so their validity should be checked.
    ${Validation msg}=    Run Keyword If    "${Expected msg}" != "${EMPTY}" and "${Msg from where}" != "common"    Get Element Attribute    ${Msg location.${Msg from where}}    ${Msg attribute.${Msg from where}}    # Get error message.
    Run Keyword If    "${Expected msg}" != "${EMPTY}" and "${Msg from where}" != "common"    Should Be Equal As Strings    ${Element validity}    False
    Run Keyword If    "${Expected msg}" != "${EMPTY}" and "${Msg from where}" != "common"    Run Keywords    Should Contain    ${Validation msg}    ${Expected msg}
    ...    AND    Return From Keyword    0    # If match expected error, finish this keyword.
    Run Keyword If    "${Recaptcha flag}"=="False"    Page Should Contain    請勾選"我不是機器人"以驗證身份
    #Run Keyword If    "${Recaptcha flag}"=="False"    Page Should Contain    The response parameter is missing.
    Run Keyword If    "${Expected msg}"!="${EMPTY}"    Page Should Contain    ${Expected msg}
    # verify the handle page info is correct or not
    Run Keyword If    "${Recaptcha flag}"=="True" and "${Expected msg}"=="${EMPTY}"    Wait Until Element Is Visible    //div[@id="tabSignup"]//h4[text()="電子郵件信箱認證"]
    #Run Keyword If    "${Recaptcha flag}"=="True" and "${Expected msg}"=="${EMPTY}"    Page Should Contain    ${User email}
    Run Keyword If    "${Recaptcha flag}"=="True" and "${Expected msg}"=="${EMPTY}"    Element Should Be Visible    //input[@value="我知道了"]

Customized Click Element
    [Arguments]    ${Clicked Locator}
    [Documentation]    *Customized keyword for Click Element, will retry few times due to driver may fail due to temporarily unclickable.*
    ...    - ${Click Loactor}: the element location want to be click
    Wait Until Keyword Succeeds    10 secs    1 secs    Click Element    ${Clicked Locator}

Select Website Language
    [Arguments]    ${Lang}=zh
    [Documentation]    Select website language for i18n
    Click Element    //a[@id="dropdown_language"]
    Wait Until Element Is Visible    //div[@class="dropdown-menu"]
    Click Element   //div[@class="dropdown-menu"]/a[@href="?lang=${Lang}"]
    Wait Until Page Contains Element    //div[@id="svg_bell"]
    Location Should Contain    ?lang=${Lang}

Go To Home Page
    [Arguments]    ${Lang}=zh
    [Documentation]    Go to "Home Page"
    Customized Mouse Over    //a[@class="navbar-brand"]
    Click Element    //a[@href="/"]
    Wait Until Page Contains Element    //img[@src="/images/web/logo_black.png"]
    Page Should Contain Element    //div[@id="myCarousel"]//picture/img

Go To About Platform
    [Arguments]    ${Lang}=zh
    [Documentation]    Go to "About Platform" tab.
    ${Label}=    Run Keyword If    "${Lang}"=="zh"    Set Variable    關於平台
    ...    ELSE IF    "${Lang}"=="en"    Set Variable    About Us
    Customized Mouse Over    //h7/following-sibling::a[text()="${Label}"]    JS=True
    Click Element    //h7/following-sibling::a[text()="${Label}"]
    Wait Until Page Contains Element    //img[@src="/images/web/link_black.png"]
    Page Should Contain    ${Label}

Go To About Team
    [Arguments]    ${Lang}=zh
    [Documentation]    Go to "About Team" tab.
    ${Label}=    Run Keyword If    "${Lang}"=="zh"    Set Variable    工研院團隊
    ...    ELSE IF    "${Lang}"=="en"    Set Variable    Our Team
    Customized Mouse Over    //a[text()="${Label}"]    JS=True
    Click Element    //a[text()="${Label}"]
    Wait Until Page Contains Element    //img[@src="/images/web/link_black.png"]
    Page Should Contain    ${Label}
    ${Label}=    Run Keyword If    "${Lang}"=="zh"    Set Variable    巨量資訊科技中心
    ...    ELSE IF    "${Lang}"=="en"    Set Variable    Computational Intelligence Technology Center
   ${count}    Execute Javascript    return (document.getElementsByTagName('html')[0].innerText.match(/${Label}/g) || []).length;
    Run Keyword If    "${Lang}"=="zh"    Should Be Equal As Integers    ${count}    ${7}
    ...    ELSE IF    "${Lang}"=="en"    Should Be Equal As Integers    ${count}    ${3}

Go To User Profile
    [Arguments]    ${Window width}=1920    ${Lang}=zh
    ${Label}=    Run Keyword If    "${Lang}"=="zh"    Set Variable    個人資訊
    ...    ELSE IF    "${Lang}"=="en"    Set Variable    Personal information
    Run Keyword If    ${Window width} < 768    Click Element At Coordinates    //img[@id="index_menu_burger"]    0    0
    ...    ELSE    Click Element    //div[@id="navbar"]//div[@id="is_login_li"]
    Click Element At Coordinates    //div[@id="navbar"]//a[contains(@href, '/user_info')]    20    0
    Wait Until Page Contains    ${Label}

Go To Topic List
    [Arguments]    ${Window width}=1920    ${Topic type}=topic    ${Topic filter}=${EMPTY}    ${Topic search}=${EMPTY}
    [Documentation]    Go to "Topic List" tab.
    Sleep    0.5s    #For page not redirect bug in Firefox
    Run Keyword If    ${Window width} < 768    Click Element At Coordinates    //img[@id="index_menu_burger"]    0    0
    Run Keyword If    "${Topic type}"=="topic"    Run Keywords    Click Element    //div[@id="navbar"]//a[@href="/topic_list"]/ancestor::li
    ...    AND    Click Element    //div[@id="navbar"]//a[@href="/topic_list"]
    ...    ELSE IF    "${Topic type}"=="ctsp"    Run Keywords    Click Element    //div[@id="navbar"]//a[@href="/topic_list"]/ancestor::li
    ...    AND    Click Element    //div[@id="navbar"]//a[@href="/ctsp-ai"]
    ...    ELSE IF    "${Topic type}"=="asvda"    Run Keywords    Click Element    //div[@id="navbar"]//a[@href="/topic_list"]/ancestor::li
    ...    AND    Click Element    //div[@id="navbar"]//a[@href="/asvda"]
    ...    ELSE IF    "${Topic type}"=="covid"    Run Keywords    Click Element    //div[@id="navbar"]//a[@href="/topic_list"]/ancestor::li
    ...    AND    Click Element    //div[@id="navbar"]//a[@href="/covid-19"]
    ...    ELSE IF    "${Topic type}"=="course"    Click Element    //div[@id="navbar"]//a[@href="/course"]
    ...    ELSE IF    "${Topic type}"=="aicup"    Run Keywords    Click Element    //div[@id="navbar"]//a[text()="競賽"]
    ...    AND    Click Element    //div[@id="navbar"]//a[@href="/moe2020"]
    ...    ELSE IF    "${Topic type}"=="playground"    Click Element    //div[@id="navbar"]//a[text()="練習場"]
    Wait Until Page Contains Element    //div[@id="svg_bell"]
    ${topic list string}=    Get Text    //div[@id="navbar"]//a[@href="/topic_list"]/ancestor::li
    # zh-TW
    Run Keyword If    "${topic list string}"=="議題"
    ...    Run Keyword If    "${Topic type}"=="topic"    Wait Until Page Contains    產業議題
    ...    ELSE IF    "${Topic type}"=="course"    Page Should Contain    AIdea教學專題區
    ...    ELSE IF    "${Topic type}"=="ctsp"    Page Should Contain    中科智慧製造
    ...    ELSE IF    "${Topic type}"=="asvda"    Page Should Contain    亞洲．矽谷
    ...    ELSE IF    "${Topic type}"=="covid"    Page Should Contain    臺灣 COVID-19 確診案例數預測
    ...    ELSE IF    "${Topic type}"=="aicup"    Page Should Contain    教育部全國大專校院人工智慧競賽
    ...    ELSE IF    "${Topic type}"=="playground"    Page Should Contain    練習 text
    # en-US
    ...    ELSE IF    "${topic list string}"=="Topics"
    ...    Run Keyword If    "${Topic type}"=="topic"    Wait Until Page Contains    Topic List
    ...    ELSE IF    "${Topic type}"=="course"    Page Should Contain    AIdea教學專題區
    ...    ELSE IF    "${Topic type}"=="ctsp"    Page Should Contain    CTSP-Smart Manufacturing
    ...    ELSE IF    "${Topic type}"=="asvda"    Page Should Contain    ASVDA
    ...    ELSE IF    "${Topic type}"=="covid"    Page Should Contain    Forecast of Taiwan COVID-19 confirmed cases project
    ...    ELSE IF    "${Topic type}"=="aicup"    Page Should Contain    教育部全國大專校院人工智慧競賽
    ...    ELSE IF    "${Topic type}"=="playground"    Page Should Contain    Playground text
    # 議題入口
    Run Keyword If    "${Topic type}"=="covid" or "${Topic type}"=="ctsp" or "${Topic type}"=="asvda"
    ...    Click Element    //label[contains(@for,"tabthree")]
    # Topic type filter
    Run Keyword If    "${Topic filter}"!="${EMPTY}"    Customized Select From List By Label    //select[@id='dynamic_select']    ${Topic filter}
    # Topic search
    Run Keyword If    "${Topic search}"!="${EMPTY}" and "${Topic type}"=="course"    Input Text    //input[@id="school_search"]    ${Topic search}
    ...    ELSE IF    "${Topic search}"!="${EMPTY}"    Input Text    //input[@id="industry_search"]    ${Topic search}

Go To FAQ
    [Arguments]    ${Lang}=zh
    [Documentation]    Go to "FAQ" tab.
    ${Label}=    Run Keyword If    "${Lang}"=="zh"    Set Variable    常見問題
    ...    ELSE IF    "${Lang}"=="en"    Set Variable    Frequently Asked Questions
    Click Element    //a[text()="FAQ"]
    Wait Until Page Contains    ${Label}

Go To Computing Resources
    [Arguments]    ${Lang}=zh
    [Documentation]    Go to "Computing Resources" tab.
    ${Label}=    Run Keyword If    "${Lang}"=="zh"    Set Variable    雲端運算資源
    ...    ELSE IF    "${Lang}"=="en"    Set Variable    Computing Resources
    Click Element    //a[text()="${Label}"]
    Wait Until Page Contains    ${Label}

Go To Privacy Policy
    [Arguments]    ${Lang}=zh
    [Documentation]    Go to "Privacy Policy" tab.
    ${Label}=    Run Keyword If    "${Lang}"=="zh"    Set Variable    隱私權聲明
    ...    ELSE IF    "${Lang}"=="en"    Set Variable    Privacy policy
    Click Element    //a[text()="${Label}"]
    Wait Until Page Contains    ${Label}

Go To AI CUP
    [Documentation]    Go to "AI CUP 2020" and "AI CUP 2019" tab.
    Click Element    //a[text()="競賽"]
    Click Element    //a[text()="AI CUP 2020"]
    Wait Until Page Contains Element    //img[@src="/images/web/aicup_2020_logo.png"]
    Click Element    //a[text()="競賽"]
    Click Element    //a[text()="AI CUP 2019"]
    Wait Until Page Contains Element    //img[@src="/images/web/aicup_2019_logo.png"]

Go To Career
    [Arguments]    ${Window width}=1920    ${Lang}=zh
    [Documentation]    Go to "Career" tab.
    @{Label}=    Run Keyword If    "${Lang}"=="zh"    Create List    評鑑    企業專區    線上評量
    ...    ELSE IF    "${Lang}"=="en"    Set Variable    Career    Recruitment    Online evaluation
    Run Keyword If    ${Window width} < 768    Click Element    //img[@id="index_menu_burger"]
    Click Element    //a[text()="@{Label}[0]"]
    Click Element    //a[contains(text(),"@{Label}[1]")]
    Wait Until Page Contains    @{Label}[1]
    Run Keyword If    ${Window width} < 768    Click Element    //img[@id="index_menu_burger"]
    Click Element    //a[text()="@{Label}[0]"]
    Click Element    //a[contains(text(),"@{Label}[2]")]
    Wait Until Page Contains    @{Label}[2]

Go To Statistics List
    [Arguments]    ${Window width}=1920
    [Documentation]    Go to "Statistics" tab
    Run Keyword If    ${Window width} < 768    Page Should Contain Element    //img[@id="index_menu_burger"]
    Run Keyword If    ${Window width} < 768    Click Element    //img[@id="index_menu_burger"]
    ...    ELSE    Click Element    //div[@id="navbar"]//div[@id="is_login_li"]
    Click Element    //div[@id="navbar"]//a[text()="議題管理"]
    Wait Until Page Contains    議題統計列表

Go To Admin Page
    [Arguments]    ${Window width}=1920    ${Admin type}=${EMPTY}
    [Documentation]    Go to "Admin" tab
    Run Keyword If    ${Window width} < 768    Page Should Contain Element    //img[@id="index_menu_burger"]
    Run Keyword If    ${Window width} < 768    Click Element    //img[@id="index_menu_burger"]
    ...    ELSE    Click Element    //div[@id="navbar"]//div[@id="is_login_li"]
    Click Element    //div[@id="navbar"]//a[text()="平台管理"]
    Wait Until Page Contains    權限管理
    ${URL}=    Run Keyword If    "${Admin type}"!="${EMPTY}"    Get Element Attribute    //div[@id="sidebar"]//a[text()="${Admin type}"]    href
    ...    ELSE    Set Variable    ${gOCAIP URL}/admin/roles
    Run Keyword If    "${Admin type}"!="${EMPTY}"    Click Element    //div[@id="sidebar"]//a[text()="${Admin type}"]
    #For some page slow loading
    Wait Until Location Is    ${URL}

Go To Statistics Topic
    [Arguments]    ${Statistics Topic name}    ${Input type}=name    ${Statistics type}=${EMPTY}
    [Documentation]    Go into specific statistics topic.
    ...    - ${Statistics Topic name}: the topic name or id
    ...    - ${Input type}: the type of the topic( ``name`` | ``id`` )
    ...    - Go to Statistics List --> go to this topic.
    # Click the topic in Topic List.
    Run Keyword If    "${Input type}"=="id"    Go To Topic    ${Statistics Topic name}    Input type=id
    ${Statistics Topic name}=    Run Keyword If    "${Input type}"=="id"    Get Text    //div[@id="quickfit"]
    ...    ELSE IF    "${Input type}"=="name"    Set Variable    ${Statistics Topic name}
    Go To Statistics List
    #Search
    Input Text    //div[@id="topic_statistics_filter"]//input    ${Statistics Topic name}
    ${topic url}=    Get Element Attribute    //div[@id="topic_statistics_list"]//a[text()="${Statistics Topic name}"]    href
    Click Element    //div[@id="topic_statistics_list"]//a[text()="${Statistics Topic name}"]
    # Verify if actually go into this topic. (management_left)
    Page Should Contain Element    //div[@class="management_left"]
    # Verify if actually go into this topic. (management_right)
    Page Should Contain Element    //div[@id="issue_overview"]
    Page Should Contain Element    //div[@id="ranking"]
    Page Should Contain Element    //div[@id="school_view"]
    Page Should Contain Element    //div[@id="school_upload"]
    Page Should Contain Element    //div[@id="school_download"]
    ${URL}=    Run Keyword If    "${Statistics type}"!="${EMPTY}"    Get Element Attribute    //div[@class="management_left"]//h6[text()="${Statistics type}"]/parent::a    href
    ...    ELSE    Set Variable    ${topic url}
    Run Keyword If    "${Statistics type}"!="${EMPTY}"    Click Element    //div[@class="management_left"]//h6[text()="${Statistics type}"]
    #For some page slow loading
    Wait Until Location Is    ${URL}

Go To Topic
    [Arguments]    ${Topic name}    ${Input type}=name    ${Window width}=1920    ${Topic type}=topic    ${Tablist}=${EMPTY}
    [Documentation]    Go into specific topic.
    ...    - Go to Topic List --> go to this topic.
    ...    - ${Topic name}:the topic want to go
    ...    - ${Input type}:the type of input topic.( ``name`` | ``id`` )
    ...    - ${Topic type}:the type of topic.( ``topic`` | ``course`` | ``aicup`` )
    Log    ${Input type}
    ${URL}=    Get Location
    # Issue Page
    Run Keyword If    "${gOCAIP URL}/topic/${Topic name}" == "${URL}"    Run Keywords    Click Element    //a[@href="#topic-intro"]
    ...    AND    Refresh Page
    # Other Page
    ...    ELSE IF    "${Input type}"=="id"    Run Keywords    Go To Topic List    Window width=${Window width}    Topic type=${Topic type}
    ...    AND    Click Element    //a[contains(@href,"${Topic name}")]//div[@class="list_info"]//h4
    ...    ELSE IF    "${Input type}"=="name"    Run Keywords    Go To Topic List    Window width=${Window width}    Topic type=${Topic type}
    ...    AND    Click Element    //div[@class="list_info"]//h4[contains(text(),"${Topic name}")]
    # Radis cache is Deprecated
    #${URL}=    Get Location
    #${Radis cache}=    Run Keyword If    "${Input type}"=="id"
    #...    Run Keyword And Return Status    Click Element    //a[contains(@href,"${Topic name}")]//div[@class="list_info"]//h4    # But //section[@class="issue_list"]//div[@class="overlay" and ./h4[contains(text(),"${Topic name}") ]]/a[text()="View more"] doesn't work.
    #...    ELSE IF    "${Input type}"=="name"
    #...    Run Keyword And Return Status    Click Element    //div[@class="list_info"]//h4[contains(text(),"${Topic name}")]
    ## Verify if actually go into this topic.
    #Run Keyword If    "${Radis cache}"=="False"    Clear Website Cache    Topic name=${Topic name}    Input type=${Input type}    Window width=${Window width}    Topic type=${Topic type}
    Wait Until Element Is Visible    //div[@id="countdown"]
    Run Keyword If    "${Input type}"=="id"    Location Should Be    ${gOCAIP URL}/topic/${Topic name}
    ...    ELSE IF    "${Input type}"=="name"    Page Should Contain Element    //div[@id="quickfit" and text()="${Topic name}"]
    Page Should Contain Element    //a[@href="#topic-intro"]
    Run Keyword If    "${Tablist}"!="${EMPTY}"    Run Keywords    Click Element    //ul[@role="tablist"]//a[text()="${Tablist}"]
    ...    AND    Page Should Contain Element    //li[@class="active"]//a[text()="${Tablist}"]

Go To Previous Page
    [Documentation]    Try to go to previous page
    Execute Javascript    window.history.back()
    Sleep    2s

Refresh Page
    [Documentation]    Refresh page
    Execute Javascript    location.reload(0)
    Sleep    2s

Create Calculate Score File
    [Arguments]    ${File name}    ${Issue topic}    ${Method}    ${sol_file}    ${test_file}    ${pub_set}
    ...    ${pri_set}
    [Documentation]    Calculate the score by passing sol_file and test_file and save robot variable into in the text.file
    ...    - ${File name}: the postfix of the output filename
    ...    - ${Issue topic}: the type of issue
    ...    - ${Method}: the method usage
    ...    - ${sol_file}: the solution file
    ...    - ${test_file}: the testing file
    ...    - ${pub_set}: the public testing set
    ...    - ${pri_set}: the private testing set
    ${temp result}=    Run    python3 ${CURDIR}${/}..${/}Scripts${/}exame_score.py -t ${Issue topic} -m ${Method} -n ${File name} ${sol_file} ${test_file} ${pub_set} ${pri_set}

Create Topic With Argument
    [Arguments]    ${File name}    ${Issue topic}    ${Date type}=now    ${Operation}=signup    ${Window width}=1920    ${Join}=Yes    ${Flow type}=register    ${Topic type}=topic    ${Tag}=${Empty}
    [Documentation]    Create a now topic and check if the topic show correct
    ...    - ${File name}: the postfix of the output filename
    ...    - ${Topic type}: the type of topic
    ...    - ${Operation}: the operation need to do after creating issue( ``signup`` | ``${EMPTY}`` )
    ${File name}=    Set Variable    ${SUITE NAME}_${File name}
    ${Create newTopic result}=    Run Keyword If    "${Tag}"!="${Empty}"
    ...    Run    python3 ${CURDIR}${/}..${/}Scripts${/}auto_create_topic.py -t ${Issue topic} -s ${gTest server argument} -d ${Date type} -n ${File name} -c ${Tag}
    ...    ELSE    Run    python3 ${CURDIR}${/}..${/}Scripts${/}auto_create_topic.py -t ${Issue topic} -s ${gTest server argument} -d ${Date type} -n ${File name}
    Should Not Contain Any    ${Create newTopic result}    失敗    錯誤    error    Fail    Please    not found    msg=${Create newTopic result}
    Should Contain    ${Create newTopic result}    上架審核通過成功
    Import Resource    ${CURDIR}${/}..${/}Temp${/}${File name}.txt
    Log    ${gTopic ID ${Date type}} ${gTopic Name ${Date type}}
    ${signed NDA}=    Run Keyword If    "${Operation}"=="signup"    Run Keyword And Return Status    Check Upload Page Is Available    ${gTopic ID ${Date type}}    Input type=id    Topic type=${Topic type}
    Run Keyword If    "${Operation}"=="signup" and "${signed NDA}"=="False"    Sign Up To Sign NDA    ${gTopic ID ${Date type}}    Input type=id    Window width=${Window width}    Join=${Join}    Flow type=${Flow type}    Topic type=${Topic type}

Import Existed Topic
    [Arguments]    ${File name}    ${Issue topic}=${EMPTY}    ${Operation}=signup    ${Date type}=now    ${Join}=Yes
    [Documentation]    Import existed topic or create a new one
    ${exist}=    Run Keyword And Return Status    File Should Exist    ${CURDIR}${/}..${/}Temp${/}${SUITE NAME}_${File name}.txt
    Run Keyword If    "${exist}"=="False" and "${Issue topic}"!="${EMPTY}"    Create Topic With Argument    ${File name}    ${Issue topic}    Operation=${Operation}    Date type=${Date type}    Join=${Join}
    ...    ELSE    Import Resource    ${CURDIR}${/}..${/}Temp${/}${SUITE NAME}_${File name}.txt

Sign Up Issue
    [Arguments]    ${Topic name}    ${Input type}=name
    [Documentation]    Sign up issue and allow user to upload file
    ...    - ${Topic name}: the topic you want to upload data to.
    ...    - ${Input type}: the type of input topic name( ``name`` | ``id`` )
    Go To Topic    ${Topic name}    Input type=${Input type}
    # click sign up button
    Click Element    //div[@id="register_topic"]
    # NDA and join condition should present in page.
    Page Should Contain Element    //div[@class="nda_popup"]
    Page Should Contain Element    //label[@class="check-box" and @for="nda_check"]
    Page Should Contain Element    id=submit    # 下載
    # Sign \ NDA And Download File
    Click Element    //label[@class="check-box" and @for="nda_check"]
    Click Element    id=submit

Delete Test User
    [Documentation]    delete the test user account
    ${Delete utest result}=    Run    python3 ${CURDIR}${/}..${/}Scripts${/}change_data.py -s ${gTest server argument} -o DEL_UTEST
    Should Contain    ${Delete utest result}    Successfully deleted utest.

Post Multiple Messages
    [Documentation]    Leave multiple messages
    [Arguments]    ${Topic ID}    ${Success msg}=Successfully    ${Error msg}=failed    ${Number}=1
    ${status}=    Run    python3 ${CURDIR}${/}..${/}Scripts${/}change_data.py -t ${Topic ID} -s ${gTest server argument} -o POST_MESSAGES -n ${Number}
    Should Contain    ${status}    ${Success msg}    ${Error msg}

Change Topic Date
    [Arguments]    ${Topic ID}    ${Operation}=END_TOPIC    ${Success msg}=Successfully    ${Error msg}=failed    ${Shift}=0
    [Documentation]    Change Topic data to close the issue and show the final result
    ...    - ${Topic ID}: the specific topic id
    ...    - ${Operation}: the operation want to do for the specific issue
    ${status}=    Run Keyword If    "${Shift}"!="0"    Run    python3 ${CURDIR}${/}..${/}Scripts${/}change_data.py -t ${Topic ID} -s ${gTest server argument} -o ${Operation} -S ${Shift}
    ...    ELSE    Run    python3 ${CURDIR}${/}..${/}Scripts${/}change_data.py -t ${Topic ID} -s ${gTest server argument} -o ${Operation}
    Should Contain    ${status}    ${Success msg}    ${Error msg}

Check Upload Page Is Available
    [Arguments]    ${Topic name}    ${Input type}=name    ${Topic type}=topic
    [Documentation]    Check the message for no upload data
    Go To Topic    ${Topic name}    ${Input type}    Topic type=${Topic type}    Tablist=上傳
    # Page should not contain upload block
    Page Should Contain Element    //div[@id="topic-upload"]//div[@id="data_upload"]
    Page Should Not Contain    請先報名議題
    Element Should Be Enabled    //div[@id="fileName"]


Check Issue Page No Specific Function Available
    [Arguments]    ${Topic name}    ${Input type}=name    ${Func type}=upload    ${Topic type}=now
    [Documentation]    Check the specific function is available or not
    ...    - ${Topic name}: the topic you want to upload data to.
    ...    - ${Input type}: the type of input topic name( ``name`` | ``id`` )
    ...    - ${Func type}: the specific function that is not available( ``upload`` | ``download`` | ``both`` )
    ...    - ${Topic type}: the created topic type( ``past`` | ``now`` | ``future`` )
    Go To Topic    ${Topic name}    Input type=${Input type}
    Run Keyword If    "${Func type}" == "upload" or "${Func type}" == "both"    Upload Function No Available    ${Topic name}    Input type=${Input type}    Topic type=${Topic type}
    Run Keyword If    "${Func type}" == "download" or "${Func type}" == "both"    Download Function No Available

Upload Function No Available
    [Arguments]    ${Topic name}    ${Input type}=name    ${Topic type}=topic
    [Documentation]    Check If upload function is not available
    ...    - ${Topic type}: the issue type(``past`` | ``now`` | ``future``)
    Go To Topic    ${Topic name}    ${Input type}    Topic type=${Topic type}    Tablist=上傳
    # Page should not contain upload block
    Wait Until Element Is Visible    //input[@value='非上傳時間']
    # element is not attached BUG?
    Wait Until Keyword Succeeds    10s    1s    Element Attribute Value Should Be    //div[@id="fileName"]    disabled    true

Download Function No Available
    [Documentation]    Check If download function is not available
    # Click "Download" tab
    Click Element    //a[@href="#topic-data" and text()="資料"]
    # Page should not contain download block
    Page Should Not Contain Element    //div[@id="topic-data"]//li[@data-tab="d_dataset"]

Check Timeline Bar
    [Arguments]    ${Topic name}    ${Input type}=name    ${Sign status}=False    ${Stage}=START_TOPIC
    [Documentation]    Check timeline bar is correct or not
    ...    - ${Topic name}: the topic you want to upload data to.
    ...    - ${Input type}: the type of input topic name( ``name`` | ``id`` )
    ...    - ${Sign status}: the user is sign or not(``True``|``False``)
    Go To Topic    ${Topic name}    Input type=${Input type}
    ${Start topic}=    Set Variable    //div[@id="timeline_bar"]//div[contains(text(),"議題開始")]
    ${Start register}=    Set Variable    //div[@id="timeline_bar"]//div[contains(text(),"開始報名")]
    ${Already registered}=    Set Variable    //div[@id="timeline_bar"]//div[contains(text(),"已報名")]
    ${End register}=    Set Variable    //div[@id="timeline_bar"]//div[contains(text(),"報名截止")]
    ${End team}=    Set Variable    //div[@id="timeline_bar"]//div[contains(text(),"組隊截止")]
    ${End topic}=    Set Variable    //div[@id="timeline_bar"]//div[contains(text(),"結束")]
    # verify if the time order show correct
    ${Start time flag}=    Run Keyword And Return Status    Page Should Contain Element    ${Start topic}
    ${Start reg flag}=    Run Keyword And Return Status    Page Should Contain Element    ${Start register}
    ${join flag}=    Run Keyword And Return Status    Page Should Contain Element    ${Already registered}
    ${deadline flag}=    Run Keyword And Return Status    Page Should Contain Element    ${End register}
    ${team flag}=    Run Keyword And Return Status    Page Should Contain Element    ${End team}
    ${start time}=    Run Keyword If    "${Start time flag}"=="True"    Get Horizontal Position    ${Start topic}
    ...    ELSE    Set Variable    ${EMPTY}
    ${reg time}=    Run Keyword If    "${Start reg flag}"=="True"    Get Horizontal Position    ${Start register}
    ...    ELSE    Set Variable    ${EMPTY}
    ${join tag}=    Run Keyword If    "${join flag}"=="True"    Get Horizontal Position    ${Already registered}
    ...    ELSE    Set Variable    ${EMPTY}
    ${deadline}=    Run Keyword If    "${deadline flag}"=="True"    Get Horizontal Position    ${End register}
    ...    ELSE    Set Variable    ${EMPTY}
    ${end team}=    Run Keyword If    "${team flag}"=="True"    Get Horizontal Position    ${End team}
    ...    ELSE    Set Variable    ${EMPTY}
    ${end time}=    Get Horizontal Position    ${End topic}

    # For Unsigned Simple Issue
    Run Keyword If    "${join tag}"=="${EMPTY}" and "${deadline}"=="${EMPTY}"   Should Be True    ${end time} > ${start time}
    # For Unsigned Issue
    ...    ELSE IF    "${join tag}"=="${EMPTY}" and "${deadline}"!="${EMPTY}"    Should Be True    ${end time} > ${deadline} > ${reg time}
    # For Unsigned Team Issue
    ...    ELSE IF    "${join tag}"=="${EMPTY}" and "${deadline}"!="${EMPTY}" and "${team flag}"!="${EMPTY}"    Should Be True    ${end team} > ${deadline} > ${reg time}

    # For Signed Simple Issue
    Run Keyword If    "${join tag}"!="${EMPTY}" and "${deadline}"=="${EMPTY}" and "${Stage}"=="END_TOPIC"    Should Be True    ${end time} >= ${join tag-30} > ${start time}
    ...    ELSE IF    "${join tag}"!="${EMPTY}" and "${deadline}"=="${EMPTY}"    Should Be True    ${end time} > ${join tag} > ${start time}
    # For Signed Issue
    ...    ELSE IF    "${join tag}"!="${EMPTY}" and "${Stage}"=="START_TOPIC"    Should Be True    ${end time} > ${deadline} > ${join tag} > ${reg time}
    ...    ELSE IF    "${join tag}"!="${EMPTY}" and "${Stage}"=="END_JOIN"    Should Be True    ${end time} > ${join tag} > ${deadline} > ${reg time}
    ...    ELSE IF    "${join tag}"!="${EMPTY}" and "${Stage}"=="END_TOPIC"    Should Be True    ${end time} >= ${join tag-30} > ${deadline} > ${reg time}
    # For Signed Team Issue
    ...    ELSE IF    "${join tag}"!="${EMPTY}" and "${team flag}"!="${EMPTY}" and "${Stage}"=="START_TOPIC"    Should Be True    ${end team} > ${deadline} > ${join tag} > ${reg time}
    ...    ELSE IF    "${join tag}"!="${EMPTY}" and "${team flag}"!="${EMPTY}" and "${Stage}"=="END_JOIN"    Should Be True    ${end time} > ${join tag} > ${deadline} > ${reg time}
    ...    ELSE IF    "${join tag}"!="${EMPTY}" and "${team flag}"!="${EMPTY}" and "${Stage}"=="END_TOPIC"    Should Be True    ${end time} >= ${join tag-30} > ${deadline} > ${reg time}
    # Verify TimeBar State
    Should Be True    "${join flag}"=="${Sign status}"

Check Timebar At Different Stages
    [Arguments]    ${Topic name}    ${Input type}=id    ${Sign status}=False    ${Enclosed}=False
    [Documentation]    Check timebar order and status in different stage (begin, continue, end)
    ...    - ${Topic name}: the topic you want to upload data to.
    ...    - ${Input type}: the type of input topic name( ``name`` | ``id`` )
    ...    - ${Sign status}: the sign status(``True``|``False``)
    Run Keyword If    "${Enclosed}"=="False"    Check Timeline Bar    ${Topic name}    ${Input type}    ${Sign status}
    ${stage}=    Set Variable    END_JOIN
    Change Topic Date    ${gTopic ID Now}    Operation=${stage}
    Check Timeline Bar    ${Topic name}    ${Input type}    ${Sign status}    ${stage}
    ${stage}=    Set Variable    END_TOPIC
    Change Topic Date    ${gTopic ID Now}    Operation=${stage}
    Check Timeline Bar    ${Topic name}    ${Input type}    ${Sign status}    ${stage}

Check Functions At Different Stages
    [Arguments]    ${Topic name}    ${Input type}=name    ${Issue type}=begin    ${Evaluate type}=pubpri    ${Flow type}=register    ${Team type}=single
    ...    ${Window width}=1920
    [Documentation]    Check all functions at different stages of AOI topic are working correctly or not.
    ...    - ${Topic name}: the topic you want to upload data to.
    ...    - ${Input type}: the type of input topic name( ``name`` | ``id``)
    ...    - ${Issue type}: the status of the issue( ``begin`` | ``continue`` | ``end``)
    ...    - ${Evaluate type}: the evaluate type of the issue( ``sinpub`` | ``pubpri`` | ``mulpri``)
    ...    - ${Flow type}: the web status flow type of the issue( ``register`` | ``simple``)
    ...    - ${Team type}: the multiple types of the issue( ``single`` | ``team`` | ``leaderboard``)
    Go To Topic    ${Topic name}    Input type=${Input type}    Window width=${Window width}
    ${Already registered}=    Set Variable    //div[@id="timeline_bar"]//div[contains(text(),"已報名")]
    ${join flag}=    Run Keyword And Return Status    Page Should Contain Element    ${Already registered}
    # verify if functions show correct
    # 簡介
    Click Element    //a[contains(text(),'簡介')]
    Page Should Contain Element    //div[@id='topic-intro']/section/div/div/div/div/h4
    Run Keyword If    "${Issue type}"=="begin" and "${Flow type}"=="register"    Page Should Contain    開放報名中
    Run Keyword If    "${Issue type}"=="begin" and "${join flag}"=="False" and "${Flow type}"=="register"    Page Should Contain    我要報名
    Run Keyword If    "${Issue type}"=="begin" and "${join flag}"=="True" and "${Flow type}"=="register"    Page Should Contain    已報名
    Run Keyword If    "${Issue type}"=="continue" and "${join flag}"=="False" and "${Flow type}"=="register"    Page Should Contain    非報名時間
    Run Keyword If    "${Issue type}"=="continue" and "${join flag}"=="True" and "${Flow type}"=="register"    Page Should Contain    已報名
    Run Keyword If    "${Issue type}"=="end" and "${join flag}"=="False" and "${Flow type}"=="register"    Page Should Contain    議題結束
    Run Keyword If    "${Issue type}"=="end" and "${join flag}"=="True" and "${Flow type}"=="register"    Page Should Contain    已報名
    Run Keyword If    "${Flow type}"=="simple"    Run Keywords    Page Should Not Contain Element    //div[@id='register_topic']
    ...    AND    Page Should Not Contain Element    //div[@id='apply_block']/div[2]
    # 規則
    Click Element    //a[contains(text(),'規則')]
    Page Should Contain Element    //div[@id='topic-rule']/section/div/div/div/h4
    # 資料
    Run Keyword If    "${join flag}"=="True"    Click Element    //a[contains(text(),'資料')]
    ...    ELSE    Element Attribute Value Should Be    //a[contains(text(),'資料')]/..    class    disabled
    Run Keyword If    "${Issue type}"!="end" and "${join flag}"=="True"    Run Keywords    Page Should Contain Element    //li[@data-tab="d_dataset"]
    ...    AND    Click Element    //li[@data-tab="d_dataset"]
    Run Keyword If    "${Issue type}"!="end" and "${join flag}"=="True"    Page Should Contain Element    //div[@id="d_dataset" and contains(@class,"current")]
    Run Keyword If    "${Issue type}"!="end" and "${join flag}"=="True"    Click Element    //li[@data-tab="d_rule" ]
    Run Keyword If    "${Issue type}"=="begin" and "${join flag}"=="False" and "${Flow type}"=="register"    Page Should Not Contain Element    //div[@id='topic-data']/section/div/div/div/div/h4
    Run Keyword If    "${Issue type}"=="begin" and "${join flag}"=="True" and "${Flow type}"=="register"    Run Keywords    Page Should Contain Element    //div[@id='topic-data']/section/div/div/div/div/h4
    ...    AND    Page Should Contain    資料下載
    Run Keyword If    "${Issue type}"=="continue" and "${join flag}"=="False" and "${Flow type}"=="register"    Page Should Not Contain Element    //div[@id='topic-data']/section/div/div/div/div/h4
    Run Keyword If    "${Issue type}"=="continue" and "${join flag}"=="True" and "${Flow type}"=="register"    Run Keywords    Page Should Contain Element    //div[@id='topic-data']/section/div/div/div/div/h4
    ...    AND    Page Should Contain    資料下載
    ...    AND    Page Should Contain Element    //li[@data-tab="d_dataset"]
    Run Keyword If    "${Issue type}"=="end" and "${join flag}"=="False" and "${Flow type}"=="register"    Page Should Not Contain Element    //div[@id='topic-data']/section/div/div/div/div/h4
    Run Keyword If    "${Issue type}"=="end" and "${join flag}"=="True" and "${Flow type}"=="register"    Run Keywords    Page Should Contain Element    //div[@id='topic-data']/section/div/div/div/div/h4
    ...    AND    Page Should Contain    資料下載
    ...    AND    Page Should Contain Element    //li[@data-tab="d_dataset"]
    Run Keyword If    "${Issue type}"=="begin" and "${Flow type}"=="simple"    Run Keywords    Page Should Contain Element    //div[@id='topic-data']/section/div/div/div/div/h4
    ...    AND    Page Should Contain    資料下載
    Run Keyword If    "${Issue type}"=="end" and "${Flow type}"=="simple"    Run Keywords    Page Should Contain Element    //div[@id='topic-data']/section/div/div/div/div/h4
    ...    AND    Page Should Contain    資料下載
    ...    AND    Page Should Contain Element    //li[@data-tab="d_dataset"]
    # 上傳
    Run Keyword If    "${join flag}"=="True"    Click Element    //a[contains(text(),'上傳')]
    ...    ELSE    Element Attribute Value Should Be    //a[contains(text(),'上傳')]/..    class    disabled
    Run Keyword If    "${join flag}"=="True"    Click Element    //li[@data-tab="u_rule"]
    Run Keyword If    "${join flag}"=="True"    Page Should Contain Element    //div[@id="u_rule" \ and contains(@class,"current")]
    Run Keyword If    "${join flag}"=="True"    Click Element    //li[@data-tab="u_result"]
    Run Keyword If    "${Issue type}"=="begin" and "${join flag}"=="False" and "${Flow type}"=="register"    Page Should Not Contain Element    //div[@id='topic-upload']/section/div/div/div/div[2]
    Run Keyword If    "${Issue type}"=="begin" and "${join flag}"=="True" and "${Flow type}"=="register"    Run Keywords    Page Should Contain Element    //div[@id='topic-upload']/section/div/div/div/div[2]
    ...    AND    Page Should Contain Element    //input[@id='submit']
    Run Keyword If    "${Issue type}"=="continue" and "${join flag}"=="False" and "${Flow type}"=="register"    Page Should Not Contain Element    //div[@id='topic-upload']/section/div/div/div/div[2]
    Run Keyword If    "${Issue type}"=="continue" and "${join flag}"=="True" and "${Flow type}"=="register"    Run Keywords    Page Should Contain Element    //div[@id='topic-upload']/section/div/div/div/div[2]
    ...    AND    Page Should Contain Element    //input[@id='submit']
    Run Keyword If    "${Issue type}"=="end" and "${join flag}"=="False" and "${Flow type}"=="register"    Page Should Not Contain Element    //div[@id='topic-upload']/section/div/div/div/div[2]
    Run Keyword If    "${Issue type}"=="end" and "${join flag}"=="True" and "${Flow type}"=="register"    Run Keywords    Page Should Contain Element    //div[@id='topic-upload']/section/div/div/div/div[2]
    ...    AND    Element Should Be Visible    //input[@value='非上傳時間']
    Run Keyword If    "${Evaluate type}"=="sinpub" and "${join flag}"=="False" and "${Flow type}"=="register"    Page Should Not Contain Element    //*[contains(text(),'尚無成績')]
    Run Keyword If    "${Evaluate type}"=="sinpub" and "${join flag}"=="True" and "${Flow type}"=="register"    Page Should Contain Element    //*[contains(text(),'尚無成績')]
    Run Keyword If    "${Evaluate type}"=="sinpub"    Run Keywords    Page Should Not Contain Element    //label[contains(text(),'Public Leaderboard')]
    ...    AND    Page Should Not Contain Element    //label[contains(text(),'Private Leaderboard')]
    Run Keyword If    "${Evaluate type}"=="pubpri" and "${join flag}"=="False" and "${Flow type}"=="register"    Element Should Not Be Visible    //label[contains(text(),'Public Leaderboard')]
    Run Keyword If    "${Evaluate type}"=="pubpri" and "${join flag}"=="True" and "${Flow type}"=="register"    Element Should Be Visible    //label[contains(text(),'Public Leaderboard')]
    Run Keyword If    ${Window width} < 768 and "${join flag}"=="True" and "${Evaluate type}"=="pubpri"    Run Keywords    Click Element    //ul[@id="tabs-list"]
    ...    AND    Element Should Be Visible    //div[@id="leaderboard"]//label[text()="Private Leaderboard"]
    Run Keyword If    "${Issue type}"=="begin" and "${Flow type}"=="simple"    Run Keywords    Page Should Contain Element    //div[@id='topic-upload']/section/div/div/div/div[2]
    ...    AND    Page Should Contain Element    //input[@id='submit']
    Run Keyword If    "${Issue type}"=="end" and "${Flow type}"=="simple"    Run Keywords    Page Should Contain Element    //div[@id='topic-upload']/section/div/div/div/div[2]
    ...    AND    Element Should Be Visible    //input[@value='非上傳時間']
    Run Keyword If    "${Evaluate type}"=="sinpub" and "${Flow type}"=="simple"    Run Keywords    Page Should Contain Element    //*[contains(text(),'尚無成績')]
    ...    AND    Page Should Not Contain Element    //label[contains(text(),'Public Leaderboard')]
    ...    AND    Page Should Not Contain Element    //label[contains(text(),'Private Leaderboard')]
    Run Keyword If    "${Evaluate type}"=="pubpri" and "${Flow type}"=="simple"    Run Keywords    Page Should Not Contain Element    //*[contains(text(),'尚無成績')]
    ...    AND    Page Should Contain Element    //label[contains(text(),'Public Leaderboard')]
    ...    AND    Page Should Contain Element    //label[contains(text(),'Private Leaderboard')]
    # 討論
    Run Keyword If    "${join flag}"=="True"    Click Element    //a[contains(text(),'討論')]
    ...    ELSE    Element Attribute Value Should Be    //a[contains(text(),'討論')]/..    class    disabled
    Run Keyword If    "${join flag}"=="False" and "${Flow type}"=="register"    Page Should Not Contain    發表留言
    Run Keyword If    "${join flag}"=="True" and "${Flow type}"=="register"    Page Should Contain    發表留言
    Run Keyword If    "${Flow type}"=="simple"    Page Should Contain    發表留言
    # 組隊
    Run Keyword If    "team" in "${Team type}" and "${join flag}"=="True"    Click Element    //a[contains(text(),'組隊')]
    ...    ELSE IF    "team" in "${Team type}" and "${join flag}"=="False"    Element Attribute Value Should Be    //a[contains(text(),'組隊')]/..    class    disabled
    ...    ELSE    Page Should Not Contain Element    //a[contains(text(),'組隊')]
    Run Keyword If    "team" in "${Team type}" and "${join flag}"=="True" and ${Window width} < 768    Run Keywords    Click Element    //label[@id="open-nav-label_t"]
    ...    AND    Element Should Be Visible    //label[@for="myteam-ctrl"]
    ...    AND    Element Should Be Visible    //label[@for="sent_request-ctrl"]
    ...    AND    Element Should Be Visible    //label[@for="get_request-ctrl"]
    Run Keyword If    "team" in "${Team type}" and "${join flag}"=="True" and "${Issue type}"=="begin"    Check Initial Team Up State    ${gTopic ID Now}    ${gTest account}    Input type=${Input type}    Window width=${Window width}
    Run Keyword If    "team" in "${Team type}" and "{join flag}"=="True" and "${Issue type}"=="end"    Run Keywords    Element Should Be Disabled    //a[@href="#sent_request" and text()="發出的邀請"]
    ...    AND    Element Should Be Disabled    //a[@href="#get_request" and text()="接收邀請"]
    ...    AND    Element Should Be Disabled    //div[@id="merge_team_member"]/form/input[@id="search_team"]
    # 排行榜
    Run Keyword If    "leaderboard" in "${Team type}"    Run Keywords    Click Element    //a[contains(text(),'排行榜')]
    ...    AND    Wait Until Page Contains Element    //div[@id="o_r_public"]
    ...    ELSE    Page Should Not Contain Element    //a[contains(text(),'排行榜')]
    Run Keyword If    "leaderboard" in "${Team type}" and ${Window width} < 768    Click Element    //ul[@id="o_tabs-list"]
    Run Keyword If    "leaderboard" in "${Team type}"    Run Keywords    Click Element    //ul[@id="o_tabs-list"]//label[text()="Private Leaderboard"]
    ...    AND    Wait Until Page Contains Element    //div[@id="o_r_private"]

Check Default Upload Message
    [Arguments]    ${Topic name}    ${Input type}=name
    [Documentation]    Check the message for no upload data
    ...    - ${Topic name}: the topic you want to upload data to.
    ...    - ${Input type}: the type of input topic name( ``name`` | ``id``)
    Go To Topic    ${Topic name}    Input type=${Input type}    Tablist=上傳
    # Page should contain default message
    # Workaround: <label for="panel-1-ctrl">...</label> is not clickable at point. Other element would receive the click: <ul id="tabs-list">...</ul>
    # Click Element    //div[@id="leaderboard"]//label[text()="Public Leaderboard"]
    Page Should Contain Element    //div[@id="evaluation_result"]/div[contains(@class,"empty_status")]/h6
    Page Should Contain    尚無成績
    Click Element    //div[@id="leaderboard"]//label[text()="Private Leaderboard"]
    Page Should Contain Element    //div[@id="private_evaluation_result"]/div[contains(@class,"empty_status")]/h6
    Page Should Contain    本階段成績與排名將在議題結束時公佈！

Upload Result For Topic And Expect Error
    [Arguments]    ${Topic name}    ${Upload account}    ${File location}    ${Msg from where}=button    ${Expected msg}=${EMPTY}    ${Expect score}=${EMPTY}    ${Topic type}=topic    ${Refresh}=True    ${Job}=False    ${Detail}=False
    ...    ${Input type}=name
    [Documentation]    Upload data with given file to topic and expect error message appears.
    ...    - ${Topic name}: the topic you want to upload data to.
    ...    - ${Upload account}: the account using upload function
    ...    - ${File location}: path to the file (include file name).
    ...    - ${Msg from where}: specify location the error message comes from. (``result``: uploaded and calculated result area | ``button``: upload button area)
    ...    - ${Expected msg}: expect the error message contains this string. (Default is expecting no error.)
    ...    - ${Expect score}: if score isn't empty then checking the final score is correct or not
    ...
    ...    Example:
    ...    | Upload Result For Topic And Expect Error | ${gTest Topic} | C:\\>error_content.csv | result | 您的上傳檔案 (error_content.csv) 失敗，格式不符合，請重新上傳！ |
    ...    | Upload Result For Topic And Expect Error | ${gTest Topic} \ | C:\\>error_format.zip | button | 此議題僅接受 csv格式之英文檔名的檔案 |
    &{Msg location}=    Create Dictionary    result=id=upload_error    button=id=data_upload
    Run Keyword If    "${Refresh}" == "True"    Run Keywords    Go To Topic    ${Topic name}    Input type=${Input type}    Topic type=${Topic type}    Tablist=上傳
    ...    AND    Click Element    //a[text()="上傳成果"]
    ...    AND    Wait Until Page Contains Element    id=data_upload    timeout=15s
    # Choose file
    ${File location}    Normalize Path    ${File location}
    Choose File    //input[@id='result_data'][@type='file']    ${File location}
    # Press Upload Button
    Element Should Contain    id=upload_form    選擇檔案
    Click Element    id=submit
    # Verify File Error (If has)
    ${Element msg}=    Run Keyword If    "${Expected msg}" != "${EMPTY}" and "${Msg from where}" == "button"    Get Text    ${Msg location.${Msg from where}}
    Run Keyword If    "${Expected msg}" != "${EMPTY}" and "${Msg from where}" == "button"    Should Contain    ${Element msg}    ${Expected msg}
    Run Keyword If    "${Expected msg}" != "${EMPTY}" and "${Msg from where}" == "button"    Return From Keyword
    # Verify: During uploading/calculating - Dont detect upload_animation BAT-565 for detail
    #Wait Until Element Is Visible    //h6[@id="upload_animation"]    timeout=60
    #Element Should Contain    //h6[@id="upload_animation"]    結果計算中
    #Wait Until Keyword Succeeds    3x    250ms    Wait Until Element Is Not Visible    id=upload_animation
    Run Keyword If    "${Job}" == "True"    Run Keywords    Wait Until Element Contains    //h6[@id="upload_animation"]    程式環境準備中
    ...    AND    Wait Until Element Contains    //h6[@id="upload_animation"]    程式執行中    timeout=300
    ...    AND    Wait Until Element Contains    //div[@id="data_upload"]//div[@class="file_select_name"]    未選擇任何檔案    timeout=600
    ...    ELSE    Wait Until Element Contains    //div[@id="data_upload"]//div[@class="file_select_name"]    未選擇任何檔案
    # Verify Result Error (If has)
    ${Element msg}=    Run Keyword If    "${Expected msg}" != "${EMPTY}" and "${Msg from where}" == "result"    Get Text    ${Msg location.${Msg from where}}
    Run Keyword If    "${Expected msg}" != "${EMPTY}" and "${Msg from where}" == "result"    Should Contain    ${Element msg}    ${Expected msg}
    Run Keyword If    "${Expected msg}" != "${EMPTY}" and "${Msg from where}" == "result"    Return From Keyword
    # Verify: verify uploading result, the final uploaded result will always be on the top. (1st row)
    Element Should Contain    //div[@id="evaluation_result"]//tr[contains(@class,"upload_inf")][1]//span[@class="uploader"]    ${Upload account}
    ${File path}    ${Uploaded file name}=    Split Path    ${File location}
    ${Uploaded file name}=    Set Variable If    "${Job}" == "True"    result.csv    ${Uploaded file name}
    ${Fist 16 chars file name}=    Get Substring    ${Uploaded file name}    0    16
    Element Should Contain    //div[@id="evaluation_result"]//tr[contains(@class,"upload_inf")][1]/td[1]    ${Fist 16 chars file name}
    # Verify: verify uploading result score, the score should be the same for result number
    ${Real score}=    Run Keyword If    "${Expect score}" != "${EMPTY}"    Get Text    //div[@id="public"]//tr[contains(@class,"upload_inf")][1]//td[contains(@class,"accuracy")]/h6
    Run Keyword If    "${Expect score}" != "${EMPTY}"    Should Be Equal    "${Real score}"    "${Expect score}"
    Run Keyword If    "${Detail}" == "True"    Run Keywords    Click Element    //div[@id="public"]//tr[contains(@class,"upload_inf")][1]//i
    ...    AND    Run Keyword And Return    Get Text    //div[@id="public"]//tr[contains(@class,"upload_inf")][1]/following-sibling::tr

Check Upload Score Is Correct
    [Arguments]    ${Topic name}    ${Input type}    ${Board type}    ${Expect score1}    ${Expect score2}=${EMPTY}    ${Expect score3}=${EMPTY}    ${Topic type}=topic
    [Documentation]    Upload two file to see if the rank will show correct
    ...    - ${Topic name}: the topic you are going to download file from.
    ...    - ${Input type}: the type of input topic name( ``name`` | ``id`` )
    ...    - ${Board type}: the type of board( ``public`` | ``private`` )
    ...    - ${Expected score1}: the first expected score
    ...    - ${Expected score2}: the second expected score
    ...    - ${Expected score3}: the third expected score
    Go To Topic    ${Topic name}    Input type=${Input type}    Topic type=${Topic type}    Tablist=上傳
    # Verify: verify uploading result score, the score should be the same for result number
    Run Keyword If    "${Board type}"=="private"    Click Element    //div[@id="leaderboard"]//label[text()="Private Leaderboard"]
    ${Real score1}=    Wait Until Keyword Succeeds    3s    1s    Get Text    //div[@id="${Board type}"]//tr[contains(@class,"upload_inf")][1]//td[contains(@class,"accuracy")]/h6
    Should Be Equal    "${Real score1}"    "${Expect score1}"
    # For multiple score check
    Run Keyword If    "${Expect score2}"=="${EMPTY}"    Return From Keyword    0
    ${Real score2}=    Wait Until Keyword Succeeds    3s    1s    Get Text    //div[@id="${Board type}"]//tr[contains(@class,"upload_inf")][2]//td[contains(@class,"accuracy")]/h6
    Should Be Equal    "${Real score2}"    "${Expect score2}"
    Run Keyword If    "${Expect score3}"=="${EMPTY}"    Return From Keyword    0
    ${Real score3}=    Wait Until Keyword Succeeds    3s    1s    Get Text    //div[@id="${Board type}"]//tr[contains(@class,"upload_inf")][3]//td[contains(@class,"accuracy")]/h6
    Should Be Equal    "${Real score3}"    "${Expect score3}"

Check Upload Rank Is Correct
    [Arguments]    ${Topic name}    ${Expect rank}    ${Input type}=name    ${Board type}=public    ${Topic type}=topic
    [Documentation]    Upload two file to see if the rank will show correct
    ...    - ${Topic name}: the topic you are going to download file from.
    ...    - ${Expect rank}: the expected rank
    ...    - ${Input type}: the type of input topic name( ``name`` | ``id``)
    ...    - ${Board type}: the type of board( ``public`` | ``private`` )
    Go To Topic    ${Topic name}    Input type=${Input type}    Topic type=${Topic type}    Tablist=上傳
    # Verify: verify ranking result, the rank should be true
    Run Keyword If    "${Board type}"=="private"    Click Element    //div[@id="leaderboard"]//label[text()="Private Leaderboard"]
    Sleep    5s
    Wait Until Page Contains Element    //div[@id="${Board type}"]//tr[contains(@class,"upload_inf")][1]    5
    ${content}=    Get Text    //div[@id="${Board type}"]//tr[contains(@class,"upload_inf")][1]//td[contains(@class,"accuracy")][2]/h6
    Should Be Equal    "${content}"    "${Expect rank}"

Check Leaderboard Is Correct
    [Arguments]    ${Topic name}    ${Expect user}    ${Expect ranks}    ${Expect score}    ${Input type}=name    ${Board type}=public    ${Other score}=${EMPTY}
    [Documentation]    Check public or private leaderboard show class, score ,and rank correctly
    ...    - ${Topic name}: the topic you are going to download file from.
    ...    - ${Expect user}: the expected user
    ...    - ${Expect ranks}: the expected ranks(public[0] & private[1])
    ...    - ${Expect score}: the expected score
    ...    - ${Input type}: the type of input topic name( ``name`` | ``id``)
    ...    - ${Board type}: the type of board( ``public`` | ``private`` )
    Go To Topic    ${gTopic ID Now}    Input type=id    Tablist=排行榜
    ${boardID}=    Run Keyword If    "${Board type}"=="public"    Set Variable    o_li-for-panel-1
    ...    ELSE IF    "${Board type}"=="private"    Set Variable    o_li-for-panel-2
    Wait Until Page Contains Element    //li[@id="${boardID}"]
    Run Keyword If    "${Board type}"=="private"    Click Element    //li[@id="${boardID}"]
    Wait Until Page Contains Element    //div[@id="o_r_${Board type}"]
    Page Should Contain Element    //div[@id="o_r_${Board type}"]//td[contains(@class,"name") and text()="${Expect user}"]
    #my team with highlight
    Page Should Contain Element    //div[@id="o_r_${Board type}"]//tr[@class="my_team_rank"]//td[contains(@class,"name") and text()="${Expect user}"]
    #other without highlight
    ${hlcount}=    Get Element Count    //div[@id="o_r_${Board type}"]//tr[@class="my_team_rank"]//td[contains(@class,"name") and text()="${Expect user}"]
    Should Be Equal    ${hlcount}    ${1}
    #check score
    Page Should Contain Element    //div[@id="o_r_${Board type}"]//td[contains(@class,"name") and text()="${Expect user}"]/following-sibling::td[contains(@class,"name") and text()="${Expect score}"]
    #check rank number
    Run Keyword If    "${Board type}"=="public"    Page Should Contain Element    //div[@id="o_r_${Board type}"]//td[contains(@class,"name") and text()="${Expect user}"]/preceding-sibling::td[@class="ranking_num" and text()="${Expect ranks[0]}"]
    Run Keyword If    "${Board type}"=="private"    Run Keywords    Page Should Contain Element    //div[@id="o_r_${Board type}"]//td[contains(@class,"name") and text()="${Expect user}"]/preceding-sibling::td[contains(@class,"ranking_right") and normalize-space(text())="${Expect ranks[1]}"]
    ...    AND    Page Should Contain Element    //div[@id="o_r_${Board type}"]//td[contains(@class,"name") and text()="${Expect user}"]/preceding-sibling::td[contains(@class,"ranking_num") and text()="${Expect ranks[0]}"]
    #check the rising or falling arrow
    ...    ELSE IF    "${Board type}"=="private" and ${Expect ranks[1]}>${Expect ranks[0]}    Page Should Contain Element    //div[@id="o_r_${Board type}"]//td[contains(@class,"name") and text()="${Expect user}"]/preceding-sibling::td/i[contains(@class,"icon-jiantou31")]
    ...    ELSE IF    "${Board type}"=="private" and ${Expect ranks[1]}<${Expect ranks[0]}    Page Should Contain Element    //div[@id="o_r_${Board type}"]//td[contains(@class,"name") and text()="${Expect user}"]/preceding-sibling::td/i[contains(@class,"icon-jiantou32")]
    ...    ELSE IF    "${Board type}"=="private" and ${Expect ranks[1]}==${Expect ranks[0]}    Page Should Not Contain Element    //div[@id="o_r_${Board type}"]//td[contains(@class,"name") and text()="${Expect user}"]/preceding-sibling::td/i
    # other_metrics
    ${listsize}=    Get length    ${Other score}
    FOR    ${INDEX}    IN RANGE    ${listsize}
        Page Should Contain Element    //div[@id="o_r_${Board type}"]//td[contains(@class,"name") and text()="${Expect user}"]/following-sibling::th[text()="${Other score[${INDEX}]}"]
    END

Download Data From Topic
    [Arguments]    ${Topic name}    ${File name}    ${Need sign NDA}=N    ${Input type}=name    ${External}=N
    [Documentation]    Download file from topic to default download folder of local machine.
    ...    - ${Topic name}: the topic you are going to download file from.
    ...    - ${File name}: the file your want to download.
    ...    - ${Need sign NDA}: if user is first time downloading it, need to sign NDA so you can download. default is no need to sign NDA.
    ...    - ${Input type}: the type of input topic name( ``name`` | ``id`` )
    ...
    ...    Example:
    ...    | Download Data From Topic | ${gTest Topic} | upload_sample.zip | N |
    ...
    ...    Note:
    ...    - This keywords will delete possible downloaded file name in download folder before start downloading.
    ...    - *Action for Signing NDA is still in developing process, if specify with "Y" won't work.*
    Go To Topic    ${Topic name}    Input type=${Input type}    Tablist=資料
    Wait Until Page Contains Element    //li[@data-tab="d_dataset"]
    # Delete possible legacy from previous testing.
    ${Exist file}=    Run Keyword And Return Status    File Should Exist    ${gDefault download dir}${/}${File name}*
    Run KeyWord If    ${Exist file}==True    Remove File    ${gDefault download dir}${/}${File name}*
    # Download file
    Click Element    //li[@data-tab="d_dataset"]
    Wait Until Page Contains Element    //div[@id="d_dataset"]
    Click Element    //a[contains(text(),"${File name}")]
    Run Keyword If    "${Need sign NDA}" == "Y"    Sign NDA And Download File    ${File name}
    Run Keyword If    "${External}" == "N"    Run Keywords     Check if file downloaded is done    ${File name}
    ...    AND    Remove File    ${gDefault download dir}${/}${File name}

Check EULA
    [Documentation]    Check if eula is be signed
    # EULA should present in page.
    Element Should Not Be Visible    //div[@class="eula"]
    Element Should Not Be Visible    //label[@class="check-box" and @for="eula_agreement"]

Sign NDA And Download File
    [Arguments]    ${File name}
    [Documentation]    Sign NDA
    ...    - ${File name}: the file want to download
    # NDA should present in page.
    Page Should Contain Element    //div[@class="nda_popup"]
    Page Should Contain Element    //label[@class="check-box" and @for="nda_check"]
    Page Should Contain Element    id=submit    # 下載
    # Sing NDA And Download File
    Click Element    //text()[contains(.,"$File name")]/..
    Comment    Click Element    id=submit
    Comment    Click Link    //a[contains(@class,"btn_data_download") and contains(text(), "${File name}")]

Sign Up To Sign NDA
    [Arguments]    ${Topic name}    ${Input type}=name    ${Flow type}=register    ${Window width}=1920    ${Join}=Yes    ${Topic type}=topic
    [Documentation]    Sign up for the topic to get more permissions.
    ...    - ${Topic name}: the topic you want to upload data to.
    ...    - ${Input type}: the type of input topic name( ``name`` | ``id`` )
    ...    - ${Topic type}:the type of topic.( ``topic`` | ``course`` | ``aicup`` )
    Go To Topic    ${Topic name}    Input type=${Input type}    Window width=${Window width}    Topic type=${Topic type}
    Run Keyword If    "${Flow type}"=="simple"    Run Keywords    Click Element    //a[contains(text(),'資料')]
    ...    AND    Wait Until Element Is Enabled    //li[@data-tab="d_dataset"]
    ...    AND    Click Element    //li[@data-tab="d_dataset"]
    ...    AND    Wait Until Page Contains Element    //div[@id="d_dataset"]
    ...    AND    Click Element    //*[@id="topic-data"]/section/div/div/div/div/div/div/div/div[1]/a
    ...    ELSE    Click Element    //div[@id="register_topic"]
    Wait Until Element Is Visible    //input[@id="submit_nda"]
    Click Element    //label[@class="check-box" and @for="nda_check"]
    Run Keyword If    "${Join}"=="Yes"    Click Element    //label[@class="check-box" and @for="join_condition_check"]
    Set Focus To Element    id=submit_nda    #BUG? Not focused in width 1080 mobile emulation
    Click Element    id=submit_nda

Multiple Sign Up
    [Arguments]    ${Topic name}    ${Input type}=name    ${Window width}=1920    ${Team}=Yes    ${Topic type}=topic    ${Members}=t1    ${Expect}=1
    [Documentation]    multiple sign up topic by API script
    ${result}=    Run    python3 ${CURDIR}${/}..${/}Scripts${/}enclosed_register_user.py -t ${Topic name} -s ${gTest server argument} -u ${Members}
    Should Contain    ${result}    Everything is OK!
    # Zero for enclosed topic (without participant showing)
    Run Keyword If    "${Expect}" > "0"    Wait Until Keyword Succeeds    20s    5s    Check Excepted Numbers of Participants    ${Topic name}    Input type=${Input type}    Window width=${Window width}    Team=${Team}    Topic type=${Topic type}    Expect=${Expect}

Check Excepted Numbers of Participants
    [Arguments]    ${Topic name}    ${Input type}=name    ${Window width}=1920    ${Team}=Yes    ${Topic type}=topic    ${Expect}=1
    [Documentation]    check excepted numbers of participants
    Go To Topic    ${Topic name}    Input type=${Input type}    Window width=${Window width}    Topic type=${Topic type}
    ${signed}=    Get Text    //div[@id='countdown']//h2
    Run Keyword If    "${Team}"=="Yes"    Should Be Equal    ${signed}    ${Expect} / ${Expect}
    ...    ELSE    Should Be Equal    ${signed}    ${Expect}

Check If Message Existed In Discussion Zone Of Topic
    [Arguments]    ${Message}    ${Post account}=${gTest account}    ${Post time}=${EMPTY}
    [Documentation]    Check if desired message is in the discussion zone of such topic.
    ...    - can be specified by posting time because there may be the same message content (the only difference is posting time).
    ...
    ...    Argument
    ...    - ${Message}: Xpath of messages you want to check.
    ...    - ${Post account}: the message poster, default is global test account.
    ...    - ${Post time}: The format is followed by OCAIP message block's format. (default: no check)
    ...
    ...    Return value:
    ...    - ${Wanted msg}: the posted message location.
    ...
    ...    Example
    ...    | Check If Message Existed In Discussion Of Topic | This is Topic 1 | \ I am Message |
    ...    | Check If Message Existed In Discussion Of Topic | I am Message | u1 | 2018/02/08 18:22 |
    # Check if there's such message.
    ${Location to find msg}=    Set Variable    //div[contains(@class,"message_content")]//p[${Message}]
    ${Location to find user}=    Set Variable    /../../../div[contains(@class,"message_personal") and .//*[text()="${Post account}"]]    # Only for appending to above location.
    ${Location to find time}=    Set Variable    /../div[contains(@class,"message_personal") and .//*[text()="${Post time}"]]    # Only for appending to above location.
    ${Wanted msg}=    Set Variable If    "${Post time}" == "${EMPTY}"    ${Location to find msg}${Location to find user}    "${Post time}" != "${EMPTY}"    ${Location to find msg}${Location to find user}${Location to find time}    # Only specify the message location and user. (will find the first matched one)
    # Due to location "more" will be appended at last, we choose to start with "msg" then "user and time", which is the same layer with "more".    # Specify the message location with specific posted time.
    Log    ${Wanted msg}
    Page Should Contain Element    ${Wanted msg}    There should be a Xpath element "${Message}" posted by "${Post account}" at "${Post time}"(empty if not specified) here but not.
    [Return]    ${Wanted msg}

Post A Message To Topic
    [Arguments]    ${Topic name}    ${Post Message}    ${Expect Message}    ${Input type}=name    ${Post account}=${gTest account}    ${mode}=normal
    [Documentation]    Post a message to the topic.
    ...
    ...    Argument
    ...    - ${Topic name}: topic the message posted on.
    ...    - ${Post Message}: messages you want to post.
    ...    - ${Expect Message}: the expected message show in page
    ...    - ${Input type}: the type of input
    ...    - ${Post account}: the message poster, default is global test account.
    ...    - ${mode}: skip go to topic or not (*normal* |*fast*)
    ...
    ...    Return value:
    ...    - The message posted time, user can catch it for further usage.
    ...
    ...    Example:
    ...    | Post A Message To Topic | ${gTest topic} | Hi this is a message |
    ...    |Hi this is a message | ${Msg post time}= | Post A Message To Topic | ${gTest topic} | Hi this is a message |
    Run Keyword If    "${mode}"=="normal"    Go To Topic    ${Topic name}    Input type=${Input type}    Tablist=討論
    # Click posting button.
    Wait Until Page Contains Element    id=post_message
    Wait Until Keyword Succeeds    10s    0.5s    Wait Until Element Is Visible    id=post_message
    FOR    ${index}    IN RANGE    10
        Sleep    1s
        ${flag1}    Run Keyword And Return Status    Click Element    id=post_message
        Sleep    1s
        Continue For Loop If    "${flag1}"=="False"
        ${flag2}    Run Keyword And Return Status    Element Should Be Visible    id=comment
        Sleep    1s
        Continue For Loop If    "${flag2}"=="False"
        ${flag3}    Run Keyword And Return Status    Input Text    id=comment    ${Post Message}
        Exit For Loop If    "${flag1}"=="True" and "${flag2}"=="True" and "${flag3}"=="True"
    END
    # Input message.
    Wait Until Keyword Succeeds    10s    1s    Click Element    id=submit_message
    Wait Until Dom Ready
    # Verify posted result.
    # New posted message will be on the top.
    ${Latest msg location}=    Set Variable    //div[@id="topic-discuss"]//div[@class="message_list"][last()]
    Element Should Contain    ${Latest msg location}//div[contains(@class,"message_personal")]    ${Post account}
    ${Expect Message}=    Replace String    ${Expect Message}    '    "
    Element Should Contain    ${Latest msg location}//div[contains(@class,"message_content")]//div[contains(@class,"m_content")]    ${Expect Message}
    ${Post time}=    Get Text    ${Latest msg location}//div[contains(@class,"message_personal")]//span
    [Return]    ${Post time}

Delete A Message From Topic
    [Arguments]    ${Topic name}    ${Message}    ${Post account}=${gTest account}    ${Post time}=${EMPTY}    ${Input type}=name    ${self}=yes
    [Documentation]    Delete a specific message from topic.
    ...    - can be specified by posting time because there may be the same message content (the only difference is posting time).
    ...
    ...    Argument
    ...    - ${Topic name}: topic the message posted on.
    ...    - ${Message}: messages you want to delete.
    ...    - ${Post account}: the message poster, default is global test account.
    ...    - ${Post time}: The format is followed by OCAIP message block's format. (default: no check)
    ...    - ${Input type}: the type of input topic name( ``name`` | ``id`` )
    ...    - ${self}: the message is self or not( ``yes`` | ``no`` )
    ...    Example
    ...    | Delete A Message from Topic | This is Topic 1 | \ I am Message |
    ...    | Delete A Message from Topic | This is Topic 1 | I am Message | u1 | 2018/02/08 18:22 |
    Go To Topic    ${Topic name}    Input type=${Input type}    Tablist=討論
    # Check if there's such message.
    ${Wanted msg}=    Check If Message Existed In Discussion Zone Of Topic    ${Message}    ${Post account}    ${Post time}
    Log    ${Wanted msg}
    # Delete message.
    Run Keyword If    "${self}"=="yes"    Wait Until Page Contains Element    ${Wanted msg}//div[contains(@class,"delete")]/i[@id="delete_discuss"]
    ...    ELSE    Run Keywords    Page Should Not Contain Element    ${Wanted msg}//div[contains(@class,"delete")]/i[@id="delete_discuss"]
    ...    AND    Return From Keyword    0    # If match expected error, finish this keyword.
    Customized Mouse Over    ${Wanted msg}
    Wait Until Element Is Enabled    ${Wanted msg}//div[contains(@class,"delete")]/i[@id="delete_discuss"]
    Click Element    ${Wanted msg}//div[contains(@class,"delete")]/i[@id="delete_discuss"]    # 刪除留言
    # Verify posted result.
    Wait Until Page Does Not Contain Element    ${Wanted msg}

Like Message Of Topic
    [Arguments]    ${Topic name}    ${Message}    ${Post account}=${gTest account}    ${Post time}=${EMPTY}    ${Input type}=name
    [Documentation]    Like the message from the topic.
    ...    - can be specified by posting time because there may be the same message content (the only difference is posting time).
    ...    - will check if the amount of like number is +1 after liking it.
    ...
    ...    Argument
    ...    - ${Topic name}: topic the message posted on.
    ...    - ${Message}: messages you want to delete.
    ...    - ${Post account}: the message poster, default is global test account.
    ...    - ${Post time}: The format is followed by OCAIP message block's format. (default: no check)
    ...    Example
    ...    | Like Message Of Topic | This is Topic 1 | \ I am Message |
    ...    | Like Message Of Topic | This is Topic 1 | I am Message | u1 | 2018/02/08 18:22 |
    Go To Topic    ${Topic name}    Input type=${Input type}    Tablist=討論
    # Check if there's such message.
    ${Wanted msg}=    Check If Message Existed In Discussion Zone Of Topic    ${Message}    ${Post account}    ${Post time}
    # Check if such message isL not liked by this user.
    ${Like count before}=    Get Text    ${Wanted msg}//div[@class="number"]
    Page Should Not Contain Element    ${Wanted msg}//div[@class="heart"]/i[@class="iconfont icon-love anim"]    The message should still be unliked but not.    # If liked, the class will have "anim", otherwise doesn't.
    # Like the message.
    Click Element    ${Wanted msg}//div[@class="heart"]
    # Verify it's liked and like count+1.
    Page Should Contain Element    ${Wanted msg}//div[@class="heart"]/i[@class="iconfont icon-love anim"]
    ${Like count after}=    Get Text    ${Wanted msg}//div[@class="number"]
    ${Correct like count}=    Evaluate    ${Like count before} + 1
    Should Be Equal As Integers    ${Correct like count}    ${Like count after}    After "Like" the liked count should be ${Correct like count} but got ${Like count after}.

Dislike Message From Topic
    [Arguments]    ${Topic name}    ${Message}    ${Post account}=${gTest account}    ${Post time}=${EMPTY}    ${Input type}=name
    [Documentation]    Dislike the message of the topic.
    ...    - can be specified by posting time because there may be the same message content (the only difference is posting time).
    ...    - will check if the amount of like number is -1 after disliking it.
    ...
    ...    Argument
    ...    - ${Topic name}: topic the message posted on.
    ...    - ${Message}: messages you want to delete.
    ...    - ${Post account}: the message poster, default is global test account.
    ...    - ${Post time}: The format is followed by OCAIP message block's format. (default: no check)
    ...    - ${Input type}: the type of input topic name( ``name`` | ``id`` )
    ...    Example
    ...    | Dislike Message From Topic | This is Topic 1 | \ I am Message |
    ...    | Dislike Message From Topic | This is Topic 1 | I am Message | u1 | 2018/02/08 18:22 |
    Go To Topic    ${Topic name}    Input type=${Input type}    Tablist=討論
    # Check if there's such message.
    ${Wanted msg}=    Check If Message Existed In Discussion Zone Of Topic    ${Message}    ${Post account}    ${Post time}
    # Check if such message is not liked by this user.
    ${Like count before}=    Get Text    ${Wanted msg}//div[@class="number"]
    Page Should Contain Element    ${Wanted msg}//div[@class="heart"]/i[@class="iconfont icon-love anim"]    The message should be liked but not.    # If liked, the class will have "anim", otherwise doesn't.
    # Dislike the message.
    Click Element    ${Wanted msg}//div[@class="heart"]
    # Verify it's liked and like count-1.
    Page Should Contain Element    ${Wanted msg}//div[@class="heart"]/i[@class="iconfont icon-love"]
    ${Like count after}=    Get Text    ${Wanted msg}//div[@class="number"]
    ${Correct like count}=    Evaluate    ${Like count before} - 1
    Should Be Equal As Integers    ${Correct like count}    ${Like count after}    After "Like" the liked count should be ${Correct like count} but got ${Like count after}.

Check Zero Message From Topic
    [Arguments]    ${Topic name}    ${Input type}=name
    [Documentation]    Check if there is any message from the topic
    Go To Topic    ${Topic name}    Input type=${Input type}    Tablist=討論
    #verify if there exist any message on it
    Page Should Contain Element    //div[@id="topic-discuss"]//div[contains(@class,"empty_status")]    尚無討論，你可以成為第一個

Click Many Times Of Like To Check Correct
    [Arguments]    ${Topic name}    ${Message}    ${Click times}    ${Posted user}=${gTest account}    ${Posted time}=${EMPTY}    ${Input type}=name
    [Documentation]    Check if the page will show correct after clicking many times of likes
    ...    - can be specified by posting time because there may be the same message content (the only difference is posting time).
    ...    - will check if the amount of like number is +1 after liking it.
    ...
    ...    Argument
    ...    - ${Topic name}: topic the message posted on.
    ...    - ${Message}: messages you want to delete.
    ...    - ${Click times}: how many times to click
    ...    - ${Posted user}: the message poster, default is global test account.
    ...    - ${Posted time}: The format is followed by OCAIP message block's format. (default: no check)
    ...    - ${Input type}: the type of input topic name( ``name`` | ``id`` )
    ...    Example
    ...    | Like Message Of Topic | This is Topic 1 | 10 |\ I am Message |
    ...    | Like Message Of Topic | This is Topic 1 | 10 |I am Message | u1 | 2018/02/08 18:22 |
    Go To Topic    ${Topic name}    Input type=${Input type}    Tablist=討論
    # Check if there's such message.
    ${Wanted msg}=    Check If Message Existed In Discussion Zone Of Topic    ${Message}    ${Posted user}    ${Posted time}
    # Get the initial count of heart and state
    ${Like count before}=    Get Text    ${Wanted msg}//div[@class="number"]
    ${Heart state} =    Get Element Attribute    ${Wanted msg}//div[@class="heart"]//i[contains(@class,"iconfont icon-love")]    class
    # Click the message many times.
    FOR    ${index}    IN RANGE    ${Click times}
        Click Element    ${Wanted msg}//div[@class="heart"]
        Sleep    0.1s
    END
    # Check if the state of like is correct or incorrect
    ${Like count after}=    Get Text    ${Wanted msg}//div[@class="number"]
    ${Increase value}=    Set Variable If    "${Heart state}" == "iconfont icon-love anim"    -1    1
    ${Odd click result}=    Evaluate    ${Like count before} + ${Increase value}
    ${Correct like count}=    Set Variable If    ${Click times}%2 == 0    ${Like count before}    ${Click times}%2 == 1    ${Odd click result}
    Should Be Equal As Integers    ${Correct like count}    ${Like count after}    After "Like" the liked count should be ${Correct like count} but got ${Like count after}.

Search Specific Strings In Statistics
    [Arguments]    ${Search string}    ${Topic name}    ${Input type}=name
    [Documentation]    Check if every data displayed in the upload record table contains the input search string.
    ...    - ${Search string}: the string want to search
    ...    - ${Topic name}: the topic you want to upload data to.
    ...    - ${Input type}: the type of input topic name( ``name`` | ``id`` )
    Go To Statistics Topic    ${Topic name}    Input type=${Input type}
    Click Element    //div[@class="management_left"]//a//*[text()[contains(.,'上傳紀錄')]]
    Input Text    //div[@id='upload_record_filter']/label/input    ${Search string}
    ${Record info}=    Get Text    //div[@id='upload_record_info']
    ${words}=    Split String    ${Record info}    max_split=6
    ${Record number}=    Set Variable    ${words[5]}
    ${Entry number}=    Execute Javascript    return document.getElementsByTagName("select").upload_record_length.value    # Entry number = 10
    ${Pages}=    Evaluate    math.ceil((${Record number}*1.0) / (${Entry number}*1.0))    math
    FOR    ${index}    IN RANGE    ${Pages}
        ${Row size}=    Execute Javascript    return document.getElementById("upload_record").rows.length
        ${First row}=    Execute Javascript    return document.getElementById("upload_record").rows[1].textContent
        Search Strings Through Whole Table In One Page    ${Search string}    ${Row size}    ${First row}
        Click Element    //a[@id='upload_record_next']
    END

Search Specific Date Intervals In Statistics
    [Arguments]    ${Topic name}    ${Begin date}    ${End date}    ${Input type}=name
    [Documentation]    Check if the upload date of every data displayed in the upload record table is between the input date interval.
    ...    - ${Begin date}: the begin of date to serach
    ...    - ${End date}: the end of date to search
    ...    - ${Topic name}: the topic you want to upload data to.
    ...    - ${Input type}: the type of input topic name( ``name`` | ``id`` )
    Go To Statistics Topic    ${Topic name}    Input type=${Input type}
    Click Element    //div[@class="management_left"]//a//*[text()[contains(.,'上傳紀錄')]]
    Input Text    //input[@id='yadcf-filter--upload_record-from-date-3']    ${Begin date}
    Input Text    //input[@id='yadcf-filter--upload_record-to-date-3']    ${End date}
    Press Keys    //input[@id='yadcf-filter--upload_record-to-date-3']    \\13
    ${Record info}=    Get Text    //div[@id='upload_record_info']
    ${words}=    Split String    ${Record info}    max_split=6
    ${Record number}=    Set Variable    ${words[5]}
    ${Entry number}=    Execute Javascript    return document.getElementsByTagName("select").upload_record_length.value    # Entry number = 10
    ${Pages}=    Evaluate    math.ceil((${Record number}*1.0) / (${Entry number}*1.0))    math
    ${Begin unix}=    Execute Javascript    return Date.parse("${Begin date}")
    ${End unix}=    Execute Javascript    return Date.parse("${End date}")
    ${End unix}=    Evaluate    ${End unix}+86359000
    FOR    ${index}    IN RANGE    ${Pages}
        ${Row size}=    Execute Javascript    return document.getElementById("upload_record").rows.length
        ${First row}=    Execute Javascript    return document.getElementById("upload_record").rows[1].textContent
        Search Date Through Whole Table In One Page    ${Begin date}    ${Begin unix}    ${End unix}    ${Row size}    ${First row}
        Click Element    //a[@id='upload_record_next']
    END

Search Strings Through Whole Table In One Page
    [Arguments]    ${Search string}    ${Row size}    ${First row}
    [Documentation]    Check if every data displayed in the upload record table in one page contains the input search string.
    ...    - ${Search string}: the string want to search
    ...    - ${Row size}: the size of row
    ...    - ${First row}: the first row information
    FOR    ${index}    IN RANGE    1    ${Row size}
        Exit For Loop If    '${First row}' == 'No matching records found'
        Table Row Should Contain    //table[@id='upload_record']    ${index}    ${Search string}    loglevel=INFO
    END

Search Date Through Whole Table In One Page
    [Arguments]    ${Begin date}    ${Begin unix}    ${End unix}    ${Row size}    ${First row}
    [Documentation]    Check if the upload date of every data displayed in the upload record table in one page is between the input date interval.
    ...    - ${Begin date}: the begin date to search
    ...    - ${Begin unix}: the begin search unix
    ...    - ${End unix}: the end search unix
    ...    - ${Row size}: the size of row
    ...    - ${First row}: the first row information
    FOR    ${index}    IN RANGE    1    ${Row size}
        Run Keyword If    ${Begin unix} > ${End unix}    Should Be True    '${First row}' == 'No matching records found'
        Exit For Loop If    '${First row}' == 'No matching records found'
        Run Keyword If    ${Begin unix} == ${End unix}    Table Row Should Contain    //table[@id='upload_record']    ${index}    ${Begin date}
        ...    loglevel=INFO
        ${Date string}=    Run Keyword If    ${Begin unix} < ${End unix}    Get Text    //table[@id='upload_record']/tbody/tr[${index}]/td[4]
        ${Date unix}=    Run Keyword If    ${Begin unix} < ${End unix}    Execute Javascript    return Date.parse("${Date string}")
        Run Keyword If    ${Begin unix} < ${End unix}    Should Be True    ${Begin unix}<=${Date unix}<=${End unix}
    END

Compare Highest Score Of Statistics Analysis And Upload Record
    [Arguments]    ${Topic name}    ${Input type}=name
    [Documentation]    Check if the highest score from the two subpages of statistics are the same.
    ...    - ${Topic name}: the topic you want to upload data to.
    ...    - ${Input type}: the type of input topic name( ``name`` | ``id`` )
    Go To Statistics Topic    ${Topic name}    ${Input type}
    Click Element    //div[@class="management_left"]//a//*[text()[contains(.,'統計分析')]]
    ${Rank length}=    Execute Javascript    return document.getElementById("personal_ranking").rows.length
    ${FirstPlace User}=    Run Keyword If    "${Rank length}" >= "2"    Get Text    //table[@id='personal_ranking']/tbody/tr/td[2]
    ${FirstPlace Score}=    Run Keyword If    "${Rank length}" >= "2"    Execute Javascript    return Number(document.getElementById("personal_ranking").rows[1].cells[5].innerText)
    ${SecondPlace User}=    Run Keyword If    "${Rank length}" >= "3"    Get Text    //table[@id='personal_ranking']/tbody/tr[2]/td[2]
    ${SecondPlace Score}=    Run Keyword If    "${Rank length}" >= "3"    Execute Javascript    return Number(document.getElementById("personal_ranking").rows[2].cells[5].innerText)
    ${ThirdPlace User}=    Run Keyword If    "${Rank length}" >= "4"    Get Text    //table[@id='personal_ranking']/tbody/tr[3]/td[2]
    ${ThirdPlace Score}=    Run Keyword If    "${Rank length}" >= "4"    Execute Javascript    return Number(document.getElementById("personal_ranking").rows[3].cells[5].innerText)
    Run Keyword If    "${Rank length}" >= "3"    Should Be True    "${FirstPlace Score}" >= "${SecondPlace Score}"
    Run Keyword If    "${Rank length}" >= "4"    Should Be True    "${SecondPlace Score}" >= "${ThirdPlace Score}"
    Click Element    //div[@class="management_left"]//a//*[text()[contains(.,'上傳紀錄')]]
    Run Keyword If    "${Rank length}" >= "2"    Input Text    //div[@id='upload_record_filter']/label/input    ${FirstPlace User}
    ${score}=    Run Keyword If    "${Rank length}" >= "2"    Execute Javascript    return Number(document.getElementById("upload_record").rows[1].cells[4].innerText)
    Run Keyword If    "${Rank length}" >= "2"    Should Be Equal    ${FirstPlace Score}    ${score}
    Run Keyword If    "${Rank length}" >= "3"    Input Text    //div[@id='upload_record_filter']/label/input    ${SecondPlace User}
    ${score}=    Run Keyword If    "${Rank length}" >= "3"    Execute Javascript    return Number(document.getElementById("upload_record").rows[1].cells[4].innerText)
    Run Keyword If    "${Rank length}" >= "3"    Should Be Equal    ${SecondPlace Score}    ${score}
    Run Keyword If    "${Rank length}" >= "4"    Input Text    //div[@id='upload_record_filter']/label/input    ${ThirdPlace User}
    ${score}=    Run Keyword If    "${Rank length}" >= "4"    Execute Javascript    return Number(document.getElementById("upload_record").rows[1].cells[4].innerText)
    Run Keyword If    "${Rank length}" >= "4"    Should Be Equal    ${ThirdPlace Score}    ${score}

Check Previous And Next Page Of Statistics
    [Arguments]    ${Topic name}    ${Input type}=name
    [Documentation]    Check if previous page and next page function are showing correct data (the same data with pressing the page number).
    ...    - ${Topic name}: the topic you want to upload data to.
    ...    - ${Input type}: the type of input topic name( ``name`` | ``id`` )
    Go To Statistics Topic    ${Topic name}    ${Input type}
    Click Element    //div[@class="management_left"]//a//*[text()[contains(.,'上傳紀錄')]]
    ${Record info}=    Get Text    //div[@id='upload_record_info']
    ${words}=    Split String    ${Record info}    max_split=6
    ${Record number}=    Set Variable    ${words[5]}
    ${Entry number}=    Execute Javascript    return document.getElementsByTagName("select").upload_record_length.value    # Entry number = 10
    ${Pages}=    Evaluate    math.ceil((${Record number}*1.0) / (${Entry number}*1.0))    math
    FOR    ${index}    IN RANGE    ${Pages}    # Next page
        ${Record info}=    Get Text    //div[@id='upload_record_info']
        Log    ${Record info}
        ${words}=    Split String    ${Record info}    max_split=6
        Should Be True    ${words[1]}==${index}*${Entry number}+1
        Run Keyword If    ${index}==${Pages}-1 and ${Record number} < (${index}+1)*${Entry number}    Should Be True    ${words[3]}==${Record number}
        ...    ELSE    Should Be True    ${words[3]}==(${index}+1)*${Entry number}
        Click Element    //a[@id='upload_record_next']
    END
    FOR    ${index}    IN RANGE    ${Pages}    # Previous page
        ${Record info}=    Get Text    //div[@id='upload_record_info']
        Log    ${Record info}
        ${words}=    Split String    ${Record info}    max_split=6
        Should Be True    ${words[1]}==(${Pages}-${index}-1)*${Entry number}+1
        Run Keyword If    ${index}== 0 and ${Record number} < ${Pages}*${Entry number}    Should Be True    ${words[3]}==${Record number}
        ...    ELSE    Should Be True    ${words[3]}==(${Pages}-${index})*${Entry number}
        Click Element    //a[@id='upload_record_previous']
    END
    Click Element    //select[@name='upload_record_length']//option[2]
    ${Entry number}=    Execute Javascript    return document.getElementsByTagName("select").upload_record_length.value    # Entry number = 25
    ${Pages}=    Evaluate    math.ceil((${Record number}*1.0) / (${Entry number}*1.0))    math
    FOR    ${index}    IN RANGE    ${Pages}    # Next page
        ${Record info}=    Get Text    //div[@id='upload_record_info']
        Log    ${Record info}
        ${words}=    Split String    ${Record info}    max_split=6
        Should Be True    ${words[1]}==${index}*${Entry number}+1
        Run Keyword If    ${index}==${Pages}-1 and ${Record number} < (${index}+1)*${Entry number}    Should Be True    ${words[3]}==${Record number}
        ...    ELSE    Should Be True    ${words[3]}==(${index}+1)*${Entry number}
        Click Element    //a[@id='upload_record_next']
    END
    FOR    ${index}    IN RANGE    ${Pages}    # Previous page
        ${Record info}=    Get Text    //div[@id='upload_record_info']
        Log    ${Record info}
        ${words}=    Split String    ${Record info}    max_split=6
        Should Be True    ${words[1]}==(${Pages}-${index}-1)*${Entry number}+1
        Run Keyword If    ${index}== 0 and ${Record number} < ${Pages}*${Entry number}    Should Be True    ${words[3]}==${Record number}
        ...    ELSE    Should Be True    ${words[3]}==(${Pages}-${index})*${Entry number}
        Click Element    //a[@id='upload_record_previous']
    END
    Click Element    //select[@name='upload_record_length']//option[3]
    ${Entry number}=    Execute Javascript    return document.getElementsByTagName("select").upload_record_length.value    # Entry number = 50
    ${Pages}=    Evaluate    math.ceil((${Record number}*1.0) / (${Entry number}*1.0))    math
    FOR    ${index}    IN RANGE    ${Pages}    # Next page
        ${Record info}=    Get Text    //div[@id='upload_record_info']
        Log    ${Record info}
        ${words}=    Split String    ${Record info}    max_split=6
        Should Be True    ${words[1]}==${index}*${Entry number}+1
        Run Keyword If    ${index}==${Pages}-1 and ${Record number} < (${index}+1)*${Entry number}    Should Be True    ${words[3]}==${Record number}
        ...    ELSE    Should Be True    ${words[3]}==(${index}+1)*${Entry number}
        Click Element    //a[@id='upload_record_next']
    END
    FOR    ${index}    IN RANGE    ${Pages}    # Previous page
        ${Record info}=    Get Text    //div[@id='upload_record_info']
        Log    ${Record info}
        ${words}=    Split String    ${Record info}    max_split=6
        Should Be True    ${words[1]}==(${Pages}-${index}-1)*${Entry number}+1
        Run Keyword If    ${index}== 0 and ${Record number} < ${Pages}*${Entry number}    Should Be True    ${words[3]}==${Record number}
        ...    ELSE    Should Be True    ${words[3]}==(${Pages}-${index})*${Entry number}
        Click Element    //a[@id='upload_record_previous']
    END
    Click Element    //select[@name='upload_record_length']//option[4]
    ${Entry number}=    Execute Javascript    return document.getElementsByTagName("select").upload_record_length.value    # Entry number = 100
    ${Pages}=    Evaluate    math.ceil((${Record number}*1.0) / (${Entry number}*1.0))    math
    FOR    ${index}    IN RANGE    ${Pages}    # Next page
        ${Record info}=    Get Text    //div[@id='upload_record_info']
        Log    ${Record info}
        ${words}=    Split String    ${Record info}    max_split=6
        Should Be True    ${words[1]}==${index}*${Entry number}+1
        Run Keyword If    ${index}==${Pages}-1 and ${Record number} < (${index}+1)*${Entry number}    Should Be True    ${words[3]}==${Record number}
        ...    ELSE    Should Be True    ${words[3]}==(${index}+1)*${Entry number}
        Click Element    //a[@id='upload_record_next']
    END
    FOR    ${index}    IN RANGE    ${Pages}    # Previous page
        ${Record info}=    Get Text    //div[@id='upload_record_info']
        Log    ${Record info}
        ${words}=    Split String    ${Record info}    max_split=6
        Should Be True    ${words[1]}==(${Pages}-${index}-1)*${Entry number}+1
        Run Keyword If    ${index}== 0 and ${Record number} < ${Pages}*${Entry number}    Should Be True    ${words[3]}==${Record number}
        ...    ELSE    Should Be True    ${words[3]}==(${Pages}-${index})*${Entry number}
        Click Element    //a[@id='upload_record_previous']
    END

Select Data Displayed Numbers Of Statistics
    [Arguments]    ${Topic name}    ${Input type}=name
    [Documentation]    Select different data displayed numbers and check if data showed correctly.
    ...    - ${Topic name}: the topic you want to upload data to.
    ...    - ${Input type}: the type of input topic name( ``name`` | ``id`` )
    Go To Statistics Topic    ${Topic name}    ${Input type}
    Click Element    //div[@class="management_left"]//a//*[text()[contains(.,'上傳紀錄')]]
    ${Record length}=    Execute Javascript    return Number(document.getElementById("upload_record").rows.length)-1
    ${Entry number}=    Execute Javascript    return Number(document.getElementsByTagName("select").upload_record_length.value)
    Should Be True    ${Record length} <= ${Entry number}
    Click Element    //select[@name='upload_record_length']//option[2]
    ${Record length}=    Execute Javascript    return Number(document.getElementById("upload_record").rows.length)-1
    ${Entry number}=    Execute Javascript    return Number(document.getElementsByTagName("select").upload_record_length.value)
    Should Be True    ${Record length} <= ${Entry number}
    Click Element    //select[@name='upload_record_length']//option[3]
    ${Record length}=    Execute Javascript    return Number(document.getElementById("upload_record").rows.length)-1
    ${Entry number}=    Execute Javascript    return Number(document.getElementsByTagName("select").upload_record_length.value)
    Should Be True    ${Record length} <= ${Entry number}
    Click Element    //select[@name='upload_record_length']//option[4]
    ${Record length}=    Execute Javascript    return Number(document.getElementById("upload_record").rows.length)-1
    ${Entry number}=    Execute Javascript    return Number(document.getElementsByTagName("select").upload_record_length.value)
    Should Be True    ${Record length} <= ${Entry number}

Check Sorting Function Of Statistics
    [Arguments]    ${Topic name}    ${Input type}=name
    [Documentation]    Check if upload records are sorted correctly according to user action (click on different columns).
    ...    - ${Topic name}: the topic you want to upload data to.
    ...    - ${Input type}: the type of input topic name( ``name`` | ``id`` )
    Go To Statistics Topic    ${Topic name}    ${Input type}
    Click Element    //div[@class="management_left"]//a//*[text()[contains(.,'上傳紀錄')]]
    Click Element    //table[@id='upload_record']/thead/tr/th[5]    # score increasing
    ${Record info}=    Get Text    //div[@id='upload_record_info']
    ${words}=    Split String    ${Record info}    max_split=6
    ${Record number}=    Set Variable    ${words[5]}
    ${Entry number}=    Execute Javascript    return document.getElementsByTagName("select").upload_record_length.value    # Entry number = 10
    ${Pages}=    Evaluate    math.ceil((${Record number}*1.0) / (${Entry number}*1.0))    math
    ${First row}=    Execute Javascript    return document.getElementById("upload_record").rows[1].textContent
    ${Score text}=    Execute Javascript    return document.getElementById("upload_record").rows[1].cells[4].innerText
    ${Min score}=    Run Keyword If    "${First row}"!="No data available in table" and "${Score text}"!="inf"    Execute Javascript    return Number(document.getElementById("upload_record").rows[1].cells[4].innerText)
    ...    ELSE IF    "${First row}"!="No data available in table" and "${Score text}"=="inf"    Set Variable    10000000
    FOR    ${index}    IN RANGE    ${Pages}
        ${Row size}=    Execute Javascript    return document.getElementById("upload_record").rows.length
        ${First row}=    Execute Javascript    return document.getElementById("upload_record").rows[1].textContent
        ${Min}=    Check Sorting Function Through Whole Table In One Page    ${Row size}    ${First row}    Min=${Min score}    Sort method=increase
        ...    Sort column=score
        ${Min score}=    Set Variable    ${Min}
        Click Element    //a[@id='upload_record_next']
    END
    Click Element    //table[@id='upload_record']/thead/tr/th[5]    # score decreasing
    ${Score text}=    Execute Javascript    return document.getElementById("upload_record").rows[1].cells[4].innerText
    ${Max score}=    Run Keyword If    "${First row}"!="No data available in table" and "${Score text}"!="inf"    Execute Javascript    return Number(document.getElementById("upload_record").rows[1].cells[4].innerText)
    ...    ELSE IF    "${First row}"!="No data available in table" and "${Score text}"=="inf"    Set Variable    10000000
    FOR    ${index}    IN RANGE    ${Pages}
        ${Row size}=    Execute Javascript    return document.getElementById("upload_record").rows.length
        ${First row}=    Execute Javascript    return document.getElementById("upload_record").rows[1].textContent
        ${Max}=    Check Sorting Function Through Whole Table In One Page    ${Row size}    ${First row}    Max=${Max score}    Sort method=decrease
        ...    Sort column=score
        ${Max score}=    Set Variable    ${Max}
        Click Element    //a[@id='upload_record_next']
    END
    Click Element At Coordinates    //table[@id='upload_record']/thead/tr/th[4]/div/div/input[1]    -50    0    # date increasing
    ${Min date}=    Run Keyword If    "${First row}"!="No data available in table"    Execute Javascript    return Date.parse(document.getElementById("upload_record").rows[1].cells[3].innerText)
    FOR    ${index}    IN RANGE    ${Pages}
        ${Row size}=    Execute Javascript    return document.getElementById("upload_record").rows.length
        ${First row}=    Execute Javascript    return document.getElementById("upload_record").rows[1].textContent
        ${Min}=    Check Sorting Function Through Whole Table In One Page    ${Row size}    ${First row}    Min=${Min date}    Sort method=increase
        ...    Sort column=date
        ${Min date}=    Set Variable    ${Min}
        Click Element    //a[@id='upload_record_next']
    END
    Click Element At Coordinates    //table[@id='upload_record']/thead/tr/th[4]/div/div/input[1]    -50    0    # date decreasing
    ${Max date}=    Run Keyword If    "${First row}"!="No data available in table"    Execute Javascript    return Date.parse(document.getElementById("upload_record").rows[1].cells[3].innerText)
    FOR    ${index}    IN RANGE    ${Pages}
        ${Row size}=    Execute Javascript    return document.getElementById("upload_record").rows.length
        ${First row}=    Execute Javascript    return document.getElementById("upload_record").rows[1].textContent
        ${Max}=    Check Sorting Function Through Whole Table In One Page    ${Row size}    ${First row}    Max=${Max date}    Sort method=decrease
        ...    Sort column=date
        ${Max date}=    Set Variable    ${Max}
        Click Element    //a[@id='upload_record_next']
    END
    Click Element    //table[@id='upload_record']/thead/tr/th[3]    # adviser increasing
    ${Min adviser}=    Run Keyword If    "${First row}"!="No data available in table"    Execute Javascript    return document.getElementById("upload_record").rows[1].cells[2].innerText
    FOR    ${index}    IN RANGE    ${Pages}
        ${Row size}=    Execute Javascript    return document.getElementById("upload_record").rows.length
        ${First row}=    Execute Javascript    return document.getElementById("upload_record").rows[1].textContent
        ${Min}=    Check Sorting Function Through Whole Table In One Page    ${Row size}    ${First row}    Min=${Min adviser}    Sort method=increase
        ...    Sort column=adviser
        ${Min adviser}=    Set Variable    ${Min}
        Click Element    //a[@id='upload_record_next']
    END
    Click Element    //table[@id='upload_record']/thead/tr/th[3]    # adviser decreasing
    ${Max adviser}=    Run Keyword If    "${First row}"!="No data available in table"    Execute Javascript    return document.getElementById("upload_record").rows[1].cells[2].innerText
    FOR    ${index}    IN RANGE    ${Pages}
        ${Row size}=    Execute Javascript    return document.getElementById("upload_record").rows.length
        ${First row}=    Execute Javascript    return document.getElementById("upload_record").rows[1].textContent
        ${Max}=    Check Sorting Function Through Whole Table In One Page    ${Row size}    ${First row}    Max=${Max adviser}    Sort method=decrease
        ...    Sort column=adviser
        ${Max adviser}=    Set Variable    ${Max}
        Click Element    //a[@id='upload_record_next']
    END
    Click Element    //table[@id='upload_record']/thead/tr/th[2]    # school increasing
    ${Min school}=    Run Keyword If    "${First row}"!="No data available in table"    Execute Javascript    return document.getElementById("upload_record").rows[1].cells[1].innerText
    FOR    ${index}    IN RANGE    ${Pages}
        ${Row size}=    Execute Javascript    return document.getElementById("upload_record").rows.length
        ${First row}=    Execute Javascript    return document.getElementById("upload_record").rows[1].textContent
        ${Min}=    Check Sorting Function Through Whole Table In One Page    ${Row size}    ${First row}    Min=${Min school}    Sort method=increase
        ...    Sort column=school
        ${Min school}=    Set Variable    ${Min}
        Click Element    //a[@id='upload_record_next']
    END
    Click Element    //table[@id='upload_record']/thead/tr/th[2]    # school decreasing
    ${Max school}=    Run Keyword If    "${First row}"!="No data available in table"    Execute Javascript    return document.getElementById("upload_record").rows[1].cells[1].innerText
    FOR    ${index}    IN RANGE    ${Pages}
        ${Row size}=    Execute Javascript    return document.getElementById("upload_record").rows.length
        ${First row}=    Execute Javascript    return document.getElementById("upload_record").rows[1].textContent
        ${Max}=    Check Sorting Function Through Whole Table In One Page    ${Row size}    ${First row}    Max=${Max school}    Sort method=decrease
        ...    Sort column=school
        ${Max school}=    Set Variable    ${Max}
        Click Element    //a[@id='upload_record_next']
    END
    Click Element    //table[@id='upload_record']/thead/tr/th[1]    # id increasing
    ${Min id}=    Run Keyword If    "${First row}"!="No data available in table"    Execute Javascript    return document.getElementById("upload_record").rows[1].cells[0].innerText
    FOR    ${index}    IN RANGE    ${Pages}
        ${Row size}=    Execute Javascript    return document.getElementById("upload_record").rows.length
        ${First row}=    Execute Javascript    return document.getElementById("upload_record").rows[1].textContent
        ${Min}=    Check Sorting Function Through Whole Table In One Page    ${Row size}    ${First row}    Min=${Min id}    Sort method=increase
        ...    Sort column=id
        ${Min id}=    Set Variable    ${Min}
        Click Element    //a[@id='upload_record_next']
    END
    Click Element    //table[@id='upload_record']/thead/tr/th[1]    # id decreasing
    ${Max id}=    Run Keyword If    "${First row}"!="No data available in table"    Execute Javascript    return document.getElementById("upload_record").rows[1].cells[0].innerText
    FOR    ${index}    IN RANGE    ${Pages}
        ${Row size}=    Execute Javascript    return document.getElementById("upload_record").rows.length
        ${First row}=    Execute Javascript    return document.getElementById("upload_record").rows[1].textContent
        ${Max}=    Check Sorting Function Through Whole Table In One Page    ${Row size}    ${First row}    Max=${Max id}    Sort method=decrease
        ...    Sort column=id
        ${Max id}=    Set Variable    ${Max}
        Click Element    //a[@id='upload_record_next']
    END

Check Sorting Function Through Whole Table In One Page
    [Arguments]    ${Row size}    ${First row}    ${Min}=0    ${Max}=0    ${Sort method}=increase    ${Sort column}=id
    [Documentation]    Check if upload records are sorted correctly in one page according to user action (click on different columns).
    ...    - ${Row size}: the total row number in this page
    ...    - ${First row}: the text content of the first row in this page
    ...    - ${Min}: the minumum value of the table
    ...    - ${Max}: the maximum value of the table
    ...    - ${Sort method}: (``decrease`` | ``increase``)
    ...    - ${Sort column}: the column that user clicked on ( ``id`` | ``school`` | ``adviser`` | ``date`` | ``score`` )
    FOR    ${index}    IN RANGE    1    ${Row size}
        Exit For Loop If    '${First row}' == 'No data available in table'
        ${Score text}=    Run Keyword If    "${Sort column}"=="score"    Execute Javascript    return document.getElementById("upload_record").rows[${index}].cells[4].innerText
        ${Current}=    Run Keyword If    "${Sort column}"=="score" and "${Score text}"!="inf"    Execute Javascript    return Number(document.getElementById("upload_record").rows[${index}].cells[4].innerText)
        ...    ELSE IF    "${Sort column}"=="score" and "${Score text}"=="inf"    Set Variable    10000000
        ...    ELSE IF    "${Sort column}"=="date"    Execute Javascript    return Date.parse(document.getElementById("upload_record").rows[${index}].cells[3].innerText)
        ...    ELSE IF    "${Sort column}"=="adviser"    Execute Javascript    return document.getElementById("upload_record").rows[${index}].cells[2].innerText
        ...    ELSE IF    "${Sort column}"=="school"    Execute Javascript    return document.getElementById("upload_record").rows[${index}].cells[1].innerText
        ...    ELSE IF    "${Sort column}"=="id"    Execute Javascript    return document.getElementById("upload_record").rows[${index}].cells[0].innerText
        ...    ELSE    Fail    input argument error
        Run Keyword If    ("${Sort method}"=="increase") and ("${Sort column}"=="score" or "${Sort column}"=="date")    Should Be True    ${Min} <= ${Current}
        ...    ELSE IF    ("${Sort method}"=="increase") and ("${Sort column}"=="id" or "${Sort column}"=="school" or "${Sort column}"=="adviser")    Should Be True    "${Min}" <= "${Current}"
        ${Min}=    Run Keyword If    "${Sort method}"=="increase"    Set Variable    ${Current}
        ...    ELSE    Set Variable    0
        Run Keyword if    ("${Sort method}"=="decrease") and ("${Sort column}"=="score" or "${Sort column}"=="date")    Should Be True    ${Max} >= ${Current}
        ...    ELSE IF    ("${Sort method}"=="decrease") and ("${Sort column}"=="id" or "${Sort column}"=="school" or "${Sort column}"=="adviser")    Should Be True    "${Max}">="${Current}"
        ${Max}=    Run Keyword If    "${Sort method}"=="decrease"    Set Variable    ${Current}
        ...    ELSE    Set Variable    0
    END
    Return From Keyword If    "${Sort method}"=="increase"    ${Min}
    Return From Keyword If    "${Sort method}"=="decrease"    ${Max}

Check Overview Of Statistics Analysis
    [Arguments]    ${Topic name}    ${Login account}    ${Upload file}    ${Input type}=name
    [Documentation]    Check if overview block of statistics shows correctly or not.
    ...    - ${Upload file}: the upload file
    ...    - ${Topic name}: the topic you want to upload data to.
    ...    - ${Input type}: the type of input topic name( ``name`` | ``id`` )
    ...    - ${Login account}: the login account
    Login To OCAIP    ${gTest semiadmin account}    ${gTest semiadmin password}    Open browser=true
    Go To Statistics Topic    ${Topic name}    Input type=${Input type}
    Click Element    //div[@class="management_left"]//a//*[text()[contains(.,'統計分析')]]
    # previous result
    Wait Until Page Does Not Contain Element    //div[@class='statistics_box']/h3/i
    ${Browse text}=    Get Text    //div[@class='statistics_box'][1]//h3
    ${Download text}=    Get Text    //div[@class='statistics_box'][2]//h3
    ${Upload text}=    Get Text    //div[@class='statistics_box'][3]//h3
    ${Register text}=    Get Text    //div[@class='statistics_box'][4]//h3
    ${Browse number}=    Convert To Integer    ${Browse text}
    ${Download number}=    Convert To Integer    ${Download text}
    ${Upload number}=    Convert To Integer    ${Upload text}
    ${Register number}=    Convert To Integer    ${Register text}
    Switch Browser    1
    #Count browse number +1
    ${signed NDA}=    Run Keyword And Return Status    Check Upload Page Is Available    ${Topic name}    ${Input type}
    #Count register number +1, browse number +2(3)
    Run Keyword If    ${signed NDA}==False    Sign Up to Sign NDA    ${Topic name}    ${Input type}
    #Count download number +1, browse number +1(4)
    Download Data From Topic    ${gTopic ID Now}    File name=test_images_data.zip    Input type=id
    #Count upload number +1, browse number +2(6)
    Upload Result For Topic And Expect Error    ${Topic name}    ${Login account}    ${Upload file}    Input type=${Input type}    Refresh=True    # Normal file
    #Count browse number  +2(8)
    Post A Message To Topic    ${gTopic ID Now}    Post Message=browse    Expect Message=browse    Input type=id    Post account=${Login account}
    Switch Browser    2
    Refresh Page
    # final result
    Wait Until Page Does Not Contain Element    //div[@class='statistics_box']/h3/i
    ${Browse text}=    Get Text    //div[@class='statistics_box'][1]//h3
    ${Download text}=    Get Text    //div[@class='statistics_box'][2]//h3
    ${Upload text}=    Get Text    //div[@class='statistics_box'][3]//h3
    ${Register text}=    Get Text    //div[@class='statistics_box'][4]//h3
    ${New browse number}=    Convert To Integer    ${Browse text}
    ${New download number}=    Convert To Integer    ${Download text}
    ${New upload number}=    Convert To Integer    ${Upload text}
    ${New register number}=    Convert To Integer    ${Register text}
    Run Keyword If    ${signed NDA}==False    Should Be True    ${New browse number} == ${Browse number}+8
    ...    ELSE    Should Be True    ${New browse number} == ${Browse number}+6
    Should Be True    ${New download number} ==${Download number}+1
    Should Be True    ${New Upload number}==${Upload number}+1
    Run Keyword If    ${signed NDA}==False    Should Be True    ${New register number}==${Register number}+1
    ...    ELSE    Should Be True    ${New register number}==${Register number}

Check TeamUp Of Statistics Analysis
    [Arguments]    ${Topic name}    ${Input type}=name
    [Documentation]    check the number of team in statistics page
    Login To OCAIP    ${gTest semiadmin account}    ${gTest semiadmin password}    Open browser=true
    Go To Statistics Topic    ${Topic name}    Input type=${Input type}
    Click Element    //div[@class="management_left"]//a//*[text()[contains(.,'統計分析')]]
    Wait Until Page Does Not Contain Element    //div[@class='statistics_box'][5]/h3/i
    ${Team text}    Get Text    //div[@class='statistics_box'][5]//h3
    ${Previous Team text}    Convert To Integer    ${Team text}
    # t2 sign up issue
    Switch Browser    1
    Logout OCAIP
    Login To OCAIP    ${gTest first account}    ${gTest first password}    Open browser=false
    ${signed NDA}=    Run Keyword And Return Status    Check Upload Page Is Available    ${Topic name}    Input type=id
    Run Keyword If    "${signed NDA}"=="False"    Sign Up To Sign NDA    ${Topic name}    Input type=id
    # t3 sign up issue
    Logout OCAIP
    Login To OCAIP    ${gTest normal account}    ${gTest normal password}    Open browser=false
    ${signed NDA}=    Run Keyword And Return Status    Check Upload Page Is Available    ${Topic name}    Input type=id
    Run Keyword If    "${signed NDA}"=="False"    Sign Up To Sign NDA    ${Topic name}    Input type=id
    # sign in t2 to invite t3
    Logout OCAIP
    Login To OCAIP    ${gTest first account}    ${gTest first password}    Open browser=false
    Send Invitation To Team Up And Expect Error    ${Topic name}    Invite team=t3    Contain team=yes    Input type=id
    Change Team Name And Expect Error    ${Topic name}    Team name=Team_t2t3    Expect msg=隊名更改成功!    Input type=id
    # sign in t3 to accept t2's request
    Logout OCAIP
    Login To OCAIP    ${gTest normal account}    ${gTest normal password}    Open browser=false
    Reply Team Up Invitation    ${Topic name}    Request team=Team_t2t3    Request leader=t2    Operation=accept    Input type=id
    # check record is correct or not
    Logout OCAIP
    Login To OCAIP    ${gTest first account}    ${gTest first password}    Open browser=false
    Check Request Record    ${Topic name}    Invite team=t3    Status=accept    Input type=id
    # Check Statiscs Page
    Switch Browser    2
    Refresh Page
    Wait Until Page Does Not Contain Element    //div[@class='statistics_box'][5]/h3/i
    ${Team text}    Get Text    //div[@class='statistics_box'][5]//h3
    ${New Team text}    Convert To Integer    ${Team text}
    Should Be True    ${New Team text}==${Previous Team text}+1

Check Ranking Of Statistics Analysis
    [Arguments]    ${Topic name}    ${First user}    ${First score}    ${Second user}    ${Second score}    ${Third user}
    ...    ${Third score}    ${Fourth user}    ${Fourth score}    ${Fifth user}    ${Fifth score}    ${Input type}=name
    [Documentation]    Check if the top 5 ranking and scores show as expected.
    Login To OCAIP    ${gTest semiadmin account}    ${gTest semiadmin password}    Open Count browser=true
    Go To Statistics Topic    ${Topic name}    Input type=${Input type}
    Click Element    //div[@class="management_left"]//a//*[text()[contains(.,'統計分析')]]
    ${FirstPlace User}=    Wait Until Keyword Succeeds    10 secs    1 secs    Get Text    //table[@id='personal_ranking']/tbody/tr[1]/td[2]
    ${FirstPlace Score}=    Execute Javascript    return document.getElementById("personal_ranking").rows[1].cells[5].innerText
    ${SecondPlace User}=    Wait Until Keyword Succeeds    10 secs    1 secs    Get Text    //table[@id='personal_ranking']/tbody/tr[2]/td[2]
    ${SecondPlace Score}=    Execute Javascript    return document.getElementById("personal_ranking").rows[2].cells[5].innerText
    ${ThirdPlace User}=    Wait Until Keyword Succeeds    10 secs    1 secs    Get Text    //table[@id='personal_ranking']/tbody/tr[3]/td[2]
    ${ThirdPlace Score}=    Execute Javascript    return document.getElementById("personal_ranking").rows[3].cells[5].innerText
    ${FourthPlace User}=    Wait Until Keyword Succeeds    10 secs    1 secs    Get Text    //table[@id='personal_ranking']/tbody/tr[4]/td[2]
    ${FourthPlace Score}=    Execute Javascript    return document.getElementById("personal_ranking").rows[4].cells[5].innerText
    ${FifthPlace User}=    Wait Until Keyword Succeeds    10 secs    1 secs    Get Text    //table[@id='personal_ranking']/tbody/tr[5]/td[2]
    ${FifthPlace Score}=    Execute Javascript    return document.getElementById("personal_ranking").rows[5].cells[5].innerText
    Should Be Equal    ${First user}    ${FirstPlace User}
    Should Be Equal    ${First score}    ${FirstPlace Score}
    Should Be Equal    ${Second user}    ${SecondPlace User}
    Should Be Equal    ${Second score}    ${SecondPlace Score}
    Should Be Equal    ${Third user}    ${ThirdPlace User}
    Should Be Equal    ${Third score}    ${ThirdPlace Score}
    Should Be Equal    ${Fourth user}    ${FourthPlace User}
    Should Be Equal    ${Fourth score}    ${FourthPlace Score}
    Should Be Equal    ${Fifth user}    ${FifthPlace User}
    Should Be Equal    ${Fifth score}    ${FifthPlace Score}

Check View Percentage Of Statistics Analysis
    [Arguments]    ${Topic name}    ${Expect first percentage}    ${Expect second percentage}    ${Expect third percentage}    ${Expect fourth percentage}    ${Input type}=id
    [Documentation]    Check if the view percentage shows as expected.
    Go To Statistics Topic    ${Topic name}    Input type=${Input type}
    Click Element    //div[@class="management_left"]//a//*[text()[contains(.,'統計分析')]]
    Customized Mouse Over    //div[@id='school_view_ranking']    JS=True
    Customized Mouse Over    //div[@id='school_view_ranking']/div/*[name()='svg']/*[name()='g']/*[name()='g']/*[name()='rect'][1]
    ${First percentage}=    Get Text    //div[@id='school_view_ranking']/div/*[name()='svg']/*[name()='g']/*[name()='text']/*[name()='tspan'][7]
    Customized Mouse Over    //div[@id='school_view_ranking']/div/*[name()='svg']/*[name()='g']/*[name()='g']/*[name()='rect'][2]
    ${Second percentage}=    Get Text    //div[@id='school_view_ranking']/div/*[name()='svg']/*[name()='g']/*[name()='text']/*[name()='tspan'][7]
    Customized Mouse Over    //div[@id='school_view_ranking']/div/*[name()='svg']/*[name()='g']/*[name()='g']/*[name()='rect'][3]
    ${Third percentage}=    Get Text    //div[@id='school_view_ranking']/div/*[name()='svg']/*[name()='g']/*[name()='text']/*[name()='tspan'][7]
    Customized Mouse Over    //div[@id='school_view_ranking']/div/*[name()='svg']/*[name()='g']/*[name()='g']/*[name()='rect'][4]
    ${Fourth percentage}=    Get Text    //div[@id='school_view_ranking']/div/*[name()='svg']/*[name()='g']/*[name()='text']/*[name()='tspan'][7]
    Should Be Equal    ${First percentage}    ${Expect first percentage}
    Should Be Equal    ${Second percentage}    ${Expect second percentage}
    Should Be Equal    ${Third percentage}    ${Expect third percentage}
    Should Be Equal    ${Fourth percentage}    ${Expect fourth percentage}

Check Upload Percentage Of Statistics Analysis
    [Arguments]    ${Topic name}    ${Expect first percentage}    ${Expect second percentage}    ${Expect third percentage}    ${Input type}=id
    [Documentation]    Check if the upload percentage shows as expected.
    Login To OCAIP    ${gTest semiadmin account}    ${gTest semiadmin password}    Open browser=true
    Go To Statistics Topic    ${Topic name}    Input type=${Input type}
    Click Element    //div[@class="management_left"]//a//*[text()[contains(.,'統計分析')]]
    Customized Mouse Over    //div[@id='school_upload_ranking']    JS=True
    Customized Mouse Over    //div[@id='school_upload_ranking']/div/*[name()='svg']/*[name()='g']/*[name()='g']/*[name()='rect'][1]
    ${First percentage}=    Get Text    //div[@id='school_upload_ranking']/div/*[name()='svg']/*[name()='g']/*[name()='text']/*[name()='tspan'][7]
    Customized Mouse Over    //div[@id='school_upload_ranking']/div/*[name()='svg']/*[name()='g']/*[name()='g']/*[name()='rect'][2]
    ${Second percentage}=    Get Text    //div[@id='school_upload_ranking']/div/*[name()='svg']/*[name()='g']/*[name()='text']/*[name()='tspan'][7]
    Customized Mouse Over    //div[@id='school_upload_ranking']/div/*[name()='svg']/*[name()='g']/*[name()='g']/*[name()='rect'][3]
    ${Third percentage}=    Get Text    //div[@id='school_upload_ranking']/div/*[name()='svg']/*[name()='g']/*[name()='text']/*[name()='tspan'][7]
    Should Be Equal    ${First percentage}    ${Expect first percentage}
    Should Be Equal    ${Second percentage}    ${Expect second percentage}
    Should Be Equal    ${Third percentage}    ${Expect third percentage}

Check Download Percentage Of Statistics Analysis
    [Arguments]    ${Topic name}    ${Expect first percentage}    ${Expect second percentage}    ${Expect third percentage}    ${Expect fourth percentage}    ${Input type}=id
    [Documentation]    Check if the download percentage shows as expected.
    Login To OCAIP    ${gTest semiadmin account}    ${gTest semiadmin password}    Open browser=true
    Go To Statistics Topic    ${Topic name}    Input type=${Input type}
    Click Element    //div[@class="management_left"]//a//*[text()[contains(.,'統計分析')]]
    Customized Mouse Over    //div[@id='school_download_ranking']    JS=True
    Customized Mouse Over    //div[@id='school_download_ranking']/div/*[name()='svg']/*[name()='g']/*[name()='g']/*[name()='rect'][1]
    ${First percentage}=    Get Text    //div[@id='school_download_ranking']/div/*[name()='svg']/*[name()='g']/*[name()='text']/*[name()='tspan'][7]
    Customized Mouse Over    //div[@id='school_download_ranking']/div/*[name()='svg']/*[name()='g']/*[name()='g']/*[name()='rect'][2]
    ${Second percentage}=    Get Text    //div[@id='school_download_ranking']/div/*[name()='svg']/*[name()='g']/*[name()='text']/*[name()='tspan'][7]
    Customized Mouse Over    //div[@id='school_download_ranking']/div/*[name()='svg']/*[name()='g']/*[name()='g']/*[name()='rect'][3]
    ${Third percentage}=    Get Text    //div[@id='school_download_ranking']/div/*[name()='svg']/*[name()='g']/*[name()='text']/*[name()='tspan'][7]
    Customized Mouse Over    //div[@id='school_download_ranking']/div/*[name()='svg']/*[name()='g']/*[name()='g']/*[name()='rect'][4]
    ${Fourth percentage}=    Get Text    //div[@id='school_download_ranking']/div/*[name()='svg']/*[name()='g']/*[name()='text']/*[name()='tspan'][7]
    Should Be Equal    ${First percentage}    ${Expect first percentage}
    Should Be Equal    ${Second percentage}    ${Expect second percentage}
    Should Be Equal    ${Third percentage}    ${Expect third percentage}
    Should Be Equal    ${Fourth percentage}    ${Expect fourth percentage}

Check Initial Team Up State
    [Arguments]    ${Topic name}    ${User account}    ${Input type}=id    ${Window width}=1920
    [Documentation]    Assign a leader from team
    ...    - ${Topic name}: the topic you are going to download file from.
    ...    - ${User account}: the user sign up the issue
    ...    - ${Input type}: the type of input topic name( ``name`` | ``id`` )
    [Tags]    TeamUp
    # go the team page
    Go To Topic    ${Topic name}    Input type=${Input type}    Window width=${Window width}    Tablist=組隊
    # Verify my team page
    Page Should Contain    隊名
    Page Should Contain    成員
    Page Should Contain Element    //input[@id="team_name" and @value="${User account}"]
    Page Should Contain Element    //div[contains(@class,"team_member_list")]//h6[text()="${User account}"]/../..//h6[text()="隊長"]
    # Verify send request page
    #current web page need to be fix to execute code below
    Comment    Run Keyword If    ${Window width} < 768    Click Element    //label[@for="myteam-ctrl"]
    Run Keyword If    ${Window width} < 768    Click Element    //label[@id="open-nav-label_t"]
    Click Element    //label[@for="sent_request-ctrl"]
    Page Should Contain    暫無待回應的請求
    # Verify get request page
    Click Element    //label[@for="get_request-ctrl"]
    Page Should Contain    暫無其他邀請

Change Team Name And Expect Error
    [Arguments]    ${Topic name}    ${Team name}    ${Expect msg}    ${Input type}=id
    [Documentation]    change team name and expect the message
    ...    - ${Topic name}: the topic you are going to download file from.
    ...    - ${Team name}: the team name want to change
    ...    - ${Expect msg}: the expect message will appear ( ``隊名更改成功!`` | ``隊名更改失敗，此隊名已存在，請重新再試!`` )
    ...    - ${Input type}: the type of input topic name( ``name`` | ``id`` )
    # go the team page
    Go To Topic    ${Topic name}    Input type=${Input type}    Tablist=組隊
    # input text to change team name
    Wait Until Element Is Visible    id=team_name
    Wait Until Keyword Succeeds    3s    0.5s    Input Text    id=team_name    ${Team name}
    Click Element    id=save
    # get basic message info    team_name
    ${Element validity}=    Run Keyword If    "${Team name}" == "${EMPTY}"    Execute Javascript    var user_e \ = document.getElementById("team_name"); return user_e.checkValidity();    # Get element validity: only username and password field have required attribute, so their validity should be checked.
    ${Validation msg}=    Run Keyword If    "${Team name}" == "${EMPTY}"    Get Element Attribute    id=team_name    validationMessage    # Get error message.
    # Verify the error message is correct or not
    Run Keyword If    "${Team name}" == "${EMPTY}"    Should Be Equal As Strings    ${Element validity}    False
    Run Keyword If    "${Team name}" == "${EMPTY}"    Run Keywords    Should Contain    ${Validation msg}    ${Expect msg}
    ...    AND    Return From Keyword    0    # If match expected error, finish this keyword.
    # verify change is correct or not
    Page Should Contain    ${Expect msg}

Send Invitation To Team Up And Expect Error
    [Arguments]    ${Topic name}    ${Invite team}    ${Contain team}    ${Input type}=id    ${Status}=accept    ${Topic type}=topic
    [Documentation]    Invite other people to join team
    ...    - ${Topic name}: the topic you are going to download file from
    ...    - ${Invite team}: the team or user which be invited
    ...    - ${Contain team}: the team is existed or not (``yes`` | ``no``)
    ...    - ${Input type}: the type of input topic name( ``name`` | ``id`` )
    ...    - ${Topic type}:the type of topic.( ``topic`` | ``course`` | ``aicup`` )
    # go the team page
    Go To Topic    ${Topic name}    Input type=${Input type}    Topic type=${Topic type}    Tablist=組隊
    # invite people to join team
    Wait Until Element Is Visible    id=search_team
    Input Text    id=search_team    ${Invite team}
    Run Keyword If    "${Contain team}" == "no"    Run Keywords    Element Should Be Disabled    id=sent_merge_team_btn
    ...    AND    Return From Keyword    0    # If match expected error, finish this keyword.
    Wait Until Element Is Visible    //ul[@id="ui-id-1"]    # the autocomplete list parent
    # For BUG "Element 'id=sent_merge_team_btn' is disabled"
    Sleep    3s
    Click Element    //li[@class='ui-menu-item'][1]
    Wait Until Keyword Succeeds    10s    1s    Element Should Be Enabled    id=sent_merge_team_btn
    Comment    Click Element    //div[@id="merge_team"]//form//h5
    Wait Until Keyword Succeeds    10s    1s    Click Element    //input[@id="sent_merge_team_btn"]
    # Verify invite send correct or not
    Run Keyword If    "${Status}" == "exceed"    Wait Until Page Contains    兩隊總人數超過限制
    Run Keyword If    "${Status}" == "exceed"    Return From Keyword    0    # If match expected error, finish this keyword.
    Wait Until Page Contains    組隊邀請發送成功!
    Click Element    //label[@for="sent_request-ctrl"]
    Page Should Contain Element    //div[@class="sent_request_list"]//div//h6[text()="${Invite team}"]
    Element Should Contain    //div[@class="sent_request_list"]//div//h6[text()="${Invite team}"]/../..//div[contains(@class,"sent_request_status")]//div    取消

Assign Leader
    [Arguments]    ${Topic name}    ${next leader}    ${Input type}=id
    [Documentation]    Assign a leader from team
    ...    - ${Topic name}: the topic you are going to download file from.
    ...    - ${next leader}: the next leader to be assign
    ...    - ${Input type}: the type of input topic name( ``name`` | ``id`` )
    # go the team page
    Go To Topic    ${Topic name}    Input type=${Input type}    Tablist=組隊
    Page Should Contain Element    //div[contains(@class,"team_member_name")]/h6[text()="${next leader}"]/../../div[contains(@class,"choose_leader")]/button[text()="指派成隊長"]
    Click Element    //div[contains(@class,"team_member_name")]/h6[text()="${next leader}"]/../../div[contains(@class,"choose_leader")]/button[text()="指派成隊長"]
    # Verify the resilt is correct or not
    Page Should Contain    確認指派
    Click ELement    //div[@class="modal fade in"]//button[@id="to_assign"]
    Wait Until Page Contains    指派隊長成功!
    Page Should Contain Element    //div[contains(@class,"team_member_list")]//h6[text()="${next leader}"]/../..//h6[text()="隊長"]

Cancel Team Request
    [Arguments]    ${Topic name}    ${Invite team}    ${Input type}=id
    [Documentation]    Cancel the team request by the team which sent a invitation
    ...    - ${Topic name}: the topic you are going to download file from.
    ...    - ${Invite team}: the team or user which be invited
    ...    - ${Input type}: the type of input topic name( ``name`` | ``id`` )
    # Go to target page
    Go To Topic    ${Topic name}    Input type=${Input type}    Tablist=組隊
    Click Element    //label[@for="sent_request-ctrl"]
    Page Should Contain Element    //div[@class="sent_request_list"]//div//h6[text()="${Invite team}"]/../..//div[contains(@class,"sent_request_status")]//div
    Click Element    //div[@class="sent_request_list"]//div//h6[text()="${Invite team}"]/../..//div[contains(@class,"sent_request_status")]//div
    # verify the result is correct or not
    Sleep    3s
    Page Should Not Contain Element    //div[@class="sent_request_list"]//div//h6[text()="${Invite team}"]/../..//div[contains(@class,"sent_request_status")]//div

Reply Team Up Invitation
    [Arguments]    ${Topic name}    ${Request team}    ${Request leader}    ${Operation}    ${Input type}=id    ${Topic type}=topic
    [Documentation]    Reply the invitation which is sent by other user or team
    ...    - ${Topic name}: the topic you are going to download file from.
    ...    - ${Request team}: the team which send a invitation to other user or team
    ...    - ${Request leader}: the team leader who send a invitation to other user or team
    ...    - ${Operation}: the user operation( ``accept`` | ``reject`` | ``invalid`` | ``exceed`` )
    ...    - ${Input type}: the type of input topic name( ``name`` | ``id`` )
    ...    - ${Topic type}:the type of topic.( ``topic`` | ``course`` | ``aicup`` )
    # Go to target page
    Log    ${Operation}
    Go To Topic    ${Topic name}    Input type=${Input type}    Topic type=${Topic type}    Tablist=組隊
    Wait Until Page Contains Element    //div[@id="merge_info"]
    Click Element    //label[@for="get_request-ctrl"]
    Page Should Contain Element    //div[@class="get_request_list"]//h6[text()="${Request team}"]    #href="#get_request"
    # Accept or reject
    Run Keyword If    "${Operation}" == "reject"    Click Element    //div[@class="get_request_list"]/div/h6[text()="${Request team}"]/../../div/div[text()="拒絕"]
    Run Keyword If    "${Operation}" == "accept"    Click Element    //div[@class="get_request_list"]/div/h6[text()="${Request team}"]/../../div/button[text()="接受"]
    Run Keyword If    "${Operation}"=="invalid"    Click Element    //div[@class="get_request_list"]/div/h6[text()="${Request team}"]/../../div/button[text()="接受"]
    Run Keyword If    "${Operation}"=="exceed"    Click Element    //div[@class="get_request_list"]/div/h6[text()="${Request team}"]/../../div/button[text()="接受"]
    # Verify the result is correct or not
    Sleep    3s
    Run Keyword If    "${Operation}"=="invalid"    Run Keywords    Page Should Contain    此隊伍已其他隊伍併隊，已不存在。
    ...    AND    Click Element    //div[@class="modal-footer"]/button[@id="understand_alert"]
    Run Keyword If    "${Operation}"=="invalid"    Return From Keyword    0
    Run Keyword If    "${Operation}"=="exceed"    Run Keywords    Page Should Contain    兩隊總人數超過限制
    ...    AND    Click Element    //div[@class="modal-footer"]/button[@id="understand_alert"]
    Run Keyword If    "${Operation}"=="exceed"    Return From Keyword    0
    Page Should Not Contain Element    //div[@class="get_request_list"]//h6[text()="${Request team}"]
    Run Keyword If    "${Operation}"=="accept"    Run Keywords    Page Should Not Contain Element    //a[contains(text(),'發出的邀請')]
    ...    AND    Page Should Not Contain Element    //a[contains(text(),'接收邀請')]
    Run Keyword If    "${Operation}"=="accept"    Run Keywords    Element Should Be Disabled    id=team_name
    ...    AND    Element Should Be Disabled    id=sent_merge_team_btn
    Run Keyword If    "${Operation}" == "accept"    Run Keywords    Page Should Contain Element    //div[contains(@class,"team_member_list")]/div/h6[text()="${Request leader}"]
    ...    AND    Page Should Contain    您已是「${Request team}」隊伍的一員，僅有隊長能寄送組隊邀請
    Run Keyword If    "${Operation}" == "accept"    Return From Keyword    0    # If match expected error, finish this keyword.
    Comment    Click Element    //label[@for="myteam-ctrl"]
    Page Should Not Contain Element    //div[@class="team_member_list"]//h6[text()="${request leader}"]

Check Request Record
    [Arguments]    ${Topic name}    ${Invite team}    ${Status}    ${Input type}=id
    [Documentation]    Check teamup request record is correct or not
    ...    - ${Topic name}: the topic you are going to download file from.
    ...    - ${Invite team}: the team or user which be invited
    ...    - ${Status}: the record status( ``accept`` | ``reject`` | ``merged`` | ``wait`` )
    ...    - ${Input type}: the type of input topic name( ``name`` | ``id`` )
    # Go to target page
    Go To Topic    ${Topic name}    Input type=${Input type}    Tablist=組隊
    Run Keyword If    "{Status}" == "accept"    Page Should Contain Element    //div[@class="team_member_list"]//h6[text()="${Invite team}"]
    Click Element    //label[@for="sent_request-ctrl"]
    # Verify the result is correct or not
    Page Should Contain Element    //div[@class="sent_request_list"]//h6[text()="${Invite team}"]
    Run Keyword If    "{Status}" == "accept"    Page Should Contain Element    //div[@class="sent_request_list"]//div//h6[text()='${Invite team}']/../../div//h7[text()='接受']
    Run Keyword If    "{Status}" == "reject"    Page Should Contain Element    //div[@class="sent_request_list"]//div//h6[text()='${Invite team}']/../../div//h7[text()='拒絕']
    Run Keyword If    "${Status}"=="merged"    Page Should Contain Element    //div[@class="sent_request_list"]//div//h6[text()='${Invite team}']/../../div//h7[text()='已被併隊']
    Run Keyword If    "${Status}"=="wait"    Page Should Contain Element    //div[@class="sent_request_list"]/div//h6[text()="${Invite team}"]/../../div[3]/div[text()="取消"]

Check Receive Record
    [Arguments]    ${Topic name}    ${Request team}    ${Status}    ${Input type}=id
    [Documentation]    Check teamup receive record is correct or not
    ...    - ${Topic name}: the topic you are going to download file from.
    ...    - ${Request team}: the team which send a invitation to other user or team
    ...    - ${status}: the status of the invitation that user received( ``cancel`` | ``wait`` )
    ...    - ${Input type}: the type of input topic name( ``name`` | ``id`` )
    # Go to target page
    Go To Topic    ${Topic name}    Input type=${Input type}    Tablist=組隊
    Click Element    //label[@for="get_request-ctrl"]
    Run Keyword If    "${Status}"=="cancel"    Page Should Not Contain Element    //div[@class="get_request_list"]//h6[text()="${Request team}"]
    ...    ELSE    Page Should Contain Element    //div[@class="get_request_list"]//h6[text()="${Request team}"]

Check Team Up Autocomplete
    [Arguments]    ${Topic name}    ${Input text}    ${Expect Length}    ${Expect teams}    ${Input type}=id
    [Documentation]    Check Team Up Autocomplete is correct or not.
    ...    - ${Topic name}: the topic you are going to download file from.
    ...    - ${Input text}: the input text to autocomplete
    ...    - ${Expect Length}: the expect length for the result of autocomplete
    ...    - ${Expect teams}: the expect team names for the result of autocomplete
    ...    - ${Input type}: the type of input topic name( ``name`` | ``id`` )
    # Go to target page
    Go To Topic    ${Topic name}    Input type=${Input type}    Tablist=組隊
    # Check autocomplete
    Sleep    0.5s
    Wait Until Element Is Visible    id=search_team
    Input Text    id=search_team    ${Input text}
    Wait Until Element Is Visible    //ul[@id="ui-id-1"]    # the autocomplete list parent
    # Check length
    ${Length}=    Execute Javascript    return String(document.getElementById("ui-id-1").getElementsByTagName("li").length)
    Should Be Equal    ${Length}    ${Expect Length}
    # Check the autocomplete is correct or not
    @{teams}=    Split String    ${Expect teams}
    FOR    ${index}    IN RANGE    ${Length}
        ${team}=    Execute Javascript    return document.getElementById("ui-id-1").getElementsByTagName("li")[${index}].textContent
        Should Be Equal    @{teams}[${index}]    ${team}
    END

Check Navbar Content
    [Arguments]    ${Login Status}    ${Window size}=small
    [Documentation]    Check Navbar is correct or not
    ...    - ${Login Status}: the login status of the user.
    ...    - ${Window size}: the browser window size (`small` | `normal`)
    # check basic info
    ${Expand_prefix}=    Set Variable If    "${Window size}"=="small"    //div[@id="navbar" and contains(@class,"in")]    ${EMPTY}
    Run Keyword IF    "${Window size}"=="small"    Page Should Not Contain Element    ${Expand_prefix}    # not expand
    #Run Keyword If    "${Window size}"=="small"    Element Should Be Visible    //img[@id="index_menu_burger"]    #Temporarily Comment due to element shift in mobileEmulation
    Run Keyword If    "${Window size}"!="small"    Element Should Not Be Visible    //img[@id="index_menu_burger"]
    Run Keyword IF    "${Window size}"=="small"    Click Element At Coordinates    //img[@id="index_menu_burger"]    0    0
    #Capture Page Screenshot
    # click dropdown button and show correct
    Sleep    1s
    Run Keyword If    "${Window size}"=="small"    Page Should Contain Element    ${Expand_prefix}    # expand
    Page Should Contain Element    ${Expand_prefix}//a[@href="#" and text()="議題"]    # issue
    Page Should Contain Element    ${Expand_prefix}//a[@href="/course"]    # course
    Page Should Contain Element    ${Expand_prefix}//a[@href="#" and text()="競賽"]    # competition
    Page Should Contain Element    ${Expand_prefix}//a[@href="#" and text()="評鑑"]    # career
    Run Keyword If    "${Login Status}"=="false"    Page Should Contain Element    ${Expand_prefix}//button[text()="登入"]    # login icon
    Run Keyword If    "${Login Status}"=="true"    Page Should Contain Element    //div[@id="svg_bell"]
    Run Keyword If    "${Login Status}"=="true"    Page Should Contain Element    ${Expand_prefix}//a[@href="/user_info"]    # profile
    Run Keyword If    "${Login Status}"=="true"    Page Should Contain Element    ${Expand_prefix}//a[@href="/logout"]    # logout

Check Two Image Similarity
    [Arguments]    ${image1}    ${image2}    ${target score}=0.98
    [Documentation]    Compare two image with ssim method and check if the score is greater than the target score
    ...    - ${image1}: the first image file
    ...    - ${image2}: the second image file
    ...    - ${target score}: the target score expect to check
    ${diff result}    Run    python3 ${CURDIR}${/}..${/}Scripts${/}Image_diff.py ${image1} ${image2}
    ${filename}=    Split String From Right    ${image2}    ${/}    2
    Run Keyword And Continue On Failure
    ...    Should Be True    ${diff result} >= ${target score}    msg=Similarity Should Be ${diff result} >= ${target score} File:${filename[1]}${/}${filename[2]}
    ${filename}=    Split String From Right    ${filename[2]}    .    2
    Run Keyword If    ${diff result} < ${target score}    Run    python3 ${CURDIR}${/}..${/}Scripts${/}Image_diff.py ${image1} ${image2} -o ${OUTPUT DIR}${/}${filename[0]}_

Capture Exam Images For User Function
    [Arguments]    ${Window width}    ${Window height}
    [Documentation]    Capture screenshots for small size screen.
    ...    - ${Window width} : the desired screen width
    ...    - ${Window height} : the desired screen height
    Set Window Size    ${Window width}    ${Window height}
    Log    Set Window Size ${Window width}x${Window height}
    ${a}    ${b}=    Get Window Size
    Log    actual size is ${a}x${b}
    ${Postfix}=    Set Variable If    ${Window width} >= 1920    big    ${Window width} == 767    normal    ${Window width} < 767
    ...    small
    Go To Home Page
    Capture Page Screenshot    ${gTemp folder path}${/}home_${Postfix}.png
    Click Element    //div[@id="myCarousel"]/ol/li[1]
    Customized Mouse Over    //div[@class="container-fluid news"]
    Capture Page Screenshot    ${gTemp folder path}${/}home2_${Postfix}.png
    Customized Mouse Over    //div[@class="container-fluid four_zone"]
    Capture Page Screenshot    ${gTemp folder path}${/}home3_${Postfix}.png
    Customized Mouse Over    //div[@class="container-fluid topic_tag"]
    Capture Page Screenshot    ${gTemp folder path}${/}home4_${Postfix}.png
    Customized Mouse Over    //div[@class="container-fluid company"]
    Capture Page Screenshot    ${gTemp folder path}${/}home6_${Postfix}.png
    # Register
    Run Keyword If    ${Window width} < 768    Click Element At Coordinates    //img[@id="index_menu_burger"]    0    0
    Click Element    //button[text()='登入']
    Click Element    //a[text()='註冊']
    Capture Page Screenshot    ${gTemp folder path}${/}register_${Postfix}.png
    # Forget password
    Click Element    //a[text()='登入']
    Click Element    //*[text()='忘記密碼？']
    Click Element    //input[@id='submit_fp']
    Sleep    5s
    Capture Page Screenshot    ${gTemp folder path}${/}forgetpwd_${Postfix}.png
    # Home page and login
    Go To Home Page
    Run Keyword If    ${Window width} < 768    Click Element At Coordinates    //img[@id="index_menu_burger"]    0    0
    Capture Page Screenshot    ${gTemp folder path}${/}icon_${Postfix}.png
    Click Element    //button[text()='登入']
    Sleep    2s
    Capture Page Screenshot    ${gTemp folder path}${/}login_${Postfix}.png
    Input Text    id=username    ${gTest account}
    Input Password    id=password    ${gTest password}
    Click Button    id=submit
    Click Element    //div[@id="svg_bell"]
    # user info
    Go To User Profile    Window width=${Window width}
    Capture Page Screenshot    ${gTemp folder path}${/}profile_${Postfix}.png
    # change password
    Click Element    //a[@href="user_password"]
    Capture Page Screenshot    ${gTemp folder path}${/}changepwd_${Postfix}.png
    # subscription
    Click Element    //a[@href="user_subscription"]
    Capture Page Screenshot    ${gTemp folder path}${/}subscription_${Postfix}.png
    # About
    Go To About Platform
    Capture Page Screenshot    ${gTemp folder path}${/}about_${Postfix}.png
    Customized Mouse Over    //h4[text()="AIdea 運作模式"]/../following-sibling::div
    Capture Page Screenshot    ${gTemp folder path}${/}about2_${Postfix}.png
    Customized Mouse Over    //h4[text()="AIdea 共創平台特⾊"]/../following-sibling::div
    Capture Page Screenshot    ${gTemp folder path}${/}about3_${Postfix}.png
    Customized Mouse Over    //h4[text()="AIdea 應⽤產業領域"]/../following-sibling::div
    Capture Page Screenshot    ${gTemp folder path}${/}about4_${Postfix}.png
    # About Team
    Go To About Team
    Capture Page Screenshot    ${gTemp folder path}${/}team_${Postfix}.png
    # Computing Resources
    Go To Computing Resources
    Capture Page Screenshot    ${gTemp folder path}${/}computing_${Postfix}.png
    # Privacy Policy
    Go To Privacy Policy
    Capture Page Screenshot    ${gTemp folder path}${/}privacy_${Postfix}.png
    # FAQ
    Go To FAQ
    Capture Page Screenshot    ${gTemp folder path}${/}faq_${Postfix}.png
    # Career
    Go To Career    Window width=${Window width}
    Capture Page Screenshot    ${gTemp folder path}${/}career_${Postfix}.png
    # Course List
    Go To Topic List    Window width=${Window width}    Topic type=course
    Capture Page Screenshot    ${gTemp folder path}${/}course_${Postfix}.png
    # CTSP List
    Go To Topic List    Window width=${Window width}    Topic type=ctsp
    Capture Page Screenshot    ${gTemp folder path}${/}ctsp_${Postfix}.png
    # AI Cup List
    Go To Topic List    Window width=${Window width}    Topic type=aicup
    Capture Page Screenshot    ${gTemp folder path}${/}aicup_${Postfix}.png
    # Topic List
    Go To Topic List    Window width=${Window width}
    Capture Page Screenshot    ${gTemp folder path}${/}topiclist_${Postfix}.png

Capture Exam Images For Issue Function
    [Arguments]    ${Topic name}    ${Window width}    ${Window height}    ${Evaluate type}=public
    ...    ${Webflow type}=register    ${Team type}=single    ${Join condition}=yes    ${Input type}=id    ${Issue type}=AOI    ${Rank}=no
    [Documentation]    Capture screenshots for small size screen.
    ...    - ${Topic name} : the topic that is going to be captured
    ...    - ${Window width} : the desired screen width
    ...    - ${Window height} : the desired screen height
    ...    - ${Evaluate type} : the evaluate type of the issue ( ``public`` | ``private`` )
    ...    - ${Webflow type} : the web flow type of the issue ( ``simple`` | ``register`` )
    ...    - ${Team type} : the team type of the issue ( ``single`` | ``team`` )
    ...    - ${Join condition} : whether the issue has join condition check (NDA) or not ( ``yes`` | ``no`` )
    ...    - ${Input type} : the format of ${Topic name} ( ``name`` | ``id`` )
    Set Window Size    ${Window width}    ${Window height}
    Log    Set Window Size ${Window width}x${Window height}
    ${a}    ${b}=    Get Window Size
    Log    actual size is ${a}x${b}
    ${Postfix}=    Set Variable If    ${Window width} >= 1920    big    ${Window width} == 767    normal    ${Window width} < 767
    ...    small
    # 簡介
    Go To Topic List    Window width=${Window width}
    Run Keyword If    "${Input type}"=="id"    Click Element    //a[contains(@href,"${Topic name}")]//div[@class="list_info"]//h4
    ...    ELSE    Click Element    //div[@class="list_info"]//h4[contains(text(),"${Topic name}")]
    Capture Page Screenshot    ${gTemp folder path}${/}intro_${Issue type}_${Postfix}.png
    # 規則
    Execute Javascript    window.scrollTo(0,0)    # make sure element clickable
    Click Element    //a[contains(text(),'規則')]
    Page Should Contain Element    //div[@id='topic-rule']/section/div/div/div/h4
    Capture Page Screenshot    ${gTemp folder path}${/}rule_${Issue type}_${Postfix}.png
    # 資料
    Execute Javascript    window.scrollTo(0,0)    # make sure element clickable
    Click Element    //a[contains(text(),'資料')]
    Click Element    //li[@data-tab="d_rule"]
    Capture Page Screenshot    ${gTemp folder path}${/}datarule_${Issue type}_${Postfix}.png
    Click Element    //li[@data-tab="d_dataset"]
    Capture Page Screenshot    ${gTemp folder path}${/}data_${Issue type}_${Postfix}.png
    # 上傳
    Execute Javascript    window.scrollTo(0,0)    # make sure element clickable
    Click Element    //a[contains(text(),'上傳')]
    Wait Until Element Is Visible    //img[@src='/images/web/no_score.png']
    Run Keyword If    ${Window width} < 768 and "${Evaluate type}"=="private"    Run Keywords    Click Element    //ul[@id="tabs-list"]
    ...    AND    Click Element    //div[@id="leaderboard"]//label[text()="Public Leaderboard"]
    Sleep    3s
    Scroll Element Into View    //div[@id="evaluation_result"]/div[contains(@class,"empty_status")]
    Capture Page Screenshot    ${gTemp folder path}${/}upload_${Issue type}_${Postfix}.png
    Execute Javascript    window.scrollTo(0,0)    # make sure element clickable
    Click Element    //li[@data-tab="u_rule"]
    Capture Page Screenshot    ${gTemp folder path}${/}uploadrule_${Issue type}_${Postfix}.png
    # 討論
    Execute Javascript    window.scrollTo(0,0)    # make sure element clickable
    Click Element    //a[contains(text(),"討論")]
    Capture Page Screenshot    ${gTemp folder path}${/}discuss_${Issue type}_${Postfix}.png
    Click Element    //button[@id="post_message"]
    Sleep    2s
    Capture Page Screenshot    ${gTemp folder path}${/}post_${Issue type}_${Postfix}.png
    Click Element    //div[@id="message"]//button[@class="close"]
    # 組隊
    Run Keyword If    "${Team type}"=="team"    Run Keywords    Click Element    //a[contains(text(),"組隊")]
    ...    AND    Scroll Element Into View    //article[@id="panels_t"]
    Run Keyword If    "${Team type}"=="team"    Capture Page Screenshot    ${gTemp folder path}${/}team_${Issue type}_${Postfix}.png
    Run Keyword If    ${Window width} < 768 and "${Team type}"=="team"    Click Element    //ul[@id="tabs-list_t"]
    Run Keyword If    "${Team type}"=="team"    Click Element    //label[text()='發出的邀請']
    Run Keyword If    ${Window width} < 768 and "${Team type}"=="team"    Click Element    //label[@id="close-nav-label_t"]
    Run Keyword If    "${Team type}"=="team"    Capture Page Screenshot    ${gTemp folder path}${/}request_${Issue type}_${Postfix}.png
    Run Keyword If    ${Window width} < 768 and "${Team type}"=="team"    Click Element    //ul[@id="tabs-list_t"]
    Run Keyword If    "${Team type}"=="team"    Click Element    //label[text()='接收邀請']
    Run Keyword If    ${Window width} < 768 and "${Team type}"=="team"    Click Element    //label[@id="close-nav-label_t"]
    Run Keyword If    "${Team type}"=="team"    Capture Page Screenshot    ${gTemp folder path}${/}join_${Issue type}_${Postfix}.png
    # 排行榜
    Execute Javascript    window.scrollTo(0,0)    # make sure element clickable
    Run Keyword If    "${Rank}"=="yes"    Run Keywords
    ...    Click Element    //a[contains(text(),"排行榜")]
    ...    AND    Wait Until Element Is Visible    //div[@id="ranking_content"]
    Run Keyword If    "${Evaluate type}"=="private" and "${Rank}"=="yes" and ${Window width} < 768    Run Keywords
    ...    Click Element    //ul[@id="o_tabs-list"]
    ...    AND    Click Element    //li[@id="o_li-for-panel-2"]
    ...    ELSE IF    "${Evaluate type}"=="private" and "${Rank}"=="yes"    Click Element    //li[@id="o_li-for-panel-2"]
    Run Keyword If    "${Rank}"=="yes"    Run Keywords
    ...    Scroll Element Into View    //div[@id="ranking_content"]
    ...    AND    Capture Page Screenshot    ${gTemp folder path}${/}rank_${Issue type}_${Postfix}.png
    #developing

Capture Exam Images For Statistics
    [Arguments]    ${Window width}    ${Window height}    ${Evaluate type}=private    ${Join condition}=yes    ${Input type}=id    ${Topic names}=${EMPTY}
    [Documentation]    Capture screenshots for small size screen.
    ...    - ${Topic name} : the topic that is going to be captured
    ...    - ${Window width} : the desired screen width
    ...    - ${Window height} : the desired screen height
    ...    - ${Join condition} : whether the issue has join condition check (NDA) or not ( ``yes`` | ``no`` )
    ...    - ${Input type} : the format of ${Topic name} ( ``name`` | ``id`` )
    Set Window Size    ${Window width}    ${Window height}
    Log    Set Window Size ${Window width}x${Window height}
    ${a}    ${b}=    Get Window Size
    Log    actual size is ${a}x${b}
    ${Postfix}=    Set Variable If    ${Window width} >= 1920    big    ${Window width} == 767    normal    ${Window width} < 767
    ...    small
    Go To Statistics List    Window width=${Window width}
    Capture Page Screenshot    ${gTemp folder path}${/}statistic_list_${Postfix}.png
    Input Text    //div[@id="topic_statistics_filter"]//input    ${gTopic Name Now}
    Click ELement    //div[@id="topic_statistics_list"]//a[text()="${gTopic Name Now}"]
    Sleep    5s
    Capture Page Screenshot    ${gTemp folder path}${/}function_${Postfix}.png
    Click Element    //h6[text()='上傳紀錄']
    Click Element    //th[text()='學校']
    Capture Page Screenshot    ${gTemp folder path}${/}upload_record_${Postfix}.png
    Click Element    //h6[text()='通知管理']
    Capture Page Screenshot    ${gTemp folder path}${/}notification_${Postfix}.png
    Click Element    //h6[text()='用戶列表']
    Capture Page Screenshot    ${gTemp folder path}${/}participant_${Postfix}.png
    Click Element    //h6[text()='最後成績']
    Capture Page Screenshot    ${gTemp folder path}${/}rank_stat_${Postfix}.png
    Click Element    //h6[text()='公佈欄管理']
    Capture Page Screenshot    ${gTemp folder path}${/}board_stat_${Postfix}.png
    Click Element    //h6[text()='議題設定']
    Capture Page Screenshot    ${gTemp folder path}${/}setting_${Postfix}.png
    Click Element    //h6[text()='統計分析']
    Customized Mouse Over    //div[@id="issue_overview"]
    Capture Page Screenshot    ${gTemp folder path}${/}browser_${Postfix}.png
    Customized Mouse Over    //div[@id="ranking"]
    Capture Page Screenshot    ${gTemp folder path}${/}score_${Postfix}.png
    Customized Mouse Over    //div[@id="school_view_ranking"]
    Capture Page Screenshot    ${gTemp folder path}${/}browser_school_${Postfix}.png
    Customized Mouse Over    //div[@id="school_upload"]
    Capture Page Screenshot    ${gTemp folder path}${/}upload_school_${Postfix}.png
    # Must Be Last BUG? Currently Not Working
    Execute Javascript    window.scrollBy(0,500)
    Capture Page Screenshot    ${gTemp folder path}${/}download_school_${Postfix}.png
    Execute Javascript    window.scrollBy(0,700)
    Capture Page Screenshot    ${gTemp folder path}${/}attend_school_${Postfix}.png

Capture Exam Images For Administration
    [Arguments]    ${Window width}    ${Window height}
    [Documentation]    Capture screenshots for small size screen.
    ...    - ${Window width} : the desired screen width
    ...    - ${Window height} : the desired screen height
    Set Window Size    ${Window width}    ${Window height}
    Log    Set Window Size ${Window width}x${Window height}
    ${a}    ${b}=    Get Window Size
    Log    actual size is ${a}x${b}
    ${Postfix}=    Set Variable If    ${Window width} >= 1920    big    ${Window width} == 767    normal    ${Window width} < 767
    ...    small
    Go To Admin Page    Window width=${Window width}
    Capture Page Screenshot    ${gTemp folder path}${/}permission_${Postfix}.png
    Go To Admin Page    Window width=${Window width}    Admin type=平台會員
    Customized Mouse Over    //canvas[@id="chart"]
    Capture Page Screenshot    ${gTemp folder path}${/}member_${Postfix}.png
    Customized Mouse Over    //canvas[@id="chart_year"]
    Capture Page Screenshot    ${gTemp folder path}${/}total_member_${Postfix}.png
    Customized Mouse Over    //table[@id="table"]
    Capture Page Screenshot    ${gTemp folder path}${/}member_table_${Postfix}.png
    Go To Admin Page    Window width=${Window width}    Admin type=人員管理
    Capture Page Screenshot    ${gTemp folder path}${/}role_${Postfix}.png
    Go To Admin Page    Window width=${Window width}    Admin type=公告管理
    Capture Page Screenshot    ${gTemp folder path}${/}announcement_${Postfix}.png
    Go To Admin Page    Window width=${Window width}    Admin type=註冊管理
    Capture Page Screenshot    ${gTemp folder path}${/}invite_${Postfix}.png
    Click Element    //a[text()="非會員邀請"]
    Capture Page Screenshot    ${gTemp folder path}${/}invite2_${Postfix}.png
    Go To Admin Page    Window width=${Window width}    Admin type=系統分析
    Capture Page Screenshot    ${gTemp folder path}${/}analysis_${Postfix}.png
    Go To Admin Page    Window width=${Window width}    Admin type=公佈欄管理
    Capture Page Screenshot    ${gTemp folder path}${/}board_${Postfix}.png
    Go To Admin Page    Window width=${Window width}    Admin type=資源監控
    Capture Page Screenshot    ${gTemp folder path}${/}job_${Postfix}.png
    Click Element    //a[@id="containers_monitor_tab"]
    Capture Page Screenshot    ${gTemp folder path}${/}container_${Postfix}.png
    Click Element    //a[@id="resource_usage_tab"]
    Capture Page Screenshot    ${gTemp folder path}${/}resource_${Postfix}.png
    Go To Admin Page    Window width=${Window width}    Admin type=輪播管理
    Capture Page Screenshot    ${gTemp folder path}${/}carousel_${Postfix}.png

Reorganize Grabbed Images As Answer Layout
    [Arguments]    ${Size path name}=big    ${Postfix name}=big
    [Tags]    Grab_UI_Answer
    Create Directory    ${gTest data path Exam Image}${/}Grab_UI_Answer
    ${Grab answer path}=    Set Variable    ${gTest data path Exam Image}${/}Grab_UI_Answer
    ${Size path}=    Set Variable    ${Grab answer path}${/}${Size path name}
    Remove Directory    ${Size path}    recursive=true
    Create Directory    ${Size path}
    ${Postfix}=    Set Variable    ${Postfix name}
    # Start creating sub folder and moving files.
    Create Directory    ${Size path}${/}pri_single_reg_AOI
    ${Target path}=    Set Variable    ${Size path}${/}pri_single_reg_AOI
    Move File    ${gTemp folder path}${/}post_AOI_${Postfix}.png    ${Target path}${/}post.png
    Move File    ${gTemp folder path}${/}discuss_AOI_${Postfix}.png    ${Target path}${/}discuss.png
    Move File    ${gTemp folder path}${/}upload_AOI_${Postfix}.png    ${Target path}${/}upload.png
    Move File    ${gTemp folder path}${/}uploadrule_AOI_${Postfix}.png    ${Target path}${/}uploadrule.png
    Move File    ${gTemp folder path}${/}datarule_AOI_${Postfix}.png    ${Target path}${/}datarule.png
    Move File    ${gTemp folder path}${/}data_AOI_${Postfix}.png    ${Target path}${/}data.png
    Move File    ${gTemp folder path}${/}rule_AOI_${Postfix}.png    ${Target path}${/}rule.png
    Move File    ${gTemp folder path}${/}intro_AOI_${Postfix}.png    ${Target path}${/}intro.png
    Create Directory    ${Size path}${/}pri_single_reg_hydraulic
    ${Target path}=    Set Variable    ${Size path}${/}pri_single_reg_hydraulic
    Move File    ${gTemp folder path}${/}post_hydraulic_${Postfix}.png    ${Target path}${/}post.png
    Move File    ${gTemp folder path}${/}discuss_hydraulic_${Postfix}.png    ${Target path}${/}discuss.png
    Move File    ${gTemp folder path}${/}upload_hydraulic_${Postfix}.png    ${Target path}${/}upload.png
    Move File    ${gTemp folder path}${/}uploadrule_hydraulic_${Postfix}.png    ${Target path}${/}uploadrule.png
    Move File    ${gTemp folder path}${/}datarule_hydraulic_${Postfix}.png    ${Target path}${/}datarule.png
    Move File    ${gTemp folder path}${/}data_hydraulic_${Postfix}.png    ${Target path}${/}data.png
    Move File    ${gTemp folder path}${/}rule_hydraulic_${Postfix}.png    ${Target path}${/}rule.png
    Move File    ${gTemp folder path}${/}intro_hydraulic_${Postfix}.png    ${Target path}${/}intro.png
    Create Directory    ${Size path}${/}pri_single_reg_taxi
    ${Target path}=    Set Variable    ${Size path}${/}pri_single_reg_taxi
    Move File    ${gTemp folder path}${/}post_taxi_${Postfix}.png    ${Target path}${/}post.png
    Move File    ${gTemp folder path}${/}discuss_taxi_${Postfix}.png    ${Target path}${/}discuss.png
    Move File    ${gTemp folder path}${/}upload_taxi_${Postfix}.png    ${Target path}${/}upload.png
    Move File    ${gTemp folder path}${/}uploadrule_taxi_${Postfix}.png    ${Target path}${/}uploadrule.png
    Move File    ${gTemp folder path}${/}datarule_taxi_${Postfix}.png    ${Target path}${/}datarule.png
    Move File    ${gTemp folder path}${/}data_taxi_${Postfix}.png    ${Target path}${/}data.png
    Move File    ${gTemp folder path}${/}rule_taxi_${Postfix}.png    ${Target path}${/}rule.png
    Move File    ${gTemp folder path}${/}intro_taxi_${Postfix}.png    ${Target path}${/}intro.png
    Create Directory    ${Size path}${/}pub_single_reg_hydraulic
    #${Target path}=    Set Variable    ${Size path}${/}pub_single_reg_hydraulic
    #Move File    ${gTemp folder path}${/}post_hydraulic_public_${Postfix}.png    ${Target path}${/}post.png
    #Move File    ${gTemp folder path}${/}discuss_hydraulic_public_${Postfix}.png    ${Target path}${/}discuss.png
    #Move File    ${gTemp folder path}${/}upload_hydraulic_public_${Postfix}.png    ${Target path}${/}upload.png
    #Move File    ${gTemp folder path}${/}uploadrule_hydraulic_public_${Postfix}.png    ${Target path}${/}uploadrule.png
    #Move File    ${gTemp folder path}${/}datarule_hydraulic_public_${Postfix}.png    ${Target path}${/}datarule.png
    #Move File    ${gTemp folder path}${/}data_hydraulic_public_${Postfix}.png    ${Target path}${/}data.png
    #Move File    ${gTemp folder path}${/}rule_hydraulic_public_${Postfix}.png    ${Target path}${/}rule.png
    #Move File    ${gTemp folder path}${/}intro_hydraulic_public_${Postfix}.png    ${Target path}${/}intro.png
    Create Directory    ${Size path}${/}multistage_pri_team_reg_taxi
    ${Target path}=    Set Variable    ${Size path}${/}multistage_pri_team_reg_taxi
    Move File    ${gTemp folder path}${/}post_multistage_${Postfix}.png    ${Target path}${/}post.png
    Move File    ${gTemp folder path}${/}discuss_multistage_${Postfix}.png    ${Target path}${/}discuss.png
    Move File    ${gTemp folder path}${/}upload_multistage_${Postfix}.png    ${Target path}${/}upload.png
    Move File    ${gTemp folder path}${/}uploadrule_multistage_${Postfix}.png    ${Target path}${/}uploadrule.png
    Move File    ${gTemp folder path}${/}datarule_multistage_${Postfix}.png    ${Target path}${/}datarule.png
    Move File    ${gTemp folder path}${/}data_multistage_${Postfix}.png    ${Target path}${/}data.png
    Move File    ${gTemp folder path}${/}rule_multistage_${Postfix}.png    ${Target path}${/}rule.png
    Move File    ${gTemp folder path}${/}intro_multistage_${Postfix}.png    ${Target path}${/}intro.png
    Move File    ${gTemp folder path}${/}team_multistage_${Postfix}.png    ${Target path}${/}team.png
    Move File    ${gTemp folder path}${/}request_multistage_${Postfix}.png    ${Target path}${/}request.png
    Move File    ${gTemp folder path}${/}join_multistage_${Postfix}.png    ${Target path}${/}join.png
    Move File    ${gTemp folder path}${/}rank_multistage_${Postfix}.png    ${Target path}${/}rank.png
    Create Directory    ${Size path}${/}pub_single_simple_topic_3_4
    ${Target path}=    Set Variable    ${Size path}${/}pub_single_simple_topic_3_4
    Move File    ${gTemp folder path}${/}post_topic_3_4_${Postfix}.png    ${Target path}${/}post.png
    Move File    ${gTemp folder path}${/}discuss_topic_3_4_${Postfix}.png    ${Target path}${/}discuss.png
    Move File    ${gTemp folder path}${/}upload_topic_3_4_${Postfix}.png    ${Target path}${/}upload.png
    Move File    ${gTemp folder path}${/}uploadrule_topic_3_4_${Postfix}.png    ${Target path}${/}uploadrule.png
    Move File    ${gTemp folder path}${/}datarule_topic_3_4_${Postfix}.png    ${Target path}${/}datarule.png
    Move File    ${gTemp folder path}${/}data_topic_3_4_${Postfix}.png    ${Target path}${/}data.png
    Move File    ${gTemp folder path}${/}rule_topic_3_4_${Postfix}.png    ${Target path}${/}rule.png
    Move File    ${gTemp folder path}${/}intro_topic_3_4_${Postfix}.png    ${Target path}${/}intro.png
    Create Directory    ${Size path}${/}statistics
    ${Target path}=    Set Variable    ${Size path}${/}statistics
    Move File    ${gTemp folder path}${/}browser_${Postfix}.png    ${Target path}${/}browser_chart.png
    Move File    ${gTemp folder path}${/}browser_school_${Postfix}.png    ${Target path}${/}browser_school.png
    Move File    ${gTemp folder path}${/}download_school_${Postfix}.png    ${Target path}${/}download_school.png
    Move File    ${gTemp folder path}${/}attend_school_${Postfix}.png    ${Target path}${/}attend_school.png
    Move File    ${gTemp folder path}${/}function_${Postfix}.png    ${Target path}${/}function.png
    Move File    ${gTemp folder path}${/}score_${Postfix}.png    ${Target path}${/}score.png
    Move File    ${gTemp folder path}${/}statistic_list_${Postfix}.png    ${Target path}${/}statistic_list.png
    Move File    ${gTemp folder path}${/}upload_record_${Postfix}.png    ${Target path}${/}upload_record.png
    Move File    ${gTemp folder path}${/}upload_school_${Postfix}.png    ${Target path}${/}upload_school.png
    Move File    ${gTemp folder path}${/}notification_${Postfix}.png    ${Target path}${/}notification.png
    Move File    ${gTemp folder path}${/}participant_${Postfix}.png    ${Target path}${/}participant.png
    Move File    ${gTemp folder path}${/}rank_stat_${Postfix}.png    ${Target path}${/}rank_stat.png
    Move File    ${gTemp folder path}${/}board_stat_${Postfix}.png    ${Target path}${/}board_stat.png
    Move File    ${gTemp folder path}${/}setting_${Postfix}.png    ${Target path}${/}setting.png
    Create Directory    ${Size path}${/}user_function
    ${Target path}=    Set Variable    ${Size path}${/}user_function
    Move File    ${gTemp folder path}${/}team_${Postfix}.png    ${Target path}${/}team.png
    Move File    ${gTemp folder path}${/}computing_${Postfix}.png    ${Target path}${/}computing.png
    Move File    ${gTemp folder path}${/}privacy_${Postfix}.png    ${Target path}${/}privacy.png
    Move File    ${gTemp folder path}${/}about_${Postfix}.png    ${Target path}${/}about.png
    Move File    ${gTemp folder path}${/}about2_${Postfix}.png    ${Target path}${/}about2.png
    Move File    ${gTemp folder path}${/}about3_${Postfix}.png    ${Target path}${/}about3.png
    Move File    ${gTemp folder path}${/}about4_${Postfix}.png    ${Target path}${/}about4.png
    Move File    ${gTemp folder path}${/}changepwd_${Postfix}.png    ${Target path}${/}changepwd.png
    Move File    ${gTemp folder path}${/}subscription_${Postfix}.png    ${Target path}${/}subscription.png
    Move File    ${gTemp folder path}${/}profile_${Postfix}.png    ${Target path}${/}profile.png
    Move File    ${gTemp folder path}${/}login_${Postfix}.png    ${Target path}${/}login.png
    Move File    ${gTemp folder path}${/}icon_${Postfix}.png    ${Target path}${/}loginIcon.png
    Move File    ${gTemp folder path}${/}forgetpwd_${Postfix}.png    ${Target path}${/}forgetpwd.png
    Move File    ${gTemp folder path}${/}register_${Postfix}.png    ${Target path}${/}register.png
    Move File    ${gTemp folder path}${/}home_${Postfix}.png    ${Target path}${/}home.png
    Move File    ${gTemp folder path}${/}home2_${Postfix}.png    ${Target path}${/}home2.png
    Move File    ${gTemp folder path}${/}home3_${Postfix}.png    ${Target path}${/}home3.png
    Move File    ${gTemp folder path}${/}home4_${Postfix}.png    ${Target path}${/}home4.png
    Move File    ${gTemp folder path}${/}home6_${Postfix}.png    ${Target path}${/}home6.png
    Move File    ${gTemp folder path}${/}faq_${Postfix}.png    ${Target path}${/}faq.png
    Move File    ${gTemp folder path}${/}career_${Postfix}.png    ${Target path}${/}career.png
    Move File    ${gTemp folder path}${/}course_${Postfix}.png    ${Target path}${/}course.png
    Move File    ${gTemp folder path}${/}ctsp_${Postfix}.png    ${Target path}${/}ctsp.png
    Move File    ${gTemp folder path}${/}aicup_${Postfix}.png    ${Target path}${/}aicup.png
    Move File    ${gTemp folder path}${/}topiclist_${Postfix}.png    ${Target path}${/}topiclist.png
    Create Directory    ${Size path}${/}administration
    ${Target path}=    Set Variable    ${Size path}${/}administration
    Move File    ${gTemp folder path}${/}permission_${Postfix}.png    ${Target path}${/}permission.png
    Move File    ${gTemp folder path}${/}member_${Postfix}.png    ${Target path}${/}member.png
    Move File    ${gTemp folder path}${/}member_table_${Postfix}.png    ${Target path}${/}member_table.png
    Move File    ${gTemp folder path}${/}total_member_${Postfix}.png    ${Target path}${/}total_member.png
    Move File    ${gTemp folder path}${/}role_${Postfix}.png    ${Target path}${/}role.png
    Move File    ${gTemp folder path}${/}announcement_${Postfix}.png    ${Target path}${/}announcement.png
    Move File    ${gTemp folder path}${/}invite_${Postfix}.png    ${Target path}${/}invite.png
    Move File    ${gTemp folder path}${/}invite2_${Postfix}.png    ${Target path}${/}invite2.png
    Move File    ${gTemp folder path}${/}analysis_${Postfix}.png    ${Target path}${/}analysis.png
    Move File    ${gTemp folder path}${/}board_${Postfix}.png    ${Target path}${/}board.png
    Move File    ${gTemp folder path}${/}job_${Postfix}.png    ${Target path}${/}job.png
    Move File    ${gTemp folder path}${/}container_${Postfix}.png    ${Target path}${/}container.png
    Move File    ${gTemp folder path}${/}resource_${Postfix}.png    ${Target path}${/}resource.png
    Move File    ${gTemp folder path}${/}carousel_${Postfix}.png    ${Target path}${/}carousel.png

Check Bell Message
    [Arguments]    ${Title}=${EMPTY}    ${Message}=${EMPTY}    ${Notify}=No    ${Click}=No
    [Documentation]    Check Bell Message is correct or not.
    ...    - ${Title} : the expect bell title
    ...    - ${Message} : the expect bell message
    ...    - ${Notify}: show bell notification (``Yes`` | ``No``)
    # basic information
    Wait Until Element Is Visible    //div[@id="svg_bell"]
    Click Element    //div[@id="svg_bell"]
    Element Should Be Visible    //li[@class="notification_dropdown_item"]
    Element Text Should Be    //li[@class="notification_dropdown_item"]    快訊
    # check message is correct or not
    Run Keyword If    "${Notify}" == "Yes"    Page Should Contain Element    //span[@id="notify_counter"]
    Run Keyword If    "${Title}" != "${EMPTY}"    Element Should Contain    //li[@class="notification_dropdown_item"][2]//div/h6    ${Title}    # not read message
    Run Keyword If    "${Message}" != "${EMPTY}"    Element Should Contain    //li[@class="notification_dropdown_item"][2]//div/p    ${Message}    # not read message
    Run Keyword If    "${Click}" == "Yes"    Click Element    //li[@class="notification_dropdown_item"][2]//div/h6

Check Time Countdown At Different Stages
    [Arguments]    ${Topic name}    ${Input type}=name    ${Issue type}=begin    ${Flow type}=register
    ...    ${Window width}=1920
    [Documentation]    Check time countdown functions at different stages of AOI topic show correctly or not.
    ...    - ${Topic name}: the topic you want to upload data to.
    ...    - ${Input type}: the type of input topic name( ``name`` | ``id``)
    ...    - ${Issue type}: the status of the issue( ``begin`` | ``continue`` | ``end``)
    ...    - ${Flow type}: the web status flow type of the issue( ``register`` | ``simple``)
    Go To Topic    ${Topic name}    Input type=${Input type}    Window width=${Window width}    Tablist=簡介
    # 檢查元素
    Page Should Contain Element    //div[@id='topic-intro']/section/div/div/div/div/h4
    # 檢查時間是否空值
    Run Keyword If    ("${Issue type}"=="begin" or "${Issue type}"=="continue") and "${Flow type}"=="register"    Run Keywords    Element Text Should Not Be    //span[@class="days time_num"]    00
    ...    AND    Element Text Should Not Be    //span[@class="days time_num"]    NaN
    Run Keyword If    "${Flow type}"=="simple"    Run Keywords    Element Text Should Not Be    //span[@class="days time_num"]    00
    ...    AND    Element Text Should Not Be    //span[@class="days time_num"]    NaN
    # 檢查計時是否倒數
    ${sec1}=    Run Keyword If    ("${Issue type}"=="begin" or "${Issue type}"=="continue") and "${Flow type}"=="register"    Get Text    //span[@class="seconds time_num"]
    Run Keyword If    ("${Issue type}"=="begin" or "${Issue type}"=="continue") and "${Flow type}"=="register"    Sleep    1s
    ${sec2}=    Run Keyword If    ("${Issue type}"=="begin" or "${Issue type}"=="continue") and "${Flow type}"=="register"    Get Text    //span[@class="seconds time_num"]
    Run Keyword If    ("${Issue type}"=="begin" or "${Issue type}"=="continue") and "${Flow type}"=="register"    Should Not Be Equal    ${sec1}    ${sec2}
    Run Keyword If    "${Issue type}"=="end" and "${Flow type}"=="register"    Page Should Not Contain Element    //div[@class="time_countdown"]
    ${sec1}=    Run Keyword If    "${Flow type}"=="simple"    Get Text    //span[@class="seconds time_num"]
    Run Keyword If    "${Flow type}"=="simple"    Sleep    1s
    ${sec2}=    Run Keyword If    "${Flow type}"=="simple"    Get Text    //span[@class="seconds time_num"]
    Run Keyword If    "${Flow type}"=="simple"    Should Not Be Equal    ${sec1}    ${sec2}

Check Functions When Not Login
    [Arguments]    ${Topic name}    ${Input type}=name    ${Team type}=single    ${Window width}=1920
    [Documentation]    Check all functions at different stages of AOI topic are working correctly or not.
    ...    - ${Topic name}: the topic you want to upload data to.
    ...    - ${Input type}: the type of input topic name( ``name`` | ``id``)
    ...    - ${Team type}: the team type of the issue( ``single`` | ``team`` )
    Go To Topic    ${Topic name}    Input type=${Input type}    Window width=${Window width}    Tablist=簡介
    # verify if functions show correct
    # 簡介
    Page Should Contain Element    //div[@id='topic-intro']/section/div/div/div/div/h4
    # 規則
    Click Element    //a[contains(text(),'規則')]
    Page Should Contain Element    //div[@id='topic-rule']/section/div/div/div/h4
    # 資料
    Element Attribute Value Should Be    //a[contains(text(),'資料')]/..    class    disabled
    # 上傳
    Element Attribute Value Should Be    //a[contains(text(),'上傳')]/..    class    disabled
    # 討論
    Element Attribute Value Should Be    //a[contains(text(),'討論')]/..    class    disabled
    # 組隊
    Run Keyword If    "${Team type}"=="team"    Element Attribute Value Should Be    //a[contains(text(),'組隊')]/..    class    disabled

Create A New Role
    [Arguments]    ${Role name}    ${Perms}=all
    [Documentation]    Create a new role for website
    ...    - ${Role name}: the created role name
    ...    - ${Perms}: the permission of the role( ``LIST_VARIABLE`` | ``all`` )
    Go To Admin Page
    ${exist}=    Run Keyword And Return Status    Get Text    //tbody[@id="native_checkbox"]//td[text()='${Role name}']
    Run Keyword If    ${exist} is ${TRUE}    Run Keywords     Return From Keyword
    Input Text    //input[@id='role_name']    ${Role name}
    ${Boxes}=    Get Element Count    //div[@class="form-group col-md-1"]
    FOR    ${INDEX}    IN RANGE    0    ${Boxes}
        ${Role_text}=    Get Text    //label[@for='check_01-${INDEX}']
        Run Keyword If    $Role_text in $Perms or "all" in $Perms    Select Checkbox    //input[@id='check_01-${INDEX}']
    END
    Click Element    id=submit
    Wait Until Element Contains    //div[@class='permission_manage']//div[contains(@class,"alert-success")]     Create role <${Role name}> successfully

Assign A Role To A User
    [Arguments]    ${User account}    ${Role}
    [Documentation]    Assign a website role to an user account
    ${self}=    Run Keyword And Return Status    Check User Profile    ${User account}
    Go To Admin Page    Admin type=人員管理
    ${upper}=    Set Variable    ABCDEFGHIJKLMNOPQRSTUVWXYZ
    ${lower}=    Set Variable    abcdefghijklmnopqrstuvwxyz
    # Avoid uppercase account dismatching
    ${exist}=    Run Keyword And Return Status    Get Text    //table[@id='personnel_table']//td[translate(text(),'${upper}','${lower}')=translate('${User account}','${upper}','${lower}')]
    Run Keyword If    ${exist} is ${TRUE}    Run Keywords    Click Element    //table[@id='personnel_table']//td[translate(text(),'${upper}','${lower}')=translate('${User account}','${upper}','${lower}')]/following-sibling::td//i[@class='fa fa-close']
    ...    AND    Handle Alert
    Run Keyword If    ${exist} is ${TRUE} and ${self} is ${TRUE}    Run Keywords
    ...    Wait Until Element Contains    //div[@class='permission_manage']/div[@class='row']    Can not remove yourself
    ...    AND    Return From Keyword     #Can not remove yourself
    ...    ELSE IF    ${exist} is ${TRUE} and ${self} is ${FALSE}    Wait Until Element Contains    //div[@class='permission_manage']/div[@class='row']    Delete successfully
    Click Element    //button[@class='btn btn_mys']
    Input Text    id=target_username    ${User account}
    Wait Until Element Does Not Contain    id=user_email    Searching
    Element Should Not Contain    id=user_email    User not found
    Click Element    //select[@id='role_select']/option[@value='${Role}']
    Click Element    id=submit
    Wait Until Element Contains    //div[@class='permission_manage']//div[contains(@class,"alert-success")]    Create role successfully

Make Announcements To Topic Members
    [Arguments]    ${Title}    ${Content}    ${Issue}    ${Title en}=${EMPTY}    ${Content en}=${EMPTY}    ${Notification_Type}=參與議題的重要訊息    ${Type}=一般快訊    ${Team}=全部隊伍
    [Documentation]    Make announcements to team members of a topic
    ${stats}=    Run Keyword And Return Status    Element Should Be Disabled    //select[@id='title']
    Customized Select From List By Label    //select[@id='title_type']    ${Type}
    Run Keyword If    ${stats} is ${FALSE}    Run Keywords
    ...    Customized Select From List By Label    //select[@id='notification_type']    ${Notification_Type}
    ...    AND    Customized Select From List By Label    //select[@id='title']    ${Issue}
    ...    AND    Click Element    //select[@id='team']/option[text()='${Team}']
    Run Keyword If    ${stats} is ${FALSE} and "${Issue}"!="ainews" and "${Issue}"!="announcement" and "${Issue}"!="aideanews"
    ...    Page Should Contain Element    //select[@id='team']/preceding-sibling::ul/li/span
    Input Text   //textarea[@id='subtitle']    ${Title}
    Input Text   //textarea[@id='content']    ${Content}
    Run Keyword If    "${Title en}"!="${EMPTY}" and "${Content en}"!="${EMPTY}"    Run Keywords    Input Text   //textarea[@id='subtitle_en']    ${Title en}
    ...    AND    Input Text   //textarea[@id='content_en']    ${Content en}
    Run Keyword If    "${Issue}"=="ainews"
    ...    Input Text    //textarea[@id='hyperlink']    ${gOCAIP URL}/about
    ...    ELSE IF    "${Issue}"!="announcement" and "${Issue}"!="aideanews" and ${stats} is ${FALSE}
    ...    Input Text    //textarea[@id='hyperlink']    ${gOCAIP URL}/topic/${gTopic ID Now}
    Input Date for Datepicker    //input[@id="expiration_date"]    Shift Date=1 days
    Click Element    //input[@id="submit"]
    Wait Until Page Contains    發送通知成功

Select Uploaded Score
    [Arguments]    ${Sequence}=1
    [Documentation]    Select/UnSelect the specific uploaded score.
    Go To Topic    ${gTopic ID Now}    Input type=id    Tablist=上傳
    Click Element    //a[text()="挑選成果"]
    Wait Until Page Contains Element    //table[@id="pickscore"]
    Sleep    3s    #BUG? element is not attached to the page document
    Customized Mouse Over    //table[@id="pickscore"]//tr[${Sequence}]//input
    ${Check}=    Get Element Attribute    //table[@id="pickscore"]//tr[${Sequence}]//input    checked
    Click Element    //table[@id="pickscore"]//tr[${Sequence}]//input
    Wait Until Page Does Not Contain Element    //table[@id="pickscore"]//tr[${Sequence}]//i
    Run Keyword If    "${Check}"=="None"    Checkbox Should Be Selected    //table[@id="pickscore"]//tr[${Sequence}]//input
    ...    ELSE    Checkbox Should Not Be Selected    //table[@id="pickscore"]//tr[${Sequence}]//input

Input Date for Datepicker
    [Arguments]    ${Locator}    ${Shift Date}=${EMPTY}    ${Input Time}=False    ${Expect}=${EMPTY}
    [Documentation]    Input date for datepicker which year field is not only 4 numbers
    ...    - ${Locator}: the element location (xpath)
    ...    - ${Shift Date}: the number shift day, like "3 days"
    ${date}=    Get Current Date
    ${date}=    Run Keyword If    "${Shift Date}"!="${EMPTY}"    Add time To Date    ${date}    ${Shift Date}
    ...    ELSE    Set Variable    ${date}
    ${date year}=    Convert Date    ${date}    result_format=%Y
    ${date month}=    Convert Date    ${date}    result_format=%m
    ${date day}=    Convert Date    ${date}    result_format=%d
    ${time hour}=    Convert Date    ${date}    result_format=%H
    ${time min}=    Convert Date    ${date}    result_format=%M
    ${time sec}=    Convert Date    ${date}    result_format=%S
    # For Statistics datetime Press Keys will reset input position and not from start
    Press Keys    ${Locator}    ARROW_LEFT+ARROW_LEFT+ARROW_LEFT+ARROW_LEFT+ARROW_LEFT+ARROW_LEFT+${date year}+TAB+${date month}+${date day}
    Run Keyword If    "${Input Time}"=="True"
    ...    Press Keys    ${Locator}    ARROW_LEFT+ARROW_LEFT+ARROW_UP+TAB+${time hour}+${time min}+${time sec}

Clear Website Cache
    [Arguments]    ${Topic name}    ${Input type}    ${Window width}    ${Topic type}    ${Target}=topic_list
    [Documentation]    clear website cache for overloading Radis cache BUG (Deprecated Function)
    Login To OCAIP    ${gTest admin account}    ${gTest admin password}    Open browser=true
    Go To Admin Page    Admin type=系統分析
    Click Element    //table[@id="table_cache"]//td[text()="${Target}"]/following-sibling::td/button
    Handle Alert
    Switch Browser    1
    Go To Topic    ${Topic name}    ${Input type}    ${Window width}    ${Topic type}

Check Jobs Monitor Status
    [Arguments]    ${Topic name}    ${User}    ${Sequence}=1    ${Status}=running    ${attempt}=1
    [Documentation]    Check jobs monitor status
    Go To Admin Page    Admin type=資源監控
    Wait Until Page Contains Element    //table[@id="job_table"]
    Customized Select From List By Label    //select[@id="select_topic"]    ${Topic name}
    Wait Until Keyword Succeeds    600    60    Run Keywords    Click Element    //div[@id="jobs_monitor"]/h5/button
    ...    AND    Element Should Contain    //table[@id="job_table"]/tbody/tr[${Sequence}]/td[2]    ${Status}
    ...    AND    Element Should Contain    //table[@id="job_table"]/tbody/tr[${Sequence}]/td[4]    ${User}
    ...    AND    Element Should Contain    //table[@id="job_table"]/tbody/tr[${Sequence}]/td[5]    ${attempt}

Cancel Running Jobs
    [Arguments]    ${User}=${EMPTY}    ${Sequence}=${EMPTY}    ${Status}=all
    [Documentation]    Cancel all or specific status jobs
    Go To Admin Page    Admin type=資源監控
    Wait Until Page Contains Element    //table[@id="job_table"]/tbody/tr
    ${Rows}=    Get Element Count    //table[@id="job_table"]/tbody/tr
    FOR    ${INDEX}    IN RANGE    1    ${Rows}
        ${Exist}=    Run Keyword And Return Status
        ...    Run Keyword If    "${Status}"=="all"    Page Should Contain Element    //table[@id="job_table"]/tbody/tr[${INDEX}]/td[2][contains(text(),"queued") or contains(text(),"preparing") or contains(text(),"running")]
        ...    ELSE    Page Should Contain Element    //table[@id="job_table"]/tbody/tr[${INDEX}]/td[2][contains(text(),"${Status}")]
        Run Keyword If    "${Exist}"=="True"    Run Keywords    Click Element    //table[@id="job_table"]/tbody/tr[${INDEX}]/td[7]/a
        ...    AND    Wait Until Page Contains Element    //div[@id="cancel_comfirm"]
        ...    AND    Click Element    //div[@id="cancel_comfirm"]//button[text()="確定"]
        ...    AND    Wait Until Page Contains Element    //table[@id="job_table"]/tbody/tr[${INDEX}]/td[2][text()="cancelled"]
    END

Accept Cookie Consent
    [Documentation]    Accept cookie consent
    ${cookiecheck}    Run Keyword And Return Status    Element Should Not Be Visible    //span[@id="cookieconsent:desc"]
    Run Keyword If    "${cookiecheck}" == "False"    Click Element    //span[@id="cookieconsent:desc"]/following-sibling::div
    Wait Until Element Is Not Visible    //span[@id="cookieconsent:desc"]

Modify Topic Settings
    [Arguments]    ${Target}    ${Content}=${EMPTY}    ${Type}=textarea
    [Documentation]    modify topic settings by textarea or button
    ${URL}=    Get Location
    Run Keyword If    "${gOCAIP URL}/manager/topic/${gTopic ID Now}" != "${URL}"    Run Keywords
    ...    Go To Statistics Topic    ${gTopic Name Now}    Input type=name
    ...    AND    Click Element    //h6[text()="議題設定"]
    Run Keyword If    "${Type}"=="textarea"
    ...    Input Text    //td[text()="${Target}"]/..//textarea    ${Content}
    ...    ELSE IF    "${Type}"=="button"
    ...    Click Element    //h4[text()="${Target}"]/../following-sibling::div/button
    ...    ELSE IF    "${Type}"=="image"
    ...    Choose File    //input[@id="${Target}"]    ${Content}
    ...    ELSE IF    "${Type}"=="datetime"
    ...    Input Date for Datepicker    //input[@id="textarea_${Target}"]    Shift Date=${Content}    Input Time=True
    ...    ELSE IF    "${Type}"=="list"
    ...    Customized Select From List By Label    //select[@id="select_${Target}"]    ${Content}
    Run Keyword If    "${Type}"!="button"    Run Keywords    Click Element    //td[text()="${Target}"]/..//button
    ...    AND    Alert Should Be Present    Change has been saved

Log Website Version
    [Documentation]    Log Website footer version
    Not Login
    ${ver}=    Get Text    //div[contains(@class,"footer_version")]/p
    ${ver}=    Get Regexp Matches    ${ver}    （(.*)）    1
    Log    ${ver[0]}
    Close Browser

CLI Login
    [Arguments]    ${CLI Account}=${gTest account}    ${CLI Password}=${gTest password}    ${Path}=${/}root${/}.aidea${/}config.txt
    [Documentation]    AIdea CLI login
    ${rc}    ${output}=    Run And Return Rc And Output    printf "${CLI Account}\n${CLI Password}\n" | aidea login
    Should Contain    ${output}    Login OK    msg=${CLI Account} login failed
    Should Be Equal As Integers    ${rc}    0
    File Should Exist    ${Path}
    # Bug? Continuous login without sleep will fail
    Sleep    1s
